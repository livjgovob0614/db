/* vetisamsStub.h
   Generated by gSOAP 2.8.8 from vetisams.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef vetisamsStub_H
#define vetisamsStub_H
#define SOAP_NAMESPACE_OF_empty	""
#define SOAP_NAMESPACE_OF_g2ba	"http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2"
#define SOAP_NAMESPACE_OF_base	"http://api.vetrf.ru/schema/cdm/base"
#define SOAP_NAMESPACE_OF_app	"http://api.vetrf.ru/schema/cdm/application"
#define SOAP_NAMESPACE_OF_dic	"http://api.vetrf.ru/schema/cdm/dictionary/v2"
#define SOAP_NAMESPACE_OF_vd	"http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"
#define SOAP_NAMESPACE_OF_ws	"http://api.vetrf.ru/schema/cdm/application/ws-definitions"
#define SOAP_NAMESPACE_OF_ns2	"http://api.vetrf.ru/schema/cdm/base/ws-definitions"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"
#if GSOAP_VERSION != 20808
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_base__RegisterModificationType
#define SOAP_TYPE_base__RegisterModificationType (216)
/* base:RegisterModificationType */
enum base__RegisterModificationType {base__RegisterModificationType__CREATE = 0, base__RegisterModificationType__FIND_USCOREOR_USCORECREATE = 1, base__RegisterModificationType__UPDATE = 2, base__RegisterModificationType__DELETE = 3, base__RegisterModificationType__MERGE = 4, base__RegisterModificationType__ATTACH = 5, base__RegisterModificationType__SPLIT = 6, base__RegisterModificationType__FORK = 7};
#endif

#ifndef SOAP_TYPE_app__ApplicationStatus
#define SOAP_TYPE_app__ApplicationStatus (223)
/* app:ApplicationStatus */
enum app__ApplicationStatus {app__ApplicationStatus__ACCEPTED = 0, app__ApplicationStatus__IN_USCOREPROCESS = 1, app__ApplicationStatus__COMPLETED = 2, app__ApplicationStatus__REJECTED = 3};
#endif

#ifndef SOAP_TYPE_app__ContentEncoding
#define SOAP_TYPE_app__ContentEncoding (225)
/* app:ContentEncoding */
enum app__ContentEncoding {app__ContentEncoding__plain = 0, app__ContentEncoding__gzip = 1};
#endif

#ifndef SOAP_TYPE_dic__PackageLevelType
#define SOAP_TYPE_dic__PackageLevelType (227)
/* dic:PackageLevelType */
enum dic__PackageLevelType {dic__PackageLevelType__1 = 1, dic__PackageLevelType__2 = 2, dic__PackageLevelType__3 = 3, dic__PackageLevelType__4 = 4, dic__PackageLevelType__5 = 5, dic__PackageLevelType__6 = 6};
#endif

#ifndef SOAP_TYPE_dic__PackingCodeType
#define SOAP_TYPE_dic__PackingCodeType (228)
/* dic:PackingCodeType */
enum dic__PackingCodeType {dic__PackingCodeType__1A = 0, dic__PackingCodeType__1B = 1, dic__PackingCodeType__1D = 2, dic__PackingCodeType__1F = 3, dic__PackingCodeType__1G = 4, dic__PackingCodeType__1W = 5, dic__PackingCodeType__2C = 6, dic__PackingCodeType__3A = 7, dic__PackingCodeType__3H = 8, dic__PackingCodeType__43 = 9, dic__PackingCodeType__44 = 10, dic__PackingCodeType__4A = 11, dic__PackingCodeType__4B = 12, dic__PackingCodeType__4C = 13, dic__PackingCodeType__4D = 14, dic__PackingCodeType__4F = 15, dic__PackingCodeType__4G = 16, dic__PackingCodeType__4H = 17, dic__PackingCodeType__5H = 18, dic__PackingCodeType__5L = 19, dic__PackingCodeType__5M = 20, dic__PackingCodeType__6H = 21, dic__PackingCodeType__6P = 22, dic__PackingCodeType__7A = 23, dic__PackingCodeType__7B = 24, dic__PackingCodeType__8A = 25, dic__PackingCodeType__8B = 26, dic__PackingCodeType__8C = 27, dic__PackingCodeType__AA = 28, dic__PackingCodeType__AB = 29, dic__PackingCodeType__AC = 30, dic__PackingCodeType__AD = 31, dic__PackingCodeType__AE = 32, dic__PackingCodeType__AF = 33, dic__PackingCodeType__AG = 34, dic__PackingCodeType__AH = 35, dic__PackingCodeType__AI = 36, dic__PackingCodeType__AJ = 37, dic__PackingCodeType__AL = 38, dic__PackingCodeType__AM = 39, dic__PackingCodeType__AP = 40, dic__PackingCodeType__AT = 41, dic__PackingCodeType__AV = 42, dic__PackingCodeType__B4 = 43, dic__PackingCodeType__BA = 44, dic__PackingCodeType__BB = 45, dic__PackingCodeType__BC = 46, dic__PackingCodeType__BD = 47, dic__PackingCodeType__BE = 48, dic__PackingCodeType__BF = 49, dic__PackingCodeType__BG = 50, dic__PackingCodeType__BH = 51, dic__PackingCodeType__BI = 52, dic__PackingCodeType__BJ = 53, dic__PackingCodeType__BK = 54, dic__PackingCodeType__BL = 55, dic__PackingCodeType__BM = 56, dic__PackingCodeType__BN = 57, dic__PackingCodeType__BO = 58, dic__PackingCodeType__BP = 59, dic__PackingCodeType__BQ = 60, dic__PackingCodeType__BR = 61, dic__PackingCodeType__BS = 62, dic__PackingCodeType__BT = 63, dic__PackingCodeType__BU = 64, dic__PackingCodeType__BV = 65, dic__PackingCodeType__BW = 66, dic__PackingCodeType__BX = 67, dic__PackingCodeType__BY = 68, dic__PackingCodeType__BZ = 69, dic__PackingCodeType__CA = 70, dic__PackingCodeType__CB = 71, dic__PackingCodeType__CC = 72, dic__PackingCodeType__CD = 73, dic__PackingCodeType__CE = 74, dic__PackingCodeType__CF = 75, dic__PackingCodeType__CG = 76, dic__PackingCodeType__CH = 77, dic__PackingCodeType__CI = 78, dic__PackingCodeType__CJ = 79, dic__PackingCodeType__CK = 80, dic__PackingCodeType__CL = 81, dic__PackingCodeType__CM = 82, dic__PackingCodeType__CN = 83, dic__PackingCodeType__CO = 84, dic__PackingCodeType__CP = 85, dic__PackingCodeType__CQ = 86, dic__PackingCodeType__CR = 87, dic__PackingCodeType__CS = 88, dic__PackingCodeType__CT = 89, dic__PackingCodeType__CU = 90, dic__PackingCodeType__CV = 91, dic__PackingCodeType__CW = 92, dic__PackingCodeType__CX = 93, dic__PackingCodeType__CY = 94, dic__PackingCodeType__CZ = 95, dic__PackingCodeType__DA = 96, dic__PackingCodeType__DB = 97, dic__PackingCodeType__DC = 98, dic__PackingCodeType__DG = 99, dic__PackingCodeType__DH = 100, dic__PackingCodeType__DI = 101, dic__PackingCodeType__DJ = 102, dic__PackingCodeType__DK = 103, dic__PackingCodeType__DL = 104, dic__PackingCodeType__DM = 105, dic__PackingCodeType__DN = 106, dic__PackingCodeType__DP = 107, dic__PackingCodeType__DR = 108, dic__PackingCodeType__DS = 109, dic__PackingCodeType__DT = 110, dic__PackingCodeType__DU = 111, dic__PackingCodeType__DV = 112, dic__PackingCodeType__DW = 113, dic__PackingCodeType__DX = 114, dic__PackingCodeType__DY = 115, dic__PackingCodeType__EC = 116, dic__PackingCodeType__ED = 117, dic__PackingCodeType__EE = 118, dic__PackingCodeType__EF = 119, dic__PackingCodeType__EG = 120, dic__PackingCodeType__EH = 121, dic__PackingCodeType__EI = 122, dic__PackingCodeType__EN = 123, dic__PackingCodeType__FC = 124, dic__PackingCodeType__FD = 125, dic__PackingCodeType__FE = 126, dic__PackingCodeType__FI = 127, dic__PackingCodeType__FL = 128, dic__PackingCodeType__FO = 129, dic__PackingCodeType__FP = 130, dic__PackingCodeType__FR = 131, dic__PackingCodeType__FT = 132, dic__PackingCodeType__FX = 133, dic__PackingCodeType__GB = 134, dic__PackingCodeType__GI = 135, dic__PackingCodeType__GL = 136, dic__PackingCodeType__GR = 137, dic__PackingCodeType__GY = 138, dic__PackingCodeType__GZ = 139, dic__PackingCodeType__HA = 140, dic__PackingCodeType__HB = 141, dic__PackingCodeType__HC = 142, dic__PackingCodeType__HG = 143, dic__PackingCodeType__HN = 144, dic__PackingCodeType__HR = 145, dic__PackingCodeType__IA = 146, dic__PackingCodeType__IB = 147, dic__PackingCodeType__IC = 148, dic__PackingCodeType__ID = 149, dic__PackingCodeType__IE = 150, dic__PackingCodeType__IF = 151, dic__PackingCodeType__IG = 152, dic__PackingCodeType__IH = 153, dic__PackingCodeType__IK = 154, dic__PackingCodeType__IN = 155, dic__PackingCodeType__IZ = 156, dic__PackingCodeType__JB = 157, dic__PackingCodeType__JC = 158, dic__PackingCodeType__JG = 159, dic__PackingCodeType__JR = 160, dic__PackingCodeType__JT = 161, dic__PackingCodeType__JY = 162, dic__PackingCodeType__KG = 163, dic__PackingCodeType__KI = 164, dic__PackingCodeType__LE = 165, dic__PackingCodeType__LG = 166, dic__PackingCodeType__LT = 167, dic__PackingCodeType__LU = 168, dic__PackingCodeType__LV = 169, dic__PackingCodeType__LZ = 170, dic__PackingCodeType__MA = 171, dic__PackingCodeType__MB = 172, dic__PackingCodeType__MC = 173, dic__PackingCodeType__ME = 174, dic__PackingCodeType__MR = 175, dic__PackingCodeType__MS = 176, dic__PackingCodeType__MT = 177, dic__PackingCodeType__MW = 178, dic__PackingCodeType__MX = 179, dic__PackingCodeType__NA = 180, dic__PackingCodeType__NE = 181, dic__PackingCodeType__NF = 182, dic__PackingCodeType__NG = 183, dic__PackingCodeType__NS = 184, dic__PackingCodeType__NT = 185, dic__PackingCodeType__NU = 186, dic__PackingCodeType__NV = 187, dic__PackingCodeType__OT = 188, dic__PackingCodeType__OU = 189, dic__PackingCodeType__P2 = 190, dic__PackingCodeType__PA = 191, dic__PackingCodeType__PB = 192, dic__PackingCodeType__PC = 193, dic__PackingCodeType__PD = 194, dic__PackingCodeType__PE = 195, dic__PackingCodeType__PF = 196, dic__PackingCodeType__PG = 197, dic__PackingCodeType__PH = 198, dic__PackingCodeType__PI = 199, dic__PackingCodeType__PJ = 200, dic__PackingCodeType__PK = 201, dic__PackingCodeType__PL = 202, dic__PackingCodeType__PN = 203, dic__PackingCodeType__PO = 204, dic__PackingCodeType__PP = 205, dic__PackingCodeType__PR = 206, dic__PackingCodeType__PT = 207, dic__PackingCodeType__PU = 208, dic__PackingCodeType__PV = 209, dic__PackingCodeType__PX = 210, dic__PackingCodeType__PY = 211, dic__PackingCodeType__PZ = 212, dic__PackingCodeType__QA = 213, dic__PackingCodeType__QB = 214, dic__PackingCodeType__QC = 215, dic__PackingCodeType__QD = 216, dic__PackingCodeType__QF = 217, dic__PackingCodeType__QG = 218, dic__PackingCodeType__QH = 219, dic__PackingCodeType__QJ = 220, dic__PackingCodeType__QK = 221, dic__PackingCodeType__QL = 222, dic__PackingCodeType__QM = 223, dic__PackingCodeType__QN = 224, dic__PackingCodeType__QP = 225, dic__PackingCodeType__QQ = 226, dic__PackingCodeType__QR = 227, dic__PackingCodeType__QS = 228, dic__PackingCodeType__RD = 229, dic__PackingCodeType__RG = 230, dic__PackingCodeType__RJ = 231, dic__PackingCodeType__RK = 232, dic__PackingCodeType__RL = 233, dic__PackingCodeType__RO = 234, dic__PackingCodeType__RT = 235, dic__PackingCodeType__RZ = 236, dic__PackingCodeType__SA = 237, dic__PackingCodeType__SB = 238, dic__PackingCodeType__SC = 239, dic__PackingCodeType__SD = 240, dic__PackingCodeType__SE = 241, dic__PackingCodeType__SH = 242, dic__PackingCodeType__SI = 243, dic__PackingCodeType__SK = 244, dic__PackingCodeType__SL = 245, dic__PackingCodeType__SM = 246, dic__PackingCodeType__SO = 247, dic__PackingCodeType__SP = 248, dic__PackingCodeType__SS = 249, dic__PackingCodeType__ST = 250, dic__PackingCodeType__SU = 251, dic__PackingCodeType__SV = 252, dic__PackingCodeType__SW = 253, dic__PackingCodeType__SX = 254, dic__PackingCodeType__SY = 255, dic__PackingCodeType__SZ = 256, dic__PackingCodeType__T1 = 257, dic__PackingCodeType__TB = 258, dic__PackingCodeType__TC = 259, dic__PackingCodeType__TD = 260, dic__PackingCodeType__TE = 261, dic__PackingCodeType__TG = 262, dic__PackingCodeType__TI = 263, dic__PackingCodeType__TK = 264, dic__PackingCodeType__TL = 265, dic__PackingCodeType__TN = 266, dic__PackingCodeType__TO = 267, dic__PackingCodeType__TR = 268, dic__PackingCodeType__TS = 269, dic__PackingCodeType__TT = 270, dic__PackingCodeType__TU = 271, dic__PackingCodeType__TV = 272, dic__PackingCodeType__TW = 273, dic__PackingCodeType__TY = 274, dic__PackingCodeType__TZ = 275, dic__PackingCodeType__UC = 276, dic__PackingCodeType__UN = 277, dic__PackingCodeType__VA = 278, dic__PackingCodeType__VG = 279, dic__PackingCodeType__VI = 280, dic__PackingCodeType__VK = 281, dic__PackingCodeType__VL = 282, dic__PackingCodeType__VO = 283, dic__PackingCodeType__VP = 284, dic__PackingCodeType__VQ = 285, dic__PackingCodeType__VR = 286, dic__PackingCodeType__VS = 287, dic__PackingCodeType__VY = 288, dic__PackingCodeType__WA = 289, dic__PackingCodeType__WB = 290, dic__PackingCodeType__WC = 291, dic__PackingCodeType__WD = 292, dic__PackingCodeType__WF = 293, dic__PackingCodeType__WG = 294, dic__PackingCodeType__WH = 295, dic__PackingCodeType__WJ = 296, dic__PackingCodeType__WK = 297, dic__PackingCodeType__WL = 298, dic__PackingCodeType__WM = 299, dic__PackingCodeType__WN = 300, dic__PackingCodeType__WP = 301, dic__PackingCodeType__WQ = 302, dic__PackingCodeType__WR = 303, dic__PackingCodeType__WS = 304, dic__PackingCodeType__WT = 305, dic__PackingCodeType__WU = 306, dic__PackingCodeType__WV = 307, dic__PackingCodeType__WW = 308, dic__PackingCodeType__WX = 309, dic__PackingCodeType__WY = 310, dic__PackingCodeType__WZ = 311, dic__PackingCodeType__XA = 312, dic__PackingCodeType__XB = 313, dic__PackingCodeType__XC = 314, dic__PackingCodeType__XD = 315, dic__PackingCodeType__XF = 316, dic__PackingCodeType__XG = 317, dic__PackingCodeType__XH = 318, dic__PackingCodeType__XJ = 319, dic__PackingCodeType__XK = 320, dic__PackingCodeType__YA = 321, dic__PackingCodeType__YB = 322, dic__PackingCodeType__YC = 323, dic__PackingCodeType__YD = 324, dic__PackingCodeType__YF = 325, dic__PackingCodeType__YH = 326, dic__PackingCodeType__YJ = 327, dic__PackingCodeType__YK = 328, dic__PackingCodeType__YL = 329, dic__PackingCodeType__YM = 330, dic__PackingCodeType__YN = 331, dic__PackingCodeType__YP = 332, dic__PackingCodeType__YQ = 333, dic__PackingCodeType__YR = 334, dic__PackingCodeType__YS = 335, dic__PackingCodeType__YT = 336, dic__PackingCodeType__YV = 337, dic__PackingCodeType__YW = 338, dic__PackingCodeType__YX = 339, dic__PackingCodeType__YY = 340, dic__PackingCodeType__YZ = 341, dic__PackingCodeType__ZA = 342, dic__PackingCodeType__ZB = 343, dic__PackingCodeType__ZC = 344, dic__PackingCodeType__ZD = 345, dic__PackingCodeType__ZF = 346, dic__PackingCodeType__ZG = 347, dic__PackingCodeType__ZH = 348, dic__PackingCodeType__ZJ = 349, dic__PackingCodeType__ZK = 350, dic__PackingCodeType__ZL = 351, dic__PackingCodeType__ZM = 352, dic__PackingCodeType__ZN = 353, dic__PackingCodeType__ZP = 354, dic__PackingCodeType__ZQ = 355, dic__PackingCodeType__ZR = 356, dic__PackingCodeType__ZS = 357, dic__PackingCodeType__ZT = 358, dic__PackingCodeType__ZU = 359, dic__PackingCodeType__ZV = 360, dic__PackingCodeType__ZW = 361, dic__PackingCodeType__ZX = 362, dic__PackingCodeType__ZY = 363, dic__PackingCodeType__ZZ = 364};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseGroup
#define SOAP_TYPE_dic__EnterpriseGroup (231)
/* dic:EnterpriseGroup */
enum dic__EnterpriseGroup {dic__EnterpriseGroup__0 = 0, dic__EnterpriseGroup__1 = 1, dic__EnterpriseGroup__2 = 2};
#endif

#ifndef SOAP_TYPE_dic__BusinessEntityType
#define SOAP_TYPE_dic__BusinessEntityType (233)
/* dic:BusinessEntityType */
enum dic__BusinessEntityType {dic__BusinessEntityType__1 = 1, dic__BusinessEntityType__2 = 2, dic__BusinessEntityType__3 = 3};
#endif

#ifndef SOAP_TYPE_dic__ProductType
#define SOAP_TYPE_dic__ProductType (237)
/* dic:ProductType */
enum dic__ProductType {dic__ProductType__1 = 1, dic__ProductType__2 = 2, dic__ProductType__3 = 3, dic__ProductType__4 = 4, dic__ProductType__5 = 5, dic__ProductType__6 = 6, dic__ProductType__7 = 7, dic__ProductType__8 = 8};
#endif

#ifndef SOAP_TYPE_dic__DocumentType
#define SOAP_TYPE_dic__DocumentType (239)
/* dic:DocumentType */
enum dic__DocumentType {dic__DocumentType__1 = 1, dic__DocumentType__2 = 2, dic__DocumentType__3 = 3, dic__DocumentType__4 = 4, dic__DocumentType__5 = 5, dic__DocumentType__6 = 6, dic__DocumentType__7 = 7, dic__DocumentType__8 = 8, dic__DocumentType__9 = 9, dic__DocumentType__10 = 10, dic__DocumentType__11 = 11, dic__DocumentType__12 = 12, dic__DocumentType__13 = 13, dic__DocumentType__14 = 14, dic__DocumentType__15 = 15, dic__DocumentType__16 = 16, dic__DocumentType__17 = 17, dic__DocumentType__18 = 18, dic__DocumentType__19 = 19, dic__DocumentType__20 = 20, dic__DocumentType__21 = 21, dic__DocumentType__22 = 22};
#endif

#ifndef SOAP_TYPE_dic__ReferenceType
#define SOAP_TYPE_dic__ReferenceType (240)
/* dic:ReferenceType */
enum dic__ReferenceType {dic__ReferenceType__1 = 1, dic__ReferenceType__2 = 2, dic__ReferenceType__3 = 3, dic__ReferenceType__4 = 4, dic__ReferenceType__5 = 5, dic__ReferenceType__6 = 6};
#endif

#ifndef SOAP_TYPE_dic__TransportType
#define SOAP_TYPE_dic__TransportType (241)
/* dic:TransportType */
enum dic__TransportType {dic__TransportType__1 = 1, dic__TransportType__2 = 2, dic__TransportType__3 = 3, dic__TransportType__4 = 4, dic__TransportType__5 = 5};
#endif

#ifndef SOAP_TYPE_dic__ResearchResult
#define SOAP_TYPE_dic__ResearchResult (247)
/* dic:ResearchResult */
enum dic__ResearchResult {dic__ResearchResult__UNKNOWN = 0, dic__ResearchResult__UNDEFINED = 1, dic__ResearchResult__POSITIVE = 2, dic__ResearchResult__NEGATIVE = 3, dic__ResearchResult__UNFULFILLED = 4, dic__ResearchResult__VSERAW = 5, dic__ResearchResult__VSEFULL = 6};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationDecision
#define SOAP_TYPE_dic__RegionalizationDecision (249)
/* dic:RegionalizationDecision */
enum dic__RegionalizationDecision {dic__RegionalizationDecision__1 = 1, dic__RegionalizationDecision__2 = 2, dic__RegionalizationDecision__3 = 3};
#endif

#ifndef SOAP_TYPE_dic__ProsperityType
#define SOAP_TYPE_dic__ProsperityType (250)
/* dic:ProsperityType */
enum dic__ProsperityType {dic__ProsperityType__UNDEFINED = 0, dic__ProsperityType__UNKNOWN = 1, dic__ProsperityType__SAFE = 2, dic__ProsperityType__UNSAFE = 3};
#endif

#ifndef SOAP_TYPE_dic__VaccinationType
#define SOAP_TYPE_dic__VaccinationType (251)
/* dic:VaccinationType */
enum dic__VaccinationType {dic__VaccinationType__UNDEFINED = 0, dic__VaccinationType__APPLIED = 1, dic__VaccinationType__UNVACCINATED = 2};
#endif

#ifndef SOAP_TYPE_vd__StockEntryBlankFilter
#define SOAP_TYPE_vd__StockEntryBlankFilter (253)
/* vd:StockEntryBlankFilter */
enum vd__StockEntryBlankFilter {vd__StockEntryBlankFilter__ALL = 0, vd__StockEntryBlankFilter__BLANK = 1, vd__StockEntryBlankFilter__NOT_USCOREBLANK = 2};
#endif

#ifndef SOAP_TYPE_vd__VeterinaryEventType
#define SOAP_TYPE_vd__VeterinaryEventType (254)
/* vd:VeterinaryEventType */
enum vd__VeterinaryEventType {vd__VeterinaryEventType__UND = 0, vd__VeterinaryEventType__LBR = 1, vd__VeterinaryEventType__VSE = 2, vd__VeterinaryEventType__IMM = 3, vd__VeterinaryEventType__MED = 4, vd__VeterinaryEventType__QRT = 5};
#endif

#ifndef SOAP_TYPE_vd__ProcessingProcedureType
#define SOAP_TYPE_vd__ProcessingProcedureType (255)
/* vd:ProcessingProcedureType */
enum vd__ProcessingProcedureType {vd__ProcessingProcedureType__7 = 7, vd__ProcessingProcedureType__12 = 12, vd__ProcessingProcedureType__13 = 13, vd__ProcessingProcedureType__34 = 34, vd__ProcessingProcedureType__35 = 35, vd__ProcessingProcedureType__37 = 37, vd__ProcessingProcedureType__39 = 39, vd__ProcessingProcedureType__40 = 40, vd__ProcessingProcedureType__43 = 43, vd__ProcessingProcedureType__51 = 51, vd__ProcessingProcedureType__73 = 73, vd__ProcessingProcedureType__95 = 95, vd__ProcessingProcedureType__101 = 101, vd__ProcessingProcedureType__102 = 102};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseRole
#define SOAP_TYPE_dic__EnterpriseRole (257)
/* dic:EnterpriseRole */
enum dic__EnterpriseRole {dic__EnterpriseRole__UNKNOWN = 0, dic__EnterpriseRole__PRODUCER = 1, dic__EnterpriseRole__SLAUGHTER_USCOREHOUSE = 2, dic__EnterpriseRole__CUTTING_USCOREPLANT = 3, dic__EnterpriseRole__COLD_USCORESTORE = 4, dic__EnterpriseRole__PACKAGING_USCOREPLANT = 5};
#endif

#ifndef SOAP_TYPE_dic__DocumentNature
#define SOAP_TYPE_dic__DocumentNature (258)
/* dic:DocumentNature */
enum dic__DocumentNature {dic__DocumentNature__ELECTRONIC = 0, dic__DocumentNature__PAPER = 1};
#endif

#ifndef SOAP_TYPE_dic__TransportationStorageType
#define SOAP_TYPE_dic__TransportationStorageType (259)
/* dic:TransportationStorageType */
enum dic__TransportationStorageType {dic__TransportationStorageType__FROZEN = 0, dic__TransportationStorageType__CHILLED = 1, dic__TransportationStorageType__COOLED = 2, dic__TransportationStorageType__VENTILATED = 3};
#endif

#ifndef SOAP_TYPE_dic__ProductMarkingClass
#define SOAP_TYPE_dic__ProductMarkingClass (260)
/* dic:ProductMarkingClass */
enum dic__ProductMarkingClass {dic__ProductMarkingClass__UNDEFINED = 0, dic__ProductMarkingClass__BN = 1, dic__ProductMarkingClass__SSCC = 2, dic__ProductMarkingClass__EAN8 = 3, dic__ProductMarkingClass__EAN13 = 4, dic__ProductMarkingClass__EAN128 = 5, dic__ProductMarkingClass__BUNDLE = 6};
#endif

#ifndef SOAP_TYPE_vd__DeliveryDecision
#define SOAP_TYPE_vd__DeliveryDecision (262)
/* vd:DeliveryDecision */
enum vd__DeliveryDecision {vd__DeliveryDecision__ACCEPT_USCOREALL = 0, vd__DeliveryDecision__PARTIALLY = 1, vd__DeliveryDecision__RETURN_USCOREALL = 2};
#endif

#ifndef SOAP_TYPE_vd__DeliveryInspectionResult
#define SOAP_TYPE_vd__DeliveryInspectionResult (263)
/* vd:DeliveryInspectionResult */
enum vd__DeliveryInspectionResult {vd__DeliveryInspectionResult__CORRESPONDS = 0, vd__DeliveryInspectionResult__MISMATCH = 1, vd__DeliveryInspectionResult__UNSUPERVISED = 2};
#endif

#ifndef SOAP_TYPE_vd__VetDocumentForm
#define SOAP_TYPE_vd__VetDocumentForm (264)
/* vd:VetDocumentForm */
enum vd__VetDocumentForm {vd__VetDocumentForm__CERTCU1 = 0, vd__VetDocumentForm__LIC1 = 1, vd__VetDocumentForm__CERTCU2 = 2, vd__VetDocumentForm__LIC2 = 3, vd__VetDocumentForm__CERTCU3 = 4, vd__VetDocumentForm__LIC3 = 5, vd__VetDocumentForm__NOTE4 = 6, vd__VetDocumentForm__CERT5I = 7, vd__VetDocumentForm__CERT61 = 8, vd__VetDocumentForm__CERT62 = 9, vd__VetDocumentForm__CERT63 = 10, vd__VetDocumentForm__PRODUCTIVE = 11};
#endif

#ifndef SOAP_TYPE_vd__VetDocumentType
#define SOAP_TYPE_vd__VetDocumentType (265)
/* vd:VetDocumentType */
enum vd__VetDocumentType {vd__VetDocumentType__TRANSPORT = 0, vd__VetDocumentType__PRODUCTIVE = 1, vd__VetDocumentType__RETURNABLE = 2, vd__VetDocumentType__INCOMING = 3, vd__VetDocumentType__OUTGOING = 4};
#endif

#ifndef SOAP_TYPE_vd__VetDocumentStatus
#define SOAP_TYPE_vd__VetDocumentStatus (266)
/* vd:VetDocumentStatus */
enum vd__VetDocumentStatus {vd__VetDocumentStatus__CREATED = 0, vd__VetDocumentStatus__CONFIRMED = 1, vd__VetDocumentStatus__WITHDRAWN = 2, vd__VetDocumentStatus__UTILIZED = 3, vd__VetDocumentStatus__FINALIZED = 4};
#endif

#ifndef SOAP_TYPE_vd__AnimalSpentPeriod
#define SOAP_TYPE_vd__AnimalSpentPeriod (267)
/* vd:AnimalSpentPeriod */
enum vd__AnimalSpentPeriod {vd__AnimalSpentPeriod__FROM_USCOREBIRTH = 0, vd__AnimalSpentPeriod__NOT_USCORELESS_USCORESIX_USCOREMONTHS = 1, vd__AnimalSpentPeriod__IN_USCOREMONTHS = 2, vd__AnimalSpentPeriod__ZERO = 3};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (11)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary {
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_base__GenericEntity
#define SOAP_TYPE_base__GenericEntity (79)
/* base:GenericEntity */
class SOAP_CMAC base__GenericEntity {
public:
	char *uuid;	/* optional element of type base:UUID */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE_base__GenericEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__GenericEntity() { base__GenericEntity::soap_default(NULL); }
	virtual ~base__GenericEntity() { }
};
#endif

#ifndef SOAP_TYPE_base__ListOptions
#define SOAP_TYPE_base__ListOptions (81)
/* base:ListOptions */
class SOAP_CMAC base__ListOptions {
public:
	char *count;	/* optional element of type xsd:nonNegativeInteger */
	char *offset;	/* optional element of type xsd:nonNegativeInteger */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_base__ListOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__ListOptions() { base__ListOptions::soap_default(NULL); }
	virtual ~base__ListOptions() { }
};
#endif

#ifndef SOAP_TYPE_base__DateInterval
#define SOAP_TYPE_base__DateInterval (82)
/* base:DateInterval */
class SOAP_CMAC base__DateInterval {
public:
	time_t *beginDate;	/* optional element of type xsd:dateTime */
	time_t *endDate;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE_base__DateInterval */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__DateInterval() { base__DateInterval::soap_default(NULL); }
	virtual ~base__DateInterval() { }
};
#endif

#ifndef SOAP_TYPE_base__EntityList
#define SOAP_TYPE_base__EntityList (83)
/* base:EntityList */
class SOAP_CMAC base__EntityList {
public:
	int *count;	/* optional attribute */
	LONG64 *total;	/* optional attribute */
	int *offset;	/* optional attribute */
	bool *hasMore;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE_base__EntityList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__EntityList() { base__EntityList::soap_default(NULL); }
	virtual ~base__EntityList() { }
};
#endif

#ifndef SOAP_TYPE_base__FaultInfo
#define SOAP_TYPE_base__FaultInfo (84)
/* base:FaultInfo */
class SOAP_CMAC base__FaultInfo {
public:
	char *message;	/* required element of type xsd:string */
	int __sizeerror;	/* sequence of elements <error> */
	class base__Error **error;	/* optional element of type base:Error */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE_base__FaultInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__FaultInfo() { base__FaultInfo::soap_default(NULL); }
	virtual ~base__FaultInfo() { }
};
#endif

#ifndef SOAP_TYPE_base__ComplexDate
#define SOAP_TYPE_base__ComplexDate (86)
/* base:ComplexDate */
class SOAP_CMAC base__ComplexDate {
public:
	int *year;	/* optional element of type base:Year */
	int *month;	/* optional element of type base:Month */
	int *day;	/* optional element of type base:Day */
	int *hour;	/* optional element of type base:Hour */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE_base__ComplexDate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__ComplexDate() { base__ComplexDate::soap_default(NULL); }
	virtual ~base__ComplexDate() { }
};
#endif

#ifndef SOAP_TYPE_app__Application
#define SOAP_TYPE_app__Application (87)
/* app:Application */
class SOAP_CMAC app__Application {
public:
	char *applicationId;	/* optional element of type base:UUID */
	enum app__ApplicationStatus *status;	/* optional element of type app:ApplicationStatus */
	char *serviceId;	/* optional element of type xsd:Name */
	char *issuerId;	/* optional element of type base:UUID */
	time_t *issueDate;	/* optional element of type xsd:dateTime */
	time_t *rcvDate;	/* optional element of type xsd:dateTime */
	time_t *prdcRsltDate;	/* optional element of type xsd:dateTime */
	class app__ApplicationDataWrapper *data;	/* optional element of type app:ApplicationDataWrapper */
	class app__ApplicationResultWrapper *result;	/* optional element of type app:ApplicationResultWrapper */
	class app__BusinessErrorList *errors;	/* optional element of type app:BusinessErrorList */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE_app__Application */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__Application() { app__Application::soap_default(NULL); }
	virtual ~app__Application() { }
};
#endif

#ifndef SOAP_TYPE_app__ApplicationDataWrapper
#define SOAP_TYPE_app__ApplicationDataWrapper (88)
/* app:ApplicationDataWrapper */
class SOAP_CMAC app__ApplicationDataWrapper {
public:
	char *__any;
	enum app__ContentEncoding *encoding;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE_app__ApplicationDataWrapper */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__ApplicationDataWrapper() { app__ApplicationDataWrapper::soap_default(NULL); }
	virtual ~app__ApplicationDataWrapper() { }
};
#endif

#ifndef SOAP_TYPE_app__ApplicationResultWrapper
#define SOAP_TYPE_app__ApplicationResultWrapper (89)
/* app:ApplicationResultWrapper */
class SOAP_CMAC app__ApplicationResultWrapper {
public:
	char *__any;
	enum app__ContentEncoding *encoding;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE_app__ApplicationResultWrapper */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__ApplicationResultWrapper() { app__ApplicationResultWrapper::soap_default(NULL); }
	virtual ~app__ApplicationResultWrapper() { }
};
#endif

#ifndef SOAP_TYPE_app__ApplicationData
#define SOAP_TYPE_app__ApplicationData (90)
/* app:ApplicationData */
class SOAP_CMAC app__ApplicationData {
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE_app__ApplicationData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__ApplicationData() { app__ApplicationData::soap_default(NULL); }
	virtual ~app__ApplicationData() { }
};
#endif

#ifndef SOAP_TYPE_app__ApplicationResultData
#define SOAP_TYPE_app__ApplicationResultData (91)
/* app:ApplicationResultData */
class SOAP_CMAC app__ApplicationResultData {
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE_app__ApplicationResultData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__ApplicationResultData() { app__ApplicationResultData::soap_default(NULL); }
	virtual ~app__ApplicationResultData() { }
};
#endif

#ifndef SOAP_TYPE_app__BusinessErrorList
#define SOAP_TYPE_app__BusinessErrorList (92)
/* app:BusinessErrorList */
class SOAP_CMAC app__BusinessErrorList {
public:
	int __sizeerror;	/* sequence of elements <error> */
	class app__BusinessError **error;	/* optional element of type app:BusinessError */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE_app__BusinessErrorList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__BusinessErrorList() { app__BusinessErrorList::soap_default(NULL); }
	virtual ~app__BusinessErrorList() { }
};
#endif

#ifndef SOAP_TYPE_dic__Address
#define SOAP_TYPE_dic__Address (106)
/* dic:Address */
class SOAP_CMAC dic__Address {
public:
	class dic__Country *country;	/* optional element of type dic:Country */
	class dic__FederalDistrict *federalDistrict;	/* optional element of type dic:FederalDistrict */
	class dic__Region *region;	/* optional element of type dic:Region */
	class dic__District *district;	/* optional element of type dic:District */
	class dic__Locality *locality;	/* optional element of type dic:Locality */
	dic__Locality *subLocality;	/* optional element of type dic:Locality */
	class dic__Street *street;	/* optional element of type dic:Street */
	char *house;	/* optional element of type base:String255 */
	char *building;	/* optional element of type base:String255 */
	char *room;	/* optional element of type base:String255 */
	char *postIndex;	/* optional element of type base:String255 */
	char *postBox;	/* optional element of type base:String255 */
	char **additionalInfo;	/* optional element of type base:NText */
	char **addressView;	/* optional element of type base:NText */
	char **enAddressView;	/* optional element of type base:NText */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_dic__Address */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Address() { dic__Address::soap_default(NULL); }
	virtual ~dic__Address() { }
};
#endif

#ifndef SOAP_TYPE_dic__Producer
#define SOAP_TYPE_dic__Producer (115)
/* dic:Producer */
class SOAP_CMAC dic__Producer {
public:
	class dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
	enum dic__EnterpriseRole *role;	/* optional element of type dic:EnterpriseRole */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE_dic__Producer */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Producer() { dic__Producer::soap_default(NULL); }
	virtual ~dic__Producer() { }
};
#endif

#ifndef SOAP_TYPE_dic__ProducerList
#define SOAP_TYPE_dic__ProducerList (116)
/* dic:ProducerList */
class SOAP_CMAC dic__ProducerList {
public:
	int __sizeproducer;	/* sequence of elements <producer> */
	dic__Producer **producer;	/* optional element of type dic:Producer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE_dic__ProducerList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ProducerList() { dic__ProducerList::soap_default(NULL); }
	virtual ~dic__ProducerList() { }
};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseNumberList
#define SOAP_TYPE_dic__EnterpriseNumberList (117)
/* dic:EnterpriseNumberList */
class SOAP_CMAC dic__EnterpriseNumberList {
public:
	int __sizeenterpriseNumber;	/* sequence of elements <enterpriseNumber> */
	char **enterpriseNumber;	/* optional element of type base:String255 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE_dic__EnterpriseNumberList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__EnterpriseNumberList() { dic__EnterpriseNumberList::soap_default(NULL); }
	virtual ~dic__EnterpriseNumberList() { }
};
#endif

#ifndef SOAP_TYPE_dic__BusinessMember
#define SOAP_TYPE_dic__BusinessMember (119)
/* dic:BusinessMember */
class SOAP_CMAC dic__BusinessMember {
public:
	class dic__BusinessEntity *businessEntity;	/* optional element of type dic:BusinessEntity */
	dic__Enterprise *enterprise;	/* optional element of type dic:Enterprise */
	int __sizeglobalID;	/* sequence of elements <globalID> */
	char **globalID;	/* optional element of type dic:GLNType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE_dic__BusinessMember */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__BusinessMember() { dic__BusinessMember::soap_default(NULL); }
	virtual ~dic__BusinessMember() { }
};
#endif

#ifndef SOAP_TYPE_dic__Package
#define SOAP_TYPE_dic__Package (130)
/* dic:Package */
class SOAP_CMAC dic__Package {
public:
	enum dic__PackageLevelType level;	/* required element of type dic:PackageLevelType */
	class dic__PackingType *packingType;	/* required element of type dic:PackingType */
	char *quantity;	/* optional element of type xsd:integer */
	int __sizeproductMarks;	/* sequence of elements <productMarks> */
	class dic__ProductMarks **productMarks;	/* optional element of type dic:ProductMarks */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 130; } /* = unique id SOAP_TYPE_dic__Package */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Package() { dic__Package::soap_default(NULL); }
	virtual ~dic__Package() { }
};
#endif

#ifndef SOAP_TYPE_dic__PackageList
#define SOAP_TYPE_dic__PackageList (131)
/* dic:PackageList */
class SOAP_CMAC dic__PackageList {
public:
	int __sizepackage;	/* sequence of elements <package> */
	dic__Package **package;	/* optional element of type dic:Package */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 131; } /* = unique id SOAP_TYPE_dic__PackageList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__PackageList() { dic__PackageList::soap_default(NULL); }
	virtual ~dic__PackageList() { }
};
#endif

#ifndef SOAP_TYPE_dic__ComplexDate
#define SOAP_TYPE_dic__ComplexDate (132)
/* dic:ComplexDate */
class SOAP_CMAC dic__ComplexDate {
public:
	int *year;	/* optional element of type dic:Year */
	int *month;	/* optional element of type dic:Month */
	int *day;	/* optional element of type dic:Day */
	int *hour;	/* optional element of type dic:Hour */
	int *minute;	/* optional element of type dic:Minute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 132; } /* = unique id SOAP_TYPE_dic__ComplexDate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ComplexDate() { dic__ComplexDate::soap_default(NULL); }
	virtual ~dic__ComplexDate() { }
};
#endif

#ifndef SOAP_TYPE_dic__ProductItemProducing
#define SOAP_TYPE_dic__ProductItemProducing (133)
/* dic:ProductItemProducing */
class SOAP_CMAC dic__ProductItemProducing {
public:
	dic__Enterprise *location;	/* required element of type dic:Enterprise */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 133; } /* = unique id SOAP_TYPE_dic__ProductItemProducing */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ProductItemProducing() { dic__ProductItemProducing::soap_default(NULL); }
	virtual ~dic__ProductItemProducing() { }
};
#endif

#ifndef SOAP_TYPE_dic__Packaging
#define SOAP_TYPE_dic__Packaging (134)
/* dic:Packaging */
class SOAP_CMAC dic__Packaging {
public:
	dic__PackingType *packagingType;	/* required element of type dic:PackingType */
	char *quantity;	/* optional element of type xsd:integer */
	char **volume;	/* optional element of type base:Decimal */
	class dic__Unit *unit;	/* optional element of type dic:Unit */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE_dic__Packaging */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Packaging() { dic__Packaging::soap_default(NULL); }
	virtual ~dic__Packaging() { }
};
#endif

#ifndef SOAP_TYPE_dic__Location
#define SOAP_TYPE_dic__Location (135)
/* dic:Location */
class SOAP_CMAC dic__Location {
public:
	char *name;	/* optional element of type base:String255 */
	dic__Address *address;	/* optional element of type dic:Address */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 135; } /* = unique id SOAP_TYPE_dic__Location */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Location() { dic__Location::soap_default(NULL); }
	virtual ~dic__Location() { }
};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseOfficialRegistration
#define SOAP_TYPE_dic__EnterpriseOfficialRegistration (136)
/* dic:EnterpriseOfficialRegistration */
class SOAP_CMAC dic__EnterpriseOfficialRegistration {
public:
	char *ID;	/* optional element of type dic:GRNType */
	dic__BusinessEntity *businessEntity;	/* required element of type dic:BusinessEntity */
	char *kpp;	/* required element of type base:String255 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 136; } /* = unique id SOAP_TYPE_dic__EnterpriseOfficialRegistration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__EnterpriseOfficialRegistration() { dic__EnterpriseOfficialRegistration::soap_default(NULL); }
	virtual ~dic__EnterpriseOfficialRegistration() { }
};
#endif

#ifndef SOAP_TYPE_dic__Organization
#define SOAP_TYPE_dic__Organization (137)
/* dic:Organization */
class SOAP_CMAC dic__Organization {
public:
	char **ID;	/* optional element of type base:Identifier */
	char *name;	/* optional element of type base:String255 */
	dic__Address *address;	/* optional element of type dic:Address */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE_dic__Organization */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Organization() { dic__Organization::soap_default(NULL); }
	virtual ~dic__Organization() { }
};
#endif

#ifndef SOAP_TYPE_dic__MedicinalDrug
#define SOAP_TYPE_dic__MedicinalDrug (141)
/* dic:MedicinalDrug */
class SOAP_CMAC dic__MedicinalDrug {
public:
	char **ID;	/* optional element of type base:Identifier */
	char *name;	/* optional element of type base:String255 */
	char *series;	/* optional element of type base:String255 */
	dic__BusinessMember *producer;	/* optional element of type dic:BusinessMember */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 141; } /* = unique id SOAP_TYPE_dic__MedicinalDrug */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__MedicinalDrug() { dic__MedicinalDrug::soap_default(NULL); }
	virtual ~dic__MedicinalDrug() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationConditionGroup
#define SOAP_TYPE_dic__RegionalizationConditionGroup (143)
/* dic:RegionalizationConditionGroup */
class SOAP_CMAC dic__RegionalizationConditionGroup {
public:
	int __sizecondition;	/* sequence of elements <condition> */
	class dic__RegionalizationCondition **condition;	/* optional element of type dic:RegionalizationCondition */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 143; } /* = unique id SOAP_TYPE_dic__RegionalizationConditionGroup */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationConditionGroup() { dic__RegionalizationConditionGroup::soap_default(NULL); }
	virtual ~dic__RegionalizationConditionGroup() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationRequirement
#define SOAP_TYPE_dic__RegionalizationRequirement (144)
/* dic:RegionalizationRequirement */
class SOAP_CMAC dic__RegionalizationRequirement {
public:
	class dic__AnimalDisease *relatedDisease;	/* optional element of type dic:AnimalDisease */
	enum dic__RegionalizationDecision type;	/* required element of type dic:RegionalizationDecision */
	int __sizeconditionGroup;	/* sequence of elements <conditionGroup> */
	dic__RegionalizationConditionGroup **conditionGroup;	/* optional element of type dic:RegionalizationConditionGroup */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 144; } /* = unique id SOAP_TYPE_dic__RegionalizationRequirement */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationRequirement() { dic__RegionalizationRequirement::soap_default(NULL); }
	virtual ~dic__RegionalizationRequirement() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationStatus
#define SOAP_TYPE_dic__RegionalizationStatus (146)
/* dic:RegionalizationStatus */
class SOAP_CMAC dic__RegionalizationStatus {
public:
	dic__AnimalDisease *relatedDisease;	/* required element of type dic:AnimalDisease */
	enum dic__ProsperityType prosperity;	/* required element of type dic:ProsperityType */
	enum dic__VaccinationType vaccination;	/* required element of type dic:VaccinationType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 146; } /* = unique id SOAP_TYPE_dic__RegionalizationStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationStatus() { dic__RegionalizationStatus::soap_default(NULL); }
	virtual ~dic__RegionalizationStatus() { }
};
#endif

#ifndef SOAP_TYPE_vd__Batch
#define SOAP_TYPE_vd__Batch (156)
/* vd:Batch */
class SOAP_CMAC vd__Batch {
public:
	enum dic__ProductType *productType;	/* optional element of type dic:ProductType */
	class dic__Product *product;	/* optional element of type dic:Product */
	class dic__SubProduct *subProduct;	/* optional element of type dic:SubProduct */
	class dic__ProductItem *productItem;	/* optional element of type dic:ProductItem */
	char **volume;	/* optional element of type base:Decimal */
	dic__Unit *unit;	/* optional element of type dic:Unit */
	class vd__GoodsDate *dateOfProduction;	/* optional element of type vd:GoodsDate */
	vd__GoodsDate *expiryDate;	/* optional element of type vd:GoodsDate */
	int __sizebatchID;	/* sequence of elements <batchID> */
	char **batchID;	/* optional element of type base:Identifier */
	bool *perishable;	/* optional element of type xsd:boolean */
	class vd__BatchOrigin *origin;	/* optional element of type vd:BatchOrigin */
	bool *lowGradeCargo;	/* optional element of type xsd:boolean */
	dic__PackageList *packageList;	/* optional element of type dic:PackageList */
	dic__BusinessEntity *owner;	/* optional element of type dic:BusinessEntity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 156; } /* = unique id SOAP_TYPE_vd__Batch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__Batch() { vd__Batch::soap_default(NULL); }
	virtual ~vd__Batch() { }
};
#endif

#ifndef SOAP_TYPE_vd__RawBatch
#define SOAP_TYPE_vd__RawBatch (158)
/* vd:RawBatch */
class SOAP_CMAC vd__RawBatch {
public:
	class vd__StockEntry *sourceStockEntry;	/* optional element of type vd:StockEntry */
	char **volume;	/* optional element of type base:Decimal */
	dic__Unit *unit;	/* optional element of type dic:Unit */
	dic__PackageList *packageList;	/* optional element of type dic:PackageList */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 158; } /* = unique id SOAP_TYPE_vd__RawBatch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__RawBatch() { vd__RawBatch::soap_default(NULL); }
	virtual ~vd__RawBatch() { }
};
#endif

#ifndef SOAP_TYPE_vd__DeliveryFactList
#define SOAP_TYPE_vd__DeliveryFactList (161)
/* vd:DeliveryFactList */
class SOAP_CMAC vd__DeliveryFactList {
public:
	enum dic__DocumentNature vetCertificatePresence;	/* required element of type dic:DocumentNature */
	class vd__DeliveryInspection *docInspection;	/* required element of type vd:DeliveryInspection */
	vd__DeliveryInspection *vetInspection;	/* required element of type vd:DeliveryInspection */
	enum vd__DeliveryDecision decision;	/* required element of type vd:DeliveryDecision */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 161; } /* = unique id SOAP_TYPE_vd__DeliveryFactList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__DeliveryFactList() { vd__DeliveryFactList::soap_default(NULL); }
	virtual ~vd__DeliveryFactList() { }
};
#endif

#ifndef SOAP_TYPE_vd__DeliveryInspection
#define SOAP_TYPE_vd__DeliveryInspection (162)
/* vd:DeliveryInspection */
class SOAP_CMAC vd__DeliveryInspection {
public:
	class vd__User *responsible;	/* optional element of type vd:User */
	enum vd__DeliveryInspectionResult result;	/* required element of type vd:DeliveryInspectionResult */
	char *info;	/* optional element of type base:Text */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 162; } /* = unique id SOAP_TYPE_vd__DeliveryInspection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__DeliveryInspection() { vd__DeliveryInspection::soap_default(NULL); }
	virtual ~vd__DeliveryInspection() { }
};
#endif

#ifndef SOAP_TYPE_vd__ConsignmentDocumentList
#define SOAP_TYPE_vd__ConsignmentDocumentList (163)
/* vd:ConsignmentDocumentList */
class SOAP_CMAC vd__ConsignmentDocumentList {
public:
	class vd__Waybill *waybill;	/* optional element of type vd:Waybill */
	int __sizevetCertificate;	/* sequence of elements <vetCertificate> */
	class vd__VetDocument **vetCertificate;	/* optional element of type vd:VetDocument */
	int __sizerelatedDocument;	/* sequence of elements <relatedDocument> */
	class vd__ReferencedDocument **relatedDocument;	/* optional element of type vd:ReferencedDocument */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 163; } /* = unique id SOAP_TYPE_vd__ConsignmentDocumentList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ConsignmentDocumentList() { vd__ConsignmentDocumentList::soap_default(NULL); }
	virtual ~vd__ConsignmentDocumentList() { }
};
#endif

#ifndef SOAP_TYPE_vd__GoodsDate
#define SOAP_TYPE_vd__GoodsDate (164)
/* vd:GoodsDate */
class SOAP_CMAC vd__GoodsDate {
public:
	dic__ComplexDate *firstDate;	/* optional element of type dic:ComplexDate */
	dic__ComplexDate *secondDate;	/* optional element of type dic:ComplexDate */
	char *informalDate;	/* optional element of type base:String255 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 164; } /* = unique id SOAP_TYPE_vd__GoodsDate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__GoodsDate() { vd__GoodsDate::soap_default(NULL); }
	virtual ~vd__GoodsDate() { }
};
#endif

#ifndef SOAP_TYPE_vd__StockDiscrepancy
#define SOAP_TYPE_vd__StockDiscrepancy (170)
/* vd:StockDiscrepancy */
class SOAP_CMAC vd__StockDiscrepancy {
public:
	class vd__StockEntryList *affectedList;	/* optional element of type vd:StockEntryList */
	vd__StockEntryList *resultingList;	/* optional element of type vd:StockEntryList */
	char *reason;	/* optional element of type xsd:string */
	char *id;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 170; } /* = unique id SOAP_TYPE_vd__StockDiscrepancy */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__StockDiscrepancy() { vd__StockDiscrepancy::soap_default(NULL); }
	virtual ~vd__StockDiscrepancy() { }
};
#endif

#ifndef SOAP_TYPE_vd__TransportInfo
#define SOAP_TYPE_vd__TransportInfo (174)
/* vd:TransportInfo */
class SOAP_CMAC vd__TransportInfo {
public:
	enum dic__TransportType *transportType;	/* optional element of type dic:TransportType */
	class vd__TransportNumber *transportNumber;	/* optional element of type vd:TransportNumber */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 174; } /* = unique id SOAP_TYPE_vd__TransportInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__TransportInfo() { vd__TransportInfo::soap_default(NULL); }
	virtual ~vd__TransportInfo() { }
};
#endif

#ifndef SOAP_TYPE_vd__TransportNumber
#define SOAP_TYPE_vd__TransportNumber (175)
/* vd:TransportNumber */
class SOAP_CMAC vd__TransportNumber {
public:
	char *containerNumber;	/* optional element of type base:String255 */
	char *wagonNumber;	/* optional element of type base:String255 */
	char *vehicleNumber;	/* optional element of type base:String255 */
	char *trailerNumber;	/* optional element of type base:String255 */
	char *shipName;	/* optional element of type base:String255 */
	char *flightNumber;	/* optional element of type base:String255 */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 175; } /* = unique id SOAP_TYPE_vd__TransportNumber */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__TransportNumber() { vd__TransportNumber::soap_default(NULL); }
	virtual ~vd__TransportNumber() { }
};
#endif

#ifndef SOAP_TYPE_vd__ShipmentRoute
#define SOAP_TYPE_vd__ShipmentRoute (177)
/* vd:ShipmentRoute */
class SOAP_CMAC vd__ShipmentRoute {
public:
	int __sizeroutePoint;	/* sequence of elements <routePoint> */
	class vd__ShipmentRoutePoint **routePoint;	/* optional element of type vd:ShipmentRoutePoint */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 177; } /* = unique id SOAP_TYPE_vd__ShipmentRoute */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ShipmentRoute() { vd__ShipmentRoute::soap_default(NULL); }
	virtual ~vd__ShipmentRoute() { }
};
#endif

#ifndef SOAP_TYPE_vd__ProductionOperation
#define SOAP_TYPE_vd__ProductionOperation (178)
/* vd:ProductionOperation */
class SOAP_CMAC vd__ProductionOperation {
public:
	char **operationId;	/* optional element of type base:Identifier */
	int __sizerawBatch;	/* sequence of elements <rawBatch> */
	vd__RawBatch **rawBatch;	/* optional element of type vd:RawBatch */
	int __sizeproductiveBatch;	/* sequence of elements <productiveBatch> */
	class vd__ProductiveBatch **productiveBatch;	/* optional element of type vd:ProductiveBatch */
	bool *finalizeOperation;	/* optional element of type xsd:boolean */
	int __sizeappliedProcess;	/* sequence of elements <appliedProcess> */
	class vd__ProcessingProcedure **appliedProcess;	/* optional element of type vd:ProcessingProcedure */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 178; } /* = unique id SOAP_TYPE_vd__ProductionOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ProductionOperation() { vd__ProductionOperation::soap_default(NULL); }
	virtual ~vd__ProductionOperation() { }
};
#endif

#ifndef SOAP_TYPE_vd__MergeStockEntriesOperation
#define SOAP_TYPE_vd__MergeStockEntriesOperation (179)
/* vd:MergeStockEntriesOperation */
class SOAP_CMAC vd__MergeStockEntriesOperation {
public:
	enum base__RegisterModificationType *type;	/* optional element of type base:RegisterModificationType */
	int __sizesourceStockEntry;	/* sequence of elements <sourceStockEntry> */
	vd__StockEntry **sourceStockEntry;	/* required element of type vd:StockEntry */
	int __sizeresultStockEntry;	/* sequence of elements <resultStockEntry> */
	vd__StockEntry **resultStockEntry;	/* optional element of type vd:StockEntry */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 179; } /* = unique id SOAP_TYPE_vd__MergeStockEntriesOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__MergeStockEntriesOperation() { vd__MergeStockEntriesOperation::soap_default(NULL); }
	virtual ~vd__MergeStockEntriesOperation() { }
};
#endif

#ifndef SOAP_TYPE_vd__PSLModificationOperation
#define SOAP_TYPE_vd__PSLModificationOperation (180)
/* vd:PSLModificationOperation */
class SOAP_CMAC vd__PSLModificationOperation {
public:
	enum base__RegisterModificationType type;	/* required element of type base:RegisterModificationType */
	class dic__ProductItemList *affectedList;	/* optional element of type dic:ProductItemList */
	dic__ProductItemList *resultingList;	/* optional element of type dic:ProductItemList */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 180; } /* = unique id SOAP_TYPE_vd__PSLModificationOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__PSLModificationOperation() { vd__PSLModificationOperation::soap_default(NULL); }
	virtual ~vd__PSLModificationOperation() { }
};
#endif

#ifndef SOAP_TYPE_vd__BEModificationOperation
#define SOAP_TYPE_vd__BEModificationOperation (181)
/* vd:BEModificationOperation */
class SOAP_CMAC vd__BEModificationOperation {
public:
	enum base__RegisterModificationType type;	/* required element of type base:RegisterModificationType */
	class dic__BusinessEntityList *affectedList;	/* optional element of type dic:BusinessEntityList */
	dic__BusinessEntityList *resultingList;	/* optional element of type dic:BusinessEntityList */
	char *reason;	/* optional element of type dic:BEModificationReason */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 181; } /* = unique id SOAP_TYPE_vd__BEModificationOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__BEModificationOperation() { vd__BEModificationOperation::soap_default(NULL); }
	virtual ~vd__BEModificationOperation() { }
};
#endif

#ifndef SOAP_TYPE__vd__BEActivityLocationsModificationOperation_activityLocation
#define SOAP_TYPE__vd__BEActivityLocationsModificationOperation_activityLocation (354)
/* vd:BEActivityLocationsModificationOperation-activityLocation */
class SOAP_CMAC _vd__BEActivityLocationsModificationOperation_activityLocation {
public:
	int __sizeglobalID;	/* sequence of elements <globalID> */
	char **globalID;	/* optional element of type dic:GLNType */
	dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
public:
	virtual int soap_type() const { return 354; } /* = unique id SOAP_TYPE__vd__BEActivityLocationsModificationOperation_activityLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _vd__BEActivityLocationsModificationOperation_activityLocation() { _vd__BEActivityLocationsModificationOperation_activityLocation::soap_default(NULL); }
	virtual ~_vd__BEActivityLocationsModificationOperation_activityLocation() { }
};
#endif

#ifndef SOAP_TYPE_vd__BEActivityLocationsModificationOperation
#define SOAP_TYPE_vd__BEActivityLocationsModificationOperation (182)
/* vd:BEActivityLocationsModificationOperation */
class SOAP_CMAC vd__BEActivityLocationsModificationOperation {
public:
	enum base__RegisterModificationType type;	/* required element of type base:RegisterModificationType */
	dic__BusinessEntity *businessEntity;	/* required element of type dic:BusinessEntity */
	int __sizeactivityLocation;	/* sequence of elements <activityLocation> */
	_vd__BEActivityLocationsModificationOperation_activityLocation *activityLocation;	/* required element of type vd:BEActivityLocationsModificationOperation-activityLocation */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 182; } /* = unique id SOAP_TYPE_vd__BEActivityLocationsModificationOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__BEActivityLocationsModificationOperation() { vd__BEActivityLocationsModificationOperation::soap_default(NULL); }
	virtual ~vd__BEActivityLocationsModificationOperation() { }
};
#endif

#ifndef SOAP_TYPE_vd__ENTModificationOperation
#define SOAP_TYPE_vd__ENTModificationOperation (183)
/* vd:ENTModificationOperation */
class SOAP_CMAC vd__ENTModificationOperation {
public:
	enum base__RegisterModificationType type;	/* required element of type base:RegisterModificationType */
	class dic__EnterpriseList *affectedList;	/* optional element of type dic:EnterpriseList */
	dic__EnterpriseList *resultingList;	/* optional element of type dic:EnterpriseList */
	char *reason;	/* optional element of type dic:ENTModificationReason */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 183; } /* = unique id SOAP_TYPE_vd__ENTModificationOperation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ENTModificationOperation() { vd__ENTModificationOperation::soap_default(NULL); }
	virtual ~vd__ENTModificationOperation() { }
};
#endif

#ifndef SOAP_TYPE_vd__CertifiedBatch
#define SOAP_TYPE_vd__CertifiedBatch (184)
/* vd:CertifiedBatch */
class SOAP_CMAC vd__CertifiedBatch {
public:
	dic__BusinessMember *producer;	/* optional element of type dic:BusinessMember */
	vd__Batch *batch;	/* optional element of type vd:Batch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 184; } /* = unique id SOAP_TYPE_vd__CertifiedBatch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__CertifiedBatch() { vd__CertifiedBatch::soap_default(NULL); }
	virtual ~vd__CertifiedBatch() { }
};
#endif

#ifndef SOAP_TYPE_vd__CertifiedConsignment
#define SOAP_TYPE_vd__CertifiedConsignment (185)
/* vd:CertifiedConsignment */
class SOAP_CMAC vd__CertifiedConsignment {
public:
	dic__BusinessMember *consignor;	/* optional element of type dic:BusinessMember */
	dic__BusinessMember *consignee;	/* optional element of type dic:BusinessMember */
	dic__BusinessEntity *broker;	/* optional element of type dic:BusinessEntity */
	vd__TransportInfo *transportInfo;	/* optional element of type vd:TransportInfo */
	enum dic__TransportationStorageType *transportStorageType;	/* optional element of type dic:TransportationStorageType */
	vd__ShipmentRoute *shipmentRoute;	/* optional element of type vd:ShipmentRoute */
	vd__Batch *batch;	/* optional element of type vd:Batch */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 185; } /* = unique id SOAP_TYPE_vd__CertifiedConsignment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__CertifiedConsignment() { vd__CertifiedConsignment::soap_default(NULL); }
	virtual ~vd__CertifiedConsignment() { }
};
#endif

#ifndef SOAP_TYPE__vd__union_VeterinaryEvent
#define SOAP_TYPE__vd__union_VeterinaryEvent (363)
/* xsd:choice */
union _vd__union_VeterinaryEvent
{
#define SOAP_UNION__vd__union_VeterinaryEvent_location	(1)
	dic__Location *location;
#define SOAP_UNION__vd__union_VeterinaryEvent_enterprise	(2)
	dic__Enterprise *enterprise;
};
#endif

#ifndef SOAP_TYPE_vd__VeterinaryEvent
#define SOAP_TYPE_vd__VeterinaryEvent (187)
/* vd:VeterinaryEvent */
class SOAP_CMAC vd__VeterinaryEvent {
public:
	char **ID;	/* optional element of type base:Identifier */
	char *name;	/* optional element of type base:String255 */
	enum vd__VeterinaryEventType *type;	/* optional element of type vd:VeterinaryEventType */
	time_t *actualDateTime;	/* optional element of type xsd:dateTime */
	int __union_VeterinaryEvent;	/* union discriminant (of union defined below) */
	union _vd__union_VeterinaryEvent union_VeterinaryEvent;	/* required element of type xsd:choice */
	dic__Organization *operator_;	/* optional element of type dic:Organization */
	int __sizereferencedDocument;	/* sequence of elements <referencedDocument> */
	class vd__Document **referencedDocument;	/* optional element of type vd:Document */
	char *notes;	/* optional element of type base:Text */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 187; } /* = unique id SOAP_TYPE_vd__VeterinaryEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__VeterinaryEvent() { vd__VeterinaryEvent::soap_default(NULL); }
	virtual ~vd__VeterinaryEvent() { }
};
#endif

#ifndef SOAP_TYPE_vd__VeterinaryAuthentication
#define SOAP_TYPE_vd__VeterinaryAuthentication (191)
/* vd:VeterinaryAuthentication */
class SOAP_CMAC vd__VeterinaryAuthentication {
public:
	class dic__Purpose *purpose;	/* optional element of type dic:Purpose */
	bool *cargoInspected;	/* optional element of type xsd:boolean */
	enum dic__ResearchResult *cargoExpertized;	/* optional element of type dic:ResearchResult */
	char *locationProsperity;	/* optional element of type base:String255 */
	enum vd__AnimalSpentPeriod *animalSpentPeriod;	/* optional element of type vd:AnimalSpentPeriod */
	char *monthsSpent;	/* optional element of type base:String255 */
	int __sizelaboratoryResearch;	/* sequence of elements <laboratoryResearch> */
	class vd__LaboratoryResearchEvent **laboratoryResearch;	/* optional element of type vd:LaboratoryResearchEvent */
	class vd__QuarantineEvent *quarantine;	/* optional element of type vd:QuarantineEvent */
	int __sizeimmunization;	/* sequence of elements <immunization> */
	class vd__AnimalMedicationEvent **immunization;	/* optional element of type vd:AnimalMedicationEvent */
	int __sizeveterinaryEvent;	/* sequence of elements <veterinaryEvent> */
	vd__VeterinaryEvent **veterinaryEvent;	/* optional element of type vd:VeterinaryEvent */
	int __sizer13nClause;	/* sequence of elements <r13nClause> */
	class vd__RegionalizationClause **r13nClause;	/* optional element of type vd:RegionalizationClause */
	char *specialMarks;	/* optional element of type base:Text */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 191; } /* = unique id SOAP_TYPE_vd__VeterinaryAuthentication */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__VeterinaryAuthentication() { vd__VeterinaryAuthentication::soap_default(NULL); }
	virtual ~vd__VeterinaryAuthentication() { }
};
#endif

#ifndef SOAP_TYPE_vd__BatchOrigin
#define SOAP_TYPE_vd__BatchOrigin (192)
/* vd:BatchOrigin */
class SOAP_CMAC vd__BatchOrigin {
public:
	dic__ProductItem *productItem;	/* optional element of type dic:ProductItem */
	dic__Country *country;	/* optional element of type dic:Country */
	int __sizeproducer;	/* sequence of elements <producer> */
	dic__Producer **producer;	/* optional element of type dic:Producer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 192; } /* = unique id SOAP_TYPE_vd__BatchOrigin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__BatchOrigin() { vd__BatchOrigin::soap_default(NULL); }
	virtual ~vd__BatchOrigin() { }
};
#endif

#ifndef SOAP_TYPE_vd__StockEntryEventList
#define SOAP_TYPE_vd__StockEntryEventList (193)
/* vd:StockEntryEventList */
class SOAP_CMAC vd__StockEntryEventList {
public:
	int __sizelaboratoryResearch;	/* sequence of elements <laboratoryResearch> */
	vd__LaboratoryResearchEvent **laboratoryResearch;	/* optional element of type vd:LaboratoryResearchEvent */
	int __sizequarantine;	/* sequence of elements <quarantine> */
	vd__QuarantineEvent **quarantine;	/* optional element of type vd:QuarantineEvent */
	int __sizeimmunization;	/* sequence of elements <immunization> */
	vd__AnimalMedicationEvent **immunization;	/* optional element of type vd:AnimalMedicationEvent */
	int __sizeveterinaryEvent;	/* sequence of elements <veterinaryEvent> */
	vd__VeterinaryEvent **veterinaryEvent;	/* optional element of type vd:VeterinaryEvent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 193; } /* = unique id SOAP_TYPE_vd__StockEntryEventList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__StockEntryEventList() { vd__StockEntryEventList::soap_default(NULL); }
	virtual ~vd__StockEntryEventList() { }
};
#endif

#ifndef SOAP_TYPE_vd__VetDocumentStatusChange
#define SOAP_TYPE_vd__VetDocumentStatusChange (194)
/* vd:VetDocumentStatusChange */
class SOAP_CMAC vd__VetDocumentStatusChange {
public:
	enum vd__VetDocumentStatus status;	/* required element of type vd:VetDocumentStatus */
	vd__User *specifiedPerson;	/* required element of type vd:User */
	time_t actualDateTime;	/* required element of type xsd:dateTime */
	char *reason;	/* optional element of type vd:VetDocumentStatusChangeReason */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 194; } /* = unique id SOAP_TYPE_vd__VetDocumentStatusChange */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__VetDocumentStatusChange() { vd__VetDocumentStatusChange::soap_default(NULL); }
	virtual ~vd__VetDocumentStatusChange() { }
};
#endif

#ifndef SOAP_TYPE_vd__RegionalizationClause
#define SOAP_TYPE_vd__RegionalizationClause (195)
/* vd:RegionalizationClause */
class SOAP_CMAC vd__RegionalizationClause {
public:
	dic__RegionalizationCondition *condition;	/* required element of type dic:RegionalizationCondition */
	char *text;	/* optional element of type base:Text */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 195; } /* = unique id SOAP_TYPE_vd__RegionalizationClause */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__RegionalizationClause() { vd__RegionalizationClause::soap_default(NULL); }
	virtual ~vd__RegionalizationClause() { }
};
#endif

#ifndef SOAP_TYPE_vd__RouteSectionR13nRules
#define SOAP_TYPE_vd__RouteSectionR13nRules (196)
/* vd:RouteSectionR13nRules */
class SOAP_CMAC vd__RouteSectionR13nRules {
public:
	char **sqnId;	/* optional element of type base:SequenceNumber */
	int __sizeappliedR13nRule;	/* sequence of elements <appliedR13nRule> */
	class dic__RegionalizationShippingRule **appliedR13nRule;	/* optional element of type dic:RegionalizationShippingRule */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 196; } /* = unique id SOAP_TYPE_vd__RouteSectionR13nRules */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__RouteSectionR13nRules() { vd__RouteSectionR13nRules::soap_default(NULL); }
	virtual ~vd__RouteSectionR13nRules() { }
};
#endif

#ifndef SOAP_TYPE_vd__ProcessingProcedure
#define SOAP_TYPE_vd__ProcessingProcedure (197)
/* vd:ProcessingProcedure */
class SOAP_CMAC vd__ProcessingProcedure {
public:
	enum vd__ProcessingProcedureType type;	/* required element of type vd:ProcessingProcedureType */
	time_t *startDateTime;	/* optional element of type xsd:dateTime */
	time_t *endDateTime;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 197; } /* = unique id SOAP_TYPE_vd__ProcessingProcedure */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ProcessingProcedure() { vd__ProcessingProcedure::soap_default(NULL); }
	virtual ~vd__ProcessingProcedure() { }
};
#endif

#ifndef SOAP_TYPE_vd__AuthorityList
#define SOAP_TYPE_vd__AuthorityList (200)
/* vd:AuthorityList */
class SOAP_CMAC vd__AuthorityList {
public:
	int __sizeauthority;	/* sequence of elements <authority> */
	class vd__UserAuthority **authority;	/* optional element of type vd:UserAuthority */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 200; } /* = unique id SOAP_TYPE_vd__AuthorityList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__AuthorityList() { vd__AuthorityList::soap_default(NULL); }
	virtual ~vd__AuthorityList() { }
};
#endif

#ifndef SOAP_TYPE_vd__UserAuthority
#define SOAP_TYPE_vd__UserAuthority (202)
/* vd:UserAuthority */
class SOAP_CMAC vd__UserAuthority {
public:
	char *ID;	/* required element of type xsd:NCName */
	char *name;	/* optional element of type base:String255 */
	bool *granted;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 202; } /* = unique id SOAP_TYPE_vd__UserAuthority */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__UserAuthority() { vd__UserAuthority::soap_default(NULL); }
	virtual ~vd__UserAuthority() { }
};
#endif

#ifndef SOAP_TYPE__vd__union_WorkingArea
#define SOAP_TYPE__vd__union_WorkingArea (386)
/* xsd:choice */
union _vd__union_WorkingArea
{
#define SOAP_UNION__vd__union_WorkingArea_area	(1)
	class dic__Area *area;
#define SOAP_UNION__vd__union_WorkingArea_enterprise	(2)
	dic__Enterprise *enterprise;
};
#endif

#ifndef SOAP_TYPE_vd__WorkingArea
#define SOAP_TYPE_vd__WorkingArea (203)
/* Choice: */
class SOAP_CMAC vd__WorkingArea {
public:
	int __union_WorkingArea;	/* union discriminant (of union defined below) */
	union _vd__union_WorkingArea union_WorkingArea;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 203; } /* = unique id SOAP_TYPE_vd__WorkingArea */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__WorkingArea() { vd__WorkingArea::soap_default(NULL); }
	virtual ~vd__WorkingArea() { }
};
#endif

#ifndef SOAP_TYPE_vd__Citizenship
#define SOAP_TYPE_vd__Citizenship (204)
/* vd:Citizenship */
class SOAP_CMAC vd__Citizenship {
public:
	dic__Country *country;	/* optional element of type dic:Country */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 204; } /* = unique id SOAP_TYPE_vd__Citizenship */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__Citizenship() { vd__Citizenship::soap_default(NULL); }
	virtual ~vd__Citizenship() { }
};
#endif

#ifndef SOAP_TYPE__ws__submitApplicationRequest
#define SOAP_TYPE__ws__submitApplicationRequest (205)
/* ws:submitApplicationRequest */
class SOAP_CMAC _ws__submitApplicationRequest {
public:
	char *apiKey;	/* required element of type app:APIKey */
	app__Application *app__application;	/* required element of type app:Application */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 205; } /* = unique id SOAP_TYPE__ws__submitApplicationRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ws__submitApplicationRequest() { _ws__submitApplicationRequest::soap_default(NULL); }
	virtual ~_ws__submitApplicationRequest() { }
};
#endif

#ifndef SOAP_TYPE__ws__submitApplicationResponse
#define SOAP_TYPE__ws__submitApplicationResponse (206)
/* ws:submitApplicationResponse */
class SOAP_CMAC _ws__submitApplicationResponse {
public:
	app__Application *app__application;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type app:Application */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 206; } /* = unique id SOAP_TYPE__ws__submitApplicationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ws__submitApplicationResponse() { _ws__submitApplicationResponse::soap_default(NULL); }
	virtual ~_ws__submitApplicationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ws__receiveApplicationResultRequest
#define SOAP_TYPE__ws__receiveApplicationResultRequest (207)
/* ws:receiveApplicationResultRequest */
class SOAP_CMAC _ws__receiveApplicationResultRequest {
public:
	char *apiKey;	/* required element of type app:APIKey */
	char *issuerId;	/* required element of type base:UUID */
	char *applicationId;	/* required element of type base:UUID */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 207; } /* = unique id SOAP_TYPE__ws__receiveApplicationResultRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ws__receiveApplicationResultRequest() { _ws__receiveApplicationResultRequest::soap_default(NULL); }
	virtual ~_ws__receiveApplicationResultRequest() { }
};
#endif

#ifndef SOAP_TYPE__ws__receiveApplicationResultResponse
#define SOAP_TYPE__ws__receiveApplicationResultResponse (208)
/* ws:receiveApplicationResultResponse */
class SOAP_CMAC _ws__receiveApplicationResultResponse {
public:
	app__Application *app__application;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type app:Application */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 208; } /* = unique id SOAP_TYPE__ws__receiveApplicationResultResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ws__receiveApplicationResultResponse() { _ws__receiveApplicationResultResponse::soap_default(NULL); }
	virtual ~_ws__receiveApplicationResultResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__MercuryApplicationRequest
#define SOAP_TYPE_g2ba__MercuryApplicationRequest (22)
/* g2ba:MercuryApplicationRequest */
class SOAP_CMAC g2ba__MercuryApplicationRequest : public app__ApplicationData {
public:
	char *localTransactionId;	/* required element of type base:Identifier */
	vd__User *initiator;	/* required element of type vd:User */
	char **sessionToken;	/* optional element of type dic:OTPToken */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_g2ba__MercuryApplicationRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__MercuryApplicationRequest() { g2ba__MercuryApplicationRequest::soap_default(NULL); }
	virtual ~g2ba__MercuryApplicationRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ProcessIncomingConsignmentResponse
#define SOAP_TYPE_g2ba__ProcessIncomingConsignmentResponse (24)
/* g2ba:ProcessIncomingConsignmentResponse */
class SOAP_CMAC g2ba__ProcessIncomingConsignmentResponse : public app__ApplicationResultData {
public:
	int __sizestockEntry;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <stockEntry> */
	vd__StockEntry **stockEntry;	/* optional element of type vd:StockEntry */
	int __sizevetDocument;	/* sequence of elements <vetDocument> */
	vd__VetDocument **vetDocument;	/* optional element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_g2ba__ProcessIncomingConsignmentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ProcessIncomingConsignmentResponse() { g2ba__ProcessIncomingConsignmentResponse::soap_default(NULL); }
	virtual ~g2ba__ProcessIncomingConsignmentResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__PrepareOutgoingConsignmentResponse
#define SOAP_TYPE_g2ba__PrepareOutgoingConsignmentResponse (26)
/* g2ba:PrepareOutgoingConsignmentResponse */
class SOAP_CMAC g2ba__PrepareOutgoingConsignmentResponse : public app__ApplicationResultData {
public:
	int __sizestockEntry;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <stockEntry> */
	vd__StockEntry **stockEntry;	/* optional element of type vd:StockEntry */
	int __sizevetDocument;	/* sequence of elements <vetDocument> */
	vd__VetDocument **vetDocument;	/* optional element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_g2ba__PrepareOutgoingConsignmentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__PrepareOutgoingConsignmentResponse() { g2ba__PrepareOutgoingConsignmentResponse::soap_default(NULL); }
	virtual ~g2ba__PrepareOutgoingConsignmentResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__RegisterProductionOperationResponse
#define SOAP_TYPE_g2ba__RegisterProductionOperationResponse (28)
/* g2ba:RegisterProductionOperationResponse */
class SOAP_CMAC g2ba__RegisterProductionOperationResponse : public app__ApplicationResultData {
public:
	vd__StockEntryList *stockEntryList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type vd:StockEntryList */
	int __sizevetDocument;	/* sequence of elements <vetDocument> */
	vd__VetDocument **vetDocument;	/* optional element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_g2ba__RegisterProductionOperationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__RegisterProductionOperationResponse() { g2ba__RegisterProductionOperationResponse::soap_default(NULL); }
	virtual ~g2ba__RegisterProductionOperationResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__MergeStockEntriesResponse
#define SOAP_TYPE_g2ba__MergeStockEntriesResponse (30)
/* g2ba:MergeStockEntriesResponse */
class SOAP_CMAC g2ba__MergeStockEntriesResponse : public app__ApplicationResultData {
public:
	vd__StockEntryList *stockEntryList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntryList */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_g2ba__MergeStockEntriesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__MergeStockEntriesResponse() { g2ba__MergeStockEntriesResponse::soap_default(NULL); }
	virtual ~g2ba__MergeStockEntriesResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__WithdrawVetDocumentResponse
#define SOAP_TYPE_g2ba__WithdrawVetDocumentResponse (32)
/* g2ba:WithdrawVetDocumentResponse */
class SOAP_CMAC g2ba__WithdrawVetDocumentResponse : public app__ApplicationResultData {
public:
	vd__VetDocument *vetDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type vd:VetDocument */
	int __sizestockEntry;	/* sequence of elements <stockEntry> */
	vd__StockEntry **stockEntry;	/* optional element of type vd:StockEntry */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_g2ba__WithdrawVetDocumentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__WithdrawVetDocumentResponse() { g2ba__WithdrawVetDocumentResponse::soap_default(NULL); }
	virtual ~g2ba__WithdrawVetDocumentResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyBusinessEntityResponse
#define SOAP_TYPE_g2ba__ModifyBusinessEntityResponse (34)
/* g2ba:ModifyBusinessEntityResponse */
class SOAP_CMAC g2ba__ModifyBusinessEntityResponse : public app__ApplicationResultData {
public:
	int __sizebusinessEntity;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <businessEntity> */
	dic__BusinessEntity **businessEntity;	/* optional element of type dic:BusinessEntity */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_g2ba__ModifyBusinessEntityResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyBusinessEntityResponse() { g2ba__ModifyBusinessEntityResponse::soap_default(NULL); }
	virtual ~g2ba__ModifyBusinessEntityResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyEnterpriseResponse
#define SOAP_TYPE_g2ba__ModifyEnterpriseResponse (36)
/* g2ba:ModifyEnterpriseResponse */
class SOAP_CMAC g2ba__ModifyEnterpriseResponse : public app__ApplicationResultData {
public:
	int __sizeenterprise;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <enterprise> */
	dic__Enterprise **enterprise;	/* optional element of type dic:Enterprise */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_g2ba__ModifyEnterpriseResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyEnterpriseResponse() { g2ba__ModifyEnterpriseResponse::soap_default(NULL); }
	virtual ~g2ba__ModifyEnterpriseResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyActivityLocationsResponse
#define SOAP_TYPE_g2ba__ModifyActivityLocationsResponse (38)
/* g2ba:ModifyActivityLocationsResponse */
class SOAP_CMAC g2ba__ModifyActivityLocationsResponse : public app__ApplicationResultData {
public:
	dic__BusinessEntity *businessEntity;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type dic:BusinessEntity */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_g2ba__ModifyActivityLocationsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyActivityLocationsResponse() { g2ba__ModifyActivityLocationsResponse::soap_default(NULL); }
	virtual ~g2ba__ModifyActivityLocationsResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ResolveDiscrepancyResponse
#define SOAP_TYPE_g2ba__ResolveDiscrepancyResponse (40)
/* g2ba:ResolveDiscrepancyResponse */
class SOAP_CMAC g2ba__ResolveDiscrepancyResponse : public app__ApplicationResultData {
public:
	vd__StockEntryList *stockEntryList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntryList */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_g2ba__ResolveDiscrepancyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ResolveDiscrepancyResponse() { g2ba__ResolveDiscrepancyResponse::soap_default(NULL); }
	virtual ~g2ba__ResolveDiscrepancyResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyProducerStockListResponse
#define SOAP_TYPE_g2ba__ModifyProducerStockListResponse (42)
/* g2ba:ModifyProducerStockListResponse */
class SOAP_CMAC g2ba__ModifyProducerStockListResponse : public app__ApplicationResultData {
public:
	dic__ProductItemList *productItemList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type dic:ProductItemList */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_g2ba__ModifyProducerStockListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyProducerStockListResponse() { g2ba__ModifyProducerStockListResponse::soap_default(NULL); }
	virtual ~g2ba__ModifyProducerStockListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetVetDocumentByUuidResponse
#define SOAP_TYPE_g2ba__GetVetDocumentByUuidResponse (44)
/* g2ba:GetVetDocumentByUuidResponse */
class SOAP_CMAC g2ba__GetVetDocumentByUuidResponse : public app__ApplicationResultData {
public:
	vd__VetDocument *vd__vetDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_g2ba__GetVetDocumentByUuidResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetVetDocumentByUuidResponse() { g2ba__GetVetDocumentByUuidResponse::soap_default(NULL); }
	virtual ~g2ba__GetVetDocumentByUuidResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetVetDocumentListResponse
#define SOAP_TYPE_g2ba__GetVetDocumentListResponse (46)
/* g2ba:GetVetDocumentListResponse */
class SOAP_CMAC g2ba__GetVetDocumentListResponse : public app__ApplicationResultData {
public:
	class vd__VetDocumentList *vd__vetDocumentList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:VetDocumentList */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_g2ba__GetVetDocumentListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetVetDocumentListResponse() { g2ba__GetVetDocumentListResponse::soap_default(NULL); }
	virtual ~g2ba__GetVetDocumentListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetVetDocumentChangesListResponse
#define SOAP_TYPE_g2ba__GetVetDocumentChangesListResponse (48)
/* g2ba:GetVetDocumentChangesListResponse */
class SOAP_CMAC g2ba__GetVetDocumentChangesListResponse : public app__ApplicationResultData {
public:
	vd__VetDocumentList *vd__vetDocumentList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:VetDocumentList */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_g2ba__GetVetDocumentChangesListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetVetDocumentChangesListResponse() { g2ba__GetVetDocumentChangesListResponse::soap_default(NULL); }
	virtual ~g2ba__GetVetDocumentChangesListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryByGuidResponse
#define SOAP_TYPE_g2ba__GetStockEntryByGuidResponse (50)
/* g2ba:GetStockEntryByGuidResponse */
class SOAP_CMAC g2ba__GetStockEntryByGuidResponse : public app__ApplicationResultData {
public:
	vd__StockEntry *vd__stockEntry;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntry */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryByGuidResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryByGuidResponse() { g2ba__GetStockEntryByGuidResponse::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryByGuidResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryByUuidResponse
#define SOAP_TYPE_g2ba__GetStockEntryByUuidResponse (52)
/* g2ba:GetStockEntryByUuidResponse */
class SOAP_CMAC g2ba__GetStockEntryByUuidResponse : public app__ApplicationResultData {
public:
	vd__StockEntry *vd__stockEntry;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntry */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryByUuidResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryByUuidResponse() { g2ba__GetStockEntryByUuidResponse::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryByUuidResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryChangesListResponse
#define SOAP_TYPE_g2ba__GetStockEntryChangesListResponse (54)
/* g2ba:GetStockEntryChangesListResponse */
class SOAP_CMAC g2ba__GetStockEntryChangesListResponse : public app__ApplicationResultData {
public:
	vd__StockEntryList *vd__stockEntryList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntryList */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryChangesListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryChangesListResponse() { g2ba__GetStockEntryChangesListResponse::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryChangesListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryListResponse
#define SOAP_TYPE_g2ba__GetStockEntryListResponse (56)
/* g2ba:GetStockEntryListResponse */
class SOAP_CMAC g2ba__GetStockEntryListResponse : public app__ApplicationResultData {
public:
	vd__StockEntryList *vd__stockEntryList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntryList */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryListResponse() { g2ba__GetStockEntryListResponse::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryVersionListResponse
#define SOAP_TYPE_g2ba__GetStockEntryVersionListResponse (58)
/* g2ba:GetStockEntryVersionListResponse */
class SOAP_CMAC g2ba__GetStockEntryVersionListResponse : public app__ApplicationResultData {
public:
	vd__StockEntryList *vd__stockEntryList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type vd:StockEntryList */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryVersionListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryVersionListResponse() { g2ba__GetStockEntryVersionListResponse::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryVersionListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateTransportMovementDetailsResponse
#define SOAP_TYPE_g2ba__UpdateTransportMovementDetailsResponse (60)
/* g2ba:UpdateTransportMovementDetailsResponse */
class SOAP_CMAC g2ba__UpdateTransportMovementDetailsResponse : public app__ApplicationResultData {
public:
	int __sizevetDocument;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:vetDocument> */
	vd__VetDocument **vd__vetDocument;	/* optional element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_g2ba__UpdateTransportMovementDetailsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateTransportMovementDetailsResponse() { g2ba__UpdateTransportMovementDetailsResponse::soap_default(NULL); }
	virtual ~g2ba__UpdateTransportMovementDetailsResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateVeterinaryEventsResponse
#define SOAP_TYPE_g2ba__UpdateVeterinaryEventsResponse (62)
/* g2ba:UpdateVeterinaryEventsResponse */
class SOAP_CMAC g2ba__UpdateVeterinaryEventsResponse : public app__ApplicationResultData {
public:
	int __sizestockEntry;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:stockEntry> */
	vd__StockEntry **vd__stockEntry;	/* optional element of type vd:StockEntry */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_g2ba__UpdateVeterinaryEventsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateVeterinaryEventsResponse() { g2ba__UpdateVeterinaryEventsResponse::soap_default(NULL); }
	virtual ~g2ba__UpdateVeterinaryEventsResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__CheckShipmentRegionalizationResponse
#define SOAP_TYPE_g2ba__CheckShipmentRegionalizationResponse (64)
/* g2ba:CheckShipmentRegionalizationResponse */
class SOAP_CMAC g2ba__CheckShipmentRegionalizationResponse : public app__ApplicationResultData {
public:
	int __sizer13nRouteSection;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:r13nRouteSection> */
	vd__RouteSectionR13nRules **vd__r13nRouteSection;	/* optional element of type vd:RouteSectionR13nRules */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE_g2ba__CheckShipmentRegionalizationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__CheckShipmentRegionalizationResponse() { g2ba__CheckShipmentRegionalizationResponse::soap_default(NULL); }
	virtual ~g2ba__CheckShipmentRegionalizationResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__AddBusinessEntityUserResponse
#define SOAP_TYPE_g2ba__AddBusinessEntityUserResponse (66)
/* g2ba:AddBusinessEntityUserResponse */
class SOAP_CMAC g2ba__AddBusinessEntityUserResponse : public app__ApplicationResultData {
public:
	int __sizeuser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE_g2ba__AddBusinessEntityUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__AddBusinessEntityUserResponse() { g2ba__AddBusinessEntityUserResponse::soap_default(NULL); }
	virtual ~g2ba__AddBusinessEntityUserResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetBusinessEntityUserListResponse
#define SOAP_TYPE_g2ba__GetBusinessEntityUserListResponse (68)
/* g2ba:GetBusinessEntityUserListResponse */
class SOAP_CMAC g2ba__GetBusinessEntityUserListResponse : public app__ApplicationResultData {
public:
	class vd__UserList *vd__userList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type vd:UserList */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_g2ba__GetBusinessEntityUserListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetBusinessEntityUserListResponse() { g2ba__GetBusinessEntityUserListResponse::soap_default(NULL); }
	virtual ~g2ba__GetBusinessEntityUserListResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetBusinessEntityUserResponse
#define SOAP_TYPE_g2ba__GetBusinessEntityUserResponse (70)
/* g2ba:GetBusinessEntityUserResponse */
class SOAP_CMAC g2ba__GetBusinessEntityUserResponse : public app__ApplicationResultData {
public:
	vd__User *vd__user;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE_g2ba__GetBusinessEntityUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetBusinessEntityUserResponse() { g2ba__GetBusinessEntityUserResponse::soap_default(NULL); }
	virtual ~g2ba__GetBusinessEntityUserResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateUserAuthoritiesResponse
#define SOAP_TYPE_g2ba__UpdateUserAuthoritiesResponse (72)
/* g2ba:UpdateUserAuthoritiesResponse */
class SOAP_CMAC g2ba__UpdateUserAuthoritiesResponse : public app__ApplicationResultData {
public:
	int __sizeuser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE_g2ba__UpdateUserAuthoritiesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateUserAuthoritiesResponse() { g2ba__UpdateUserAuthoritiesResponse::soap_default(NULL); }
	virtual ~g2ba__UpdateUserAuthoritiesResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateUserWorkingAreasResponse
#define SOAP_TYPE_g2ba__UpdateUserWorkingAreasResponse (74)
/* g2ba:UpdateUserWorkingAreasResponse */
class SOAP_CMAC g2ba__UpdateUserWorkingAreasResponse : public app__ApplicationResultData {
public:
	int __sizeuser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE_g2ba__UpdateUserWorkingAreasResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateUserWorkingAreasResponse() { g2ba__UpdateUserWorkingAreasResponse::soap_default(NULL); }
	virtual ~g2ba__UpdateUserWorkingAreasResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UnbindBusinessEntityUserResponse
#define SOAP_TYPE_g2ba__UnbindBusinessEntityUserResponse (76)
/* g2ba:UnbindBusinessEntityUserResponse */
class SOAP_CMAC g2ba__UnbindBusinessEntityUserResponse : public app__ApplicationResultData {
public:
	int __sizeuser;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE_g2ba__UnbindBusinessEntityUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UnbindBusinessEntityUserResponse() { g2ba__UnbindBusinessEntityUserResponse::soap_default(NULL); }
	virtual ~g2ba__UnbindBusinessEntityUserResponse() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetApplicableUserAuthorityListResponse
#define SOAP_TYPE_g2ba__GetApplicableUserAuthorityListResponse (78)
/* g2ba:GetApplicableUserAuthorityListResponse */
class SOAP_CMAC g2ba__GetApplicableUserAuthorityListResponse : public app__ApplicationResultData {
public:
	vd__AuthorityList *vd__authorityList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type vd:AuthorityList */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE_g2ba__GetApplicableUserAuthorityListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetApplicableUserAuthorityListResponse() { g2ba__GetApplicableUserAuthorityListResponse::soap_default(NULL); }
	virtual ~g2ba__GetApplicableUserAuthorityListResponse() { }
};
#endif

#ifndef SOAP_TYPE_base__GenericVersioningEntity
#define SOAP_TYPE_base__GenericVersioningEntity (80)
/* base:GenericVersioningEntity */
class SOAP_CMAC base__GenericVersioningEntity : public base__GenericEntity {
public:
	char *guid;	/* optional element of type base:UUID */
	bool *active;	/* optional element of type xsd:boolean */
	bool *last;	/* optional element of type xsd:boolean */
	char **status;	/* optional element of type base:VersionStatus */
	time_t *createDate;	/* optional element of type xsd:dateTime */
	time_t *updateDate;	/* optional element of type xsd:dateTime */
	char *previous;	/* optional element of type base:UUID */
	char *next;	/* optional element of type base:UUID */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE_base__GenericVersioningEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__GenericVersioningEntity() { base__GenericVersioningEntity::soap_default(NULL); }
	virtual ~base__GenericVersioningEntity() { }
};
#endif

#ifndef SOAP_TYPE_base__Error
#define SOAP_TYPE_base__Error (85)
/* Primitive base:Error schema type: */
class SOAP_CMAC base__Error {
public:
	char *__item;
	char *code;	/* required attribute */
	char **qualifier;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_base__Error */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         base__Error() { base__Error::soap_default(NULL); }
	virtual ~base__Error() { }
};
#endif

#ifndef SOAP_TYPE_dic__PurposeList
#define SOAP_TYPE_dic__PurposeList (97)
/* dic:PurposeList */
class SOAP_CMAC dic__PurposeList : public base__EntityList {
public:
	int __sizepurpose;	/* sequence of elements <purpose> */
	dic__Purpose **purpose;	/* optional element of type dic:Purpose */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE_dic__PurposeList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__PurposeList() { dic__PurposeList::soap_default(NULL); }
	virtual ~dic__PurposeList() { }
};
#endif

#ifndef SOAP_TYPE_dic__UnitList
#define SOAP_TYPE_dic__UnitList (98)
/* dic:UnitList */
class SOAP_CMAC dic__UnitList : public base__EntityList {
public:
	int __sizeunit;	/* sequence of elements <unit> */
	dic__Unit **unit;	/* optional element of type dic:Unit */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE_dic__UnitList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__UnitList() { dic__UnitList::soap_default(NULL); }
	virtual ~dic__UnitList() { }
};
#endif

#ifndef SOAP_TYPE_dic__CountryList
#define SOAP_TYPE_dic__CountryList (107)
/* dic:CountryList */
class SOAP_CMAC dic__CountryList : public base__EntityList {
public:
	int __sizecountry;	/* sequence of elements <country> */
	dic__Country **country;	/* optional element of type dic:Country */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE_dic__CountryList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__CountryList() { dic__CountryList::soap_default(NULL); }
	virtual ~dic__CountryList() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionList
#define SOAP_TYPE_dic__RegionList (108)
/* dic:RegionList */
class SOAP_CMAC dic__RegionList : public base__EntityList {
public:
	int __sizeregion;	/* sequence of elements <region> */
	dic__Region **region;	/* optional element of type dic:Region */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE_dic__RegionList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionList() { dic__RegionList::soap_default(NULL); }
	virtual ~dic__RegionList() { }
};
#endif

#ifndef SOAP_TYPE_dic__DistrictList
#define SOAP_TYPE_dic__DistrictList (109)
/* dic:DistrictList */
class SOAP_CMAC dic__DistrictList : public base__EntityList {
public:
	int __sizedistrict;	/* sequence of elements <district> */
	dic__District **district;	/* optional element of type dic:District */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE_dic__DistrictList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__DistrictList() { dic__DistrictList::soap_default(NULL); }
	virtual ~dic__DistrictList() { }
};
#endif

#ifndef SOAP_TYPE_dic__LocalityList
#define SOAP_TYPE_dic__LocalityList (110)
/* dic:LocalityList */
class SOAP_CMAC dic__LocalityList : public base__EntityList {
public:
	int __sizelocality;	/* sequence of elements <locality> */
	dic__Locality **locality;	/* optional element of type dic:Locality */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE_dic__LocalityList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__LocalityList() { dic__LocalityList::soap_default(NULL); }
	virtual ~dic__LocalityList() { }
};
#endif

#ifndef SOAP_TYPE_dic__StreetList
#define SOAP_TYPE_dic__StreetList (111)
/* dic:StreetList */
class SOAP_CMAC dic__StreetList : public base__EntityList {
public:
	int __sizestreet;	/* sequence of elements <street> */
	dic__Street **street;	/* optional element of type dic:Street */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE_dic__StreetList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__StreetList() { dic__StreetList::soap_default(NULL); }
	virtual ~dic__StreetList() { }
};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseActivityList
#define SOAP_TYPE_dic__EnterpriseActivityList (113)
/* dic:EnterpriseActivityList */
class SOAP_CMAC dic__EnterpriseActivityList : public base__EntityList {
public:
	int __sizeactivity;	/* sequence of elements <activity> */
	class dic__EnterpriseActivity **activity;	/* optional element of type dic:EnterpriseActivity */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE_dic__EnterpriseActivityList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__EnterpriseActivityList() { dic__EnterpriseActivityList::soap_default(NULL); }
	virtual ~dic__EnterpriseActivityList() { }
};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseActivity
#define SOAP_TYPE_dic__EnterpriseActivity (114)
/* dic:EnterpriseActivity */
class SOAP_CMAC dic__EnterpriseActivity : public base__GenericEntity {
public:
	char **name;	/* optional element of type base:NText */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE_dic__EnterpriseActivity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__EnterpriseActivity() { dic__EnterpriseActivity::soap_default(NULL); }
	virtual ~dic__EnterpriseActivity() { }
};
#endif

#ifndef SOAP_TYPE_dic__EnterpriseList
#define SOAP_TYPE_dic__EnterpriseList (118)
/* dic:EnterpriseList */
class SOAP_CMAC dic__EnterpriseList : public base__EntityList {
public:
	int __sizeenterprise;	/* sequence of elements <enterprise> */
	dic__Enterprise **enterprise;	/* optional element of type dic:Enterprise */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE_dic__EnterpriseList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__EnterpriseList() { dic__EnterpriseList::soap_default(NULL); }
	virtual ~dic__EnterpriseList() { }
};
#endif

#ifndef SOAP_TYPE_dic__IncorporationForm
#define SOAP_TYPE_dic__IncorporationForm (121)
/* dic:IncorporationForm */
class SOAP_CMAC dic__IncorporationForm : public base__GenericEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *code;	/* optional element of type base:String255 */
	char *shortName;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE_dic__IncorporationForm */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__IncorporationForm() { dic__IncorporationForm::soap_default(NULL); }
	virtual ~dic__IncorporationForm() { }
};
#endif

#ifndef SOAP_TYPE_dic__BusinessEntityList
#define SOAP_TYPE_dic__BusinessEntityList (122)
/* dic:BusinessEntityList */
class SOAP_CMAC dic__BusinessEntityList : public base__EntityList {
public:
	int __sizebusinessEntity;	/* sequence of elements <businessEntity> */
	dic__BusinessEntity **businessEntity;	/* optional element of type dic:BusinessEntity */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE_dic__BusinessEntityList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__BusinessEntityList() { dic__BusinessEntityList::soap_default(NULL); }
	virtual ~dic__BusinessEntityList() { }
};
#endif

#ifndef SOAP_TYPE_dic__ProductList
#define SOAP_TYPE_dic__ProductList (126)
/* dic:ProductList */
class SOAP_CMAC dic__ProductList : public base__EntityList {
public:
	int __sizeproduct;	/* sequence of elements <product> */
	dic__Product **product;	/* optional element of type dic:Product */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE_dic__ProductList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ProductList() { dic__ProductList::soap_default(NULL); }
	virtual ~dic__ProductList() { }
};
#endif

#ifndef SOAP_TYPE_dic__SubProductList
#define SOAP_TYPE_dic__SubProductList (127)
/* dic:SubProductList */
class SOAP_CMAC dic__SubProductList : public base__EntityList {
public:
	int __sizesubProduct;	/* sequence of elements <subProduct> */
	dic__SubProduct **subProduct;	/* optional element of type dic:SubProduct */
public:
	virtual int soap_type() const { return 127; } /* = unique id SOAP_TYPE_dic__SubProductList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__SubProductList() { dic__SubProductList::soap_default(NULL); }
	virtual ~dic__SubProductList() { }
};
#endif

#ifndef SOAP_TYPE_dic__ProductItemList
#define SOAP_TYPE_dic__ProductItemList (128)
/* dic:ProductItemList */
class SOAP_CMAC dic__ProductItemList : public base__EntityList {
public:
	int __sizeproductItem;	/* sequence of elements <productItem> */
	dic__ProductItem **productItem;	/* optional element of type dic:ProductItem */
public:
	virtual int soap_type() const { return 128; } /* = unique id SOAP_TYPE_dic__ProductItemList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ProductItemList() { dic__ProductItemList::soap_default(NULL); }
	virtual ~dic__ProductItemList() { }
};
#endif

#ifndef SOAP_TYPE_dic__Area
#define SOAP_TYPE_dic__Area (148)
/* dic:Area */
class SOAP_CMAC dic__Area : public dic__Address {

public:
	virtual int soap_type() const { return 148; } /* = unique id SOAP_TYPE_dic__Area */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Area() { dic__Area::soap_default(NULL); }
	virtual ~dic__Area() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationConditionList
#define SOAP_TYPE_dic__RegionalizationConditionList (149)
/* dic:RegionalizationConditionList */
class SOAP_CMAC dic__RegionalizationConditionList : public base__EntityList {
public:
	int __sizecondition;	/* sequence of elements <condition> */
	dic__RegionalizationCondition **condition;	/* optional element of type dic:RegionalizationCondition */
public:
	virtual int soap_type() const { return 149; } /* = unique id SOAP_TYPE_dic__RegionalizationConditionList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationConditionList() { dic__RegionalizationConditionList::soap_default(NULL); }
	virtual ~dic__RegionalizationConditionList() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationRegionStatusList
#define SOAP_TYPE_dic__RegionalizationRegionStatusList (150)
/* dic:RegionalizationRegionStatusList */
class SOAP_CMAC dic__RegionalizationRegionStatusList : public base__EntityList {
public:
	int __sizestatus;	/* sequence of elements <status> */
	class dic__RegionalizationRegionStatus **status;	/* optional element of type dic:RegionalizationRegionStatus */
public:
	virtual int soap_type() const { return 150; } /* = unique id SOAP_TYPE_dic__RegionalizationRegionStatusList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationRegionStatusList() { dic__RegionalizationRegionStatusList::soap_default(NULL); }
	virtual ~dic__RegionalizationRegionStatusList() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationShippingRuleList
#define SOAP_TYPE_dic__RegionalizationShippingRuleList (151)
/* dic:RegionalizationShippingRuleList */
class SOAP_CMAC dic__RegionalizationShippingRuleList : public base__EntityList {
public:
	int __sizerule;	/* sequence of elements <rule> */
	dic__RegionalizationShippingRule **rule;	/* optional element of type dic:RegionalizationShippingRule */
public:
	virtual int soap_type() const { return 151; } /* = unique id SOAP_TYPE_dic__RegionalizationShippingRuleList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationShippingRuleList() { dic__RegionalizationShippingRuleList::soap_default(NULL); }
	virtual ~dic__RegionalizationShippingRuleList() { }
};
#endif

#ifndef SOAP_TYPE_dic__AnimalDiseaseList
#define SOAP_TYPE_dic__AnimalDiseaseList (152)
/* dic:AnimalDiseaseList */
class SOAP_CMAC dic__AnimalDiseaseList : public base__EntityList {
public:
	int __sizedisease;	/* sequence of elements <disease> */
	dic__AnimalDisease **disease;	/* optional element of type dic:AnimalDisease */
public:
	virtual int soap_type() const { return 152; } /* = unique id SOAP_TYPE_dic__AnimalDiseaseList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__AnimalDiseaseList() { dic__AnimalDiseaseList::soap_default(NULL); }
	virtual ~dic__AnimalDiseaseList() { }
};
#endif

#ifndef SOAP_TYPE_dic__ResearchMethodList
#define SOAP_TYPE_dic__ResearchMethodList (153)
/* dic:ResearchMethodList */
class SOAP_CMAC dic__ResearchMethodList : public base__EntityList {
public:
	int __sizemethod;	/* sequence of elements <method> */
	class dic__ResearchMethod **method;	/* optional element of type dic:ResearchMethod */
public:
	virtual int soap_type() const { return 153; } /* = unique id SOAP_TYPE_dic__ResearchMethodList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ResearchMethodList() { dic__ResearchMethodList::soap_default(NULL); }
	virtual ~dic__ResearchMethodList() { }
};
#endif

#ifndef SOAP_TYPE_dic__ActivityLocationList
#define SOAP_TYPE_dic__ActivityLocationList (154)
/* dic:ActivityLocationList */
class SOAP_CMAC dic__ActivityLocationList : public base__EntityList {
public:
	int __sizelocation;	/* sequence of elements <location> */
	dic__BusinessMember **location;	/* optional element of type dic:BusinessMember */
public:
	virtual int soap_type() const { return 154; } /* = unique id SOAP_TYPE_dic__ActivityLocationList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ActivityLocationList() { dic__ActivityLocationList::soap_default(NULL); }
	virtual ~dic__ActivityLocationList() { }
};
#endif

#ifndef SOAP_TYPE_vd__Consignment
#define SOAP_TYPE_vd__Consignment (157)
/* vd:Consignment */
class SOAP_CMAC vd__Consignment : public vd__Batch {
public:
	vd__StockEntry *sourceStockEntry;	/* optional element of type vd:StockEntry */
	char *id;	/* optional attribute */
	char *partOf;	/* optional attribute */
public:
	virtual int soap_type() const { return 157; } /* = unique id SOAP_TYPE_vd__Consignment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__Consignment() { vd__Consignment::soap_default(NULL); }
	virtual ~vd__Consignment() { }
};
#endif

#ifndef SOAP_TYPE_vd__ProductiveBatch
#define SOAP_TYPE_vd__ProductiveBatch (159)
/* vd:ProductiveBatch */
class SOAP_CMAC vd__ProductiveBatch : public vd__Batch {
public:
	char *id;	/* optional attribute */
public:
	virtual int soap_type() const { return 159; } /* = unique id SOAP_TYPE_vd__ProductiveBatch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ProductiveBatch() { vd__ProductiveBatch::soap_default(NULL); }
	virtual ~vd__ProductiveBatch() { }
};
#endif

#ifndef SOAP_TYPE_vd__Delivery
#define SOAP_TYPE_vd__Delivery (160)
/* vd:Delivery */
class SOAP_CMAC vd__Delivery : public base__GenericEntity {
public:
	time_t *deliveryDate;	/* optional element of type xsd:dateTime */
	dic__BusinessMember *consignor;	/* optional element of type dic:BusinessMember */
	dic__BusinessMember *consignee;	/* optional element of type dic:BusinessMember */
	int __sizeconsignment;	/* sequence of elements <consignment> */
	vd__Consignment **consignment;	/* optional element of type vd:Consignment */
	dic__BusinessEntity *broker;	/* optional element of type dic:BusinessEntity */
	vd__TransportInfo *transportInfo;	/* optional element of type vd:TransportInfo */
	enum dic__TransportationStorageType *transportStorageType;	/* optional element of type dic:TransportationStorageType */
	vd__ShipmentRoute *shipmentRoute;	/* optional element of type vd:ShipmentRoute */
	vd__ConsignmentDocumentList *accompanyingForms;	/* optional element of type vd:ConsignmentDocumentList */
public:
	virtual int soap_type() const { return 160; } /* = unique id SOAP_TYPE_vd__Delivery */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__Delivery() { vd__Delivery::soap_default(NULL); }
	virtual ~vd__Delivery() { }
};
#endif

#ifndef SOAP_TYPE_vd__VetDocumentList
#define SOAP_TYPE_vd__VetDocumentList (165)
/* vd:VetDocumentList */
class SOAP_CMAC vd__VetDocumentList : public base__EntityList {
public:
	int __sizevetDocument;	/* sequence of elements <vetDocument> */
	vd__VetDocument **vetDocument;	/* optional element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 165; } /* = unique id SOAP_TYPE_vd__VetDocumentList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__VetDocumentList() { vd__VetDocumentList::soap_default(NULL); }
	virtual ~vd__VetDocumentList() { }
};
#endif

#ifndef SOAP_TYPE_vd__DiscrepancyReason
#define SOAP_TYPE_vd__DiscrepancyReason (167)
/* vd:DiscrepancyReason */
class SOAP_CMAC vd__DiscrepancyReason : public base__GenericEntity {
public:
	char *name;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 167; } /* = unique id SOAP_TYPE_vd__DiscrepancyReason */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__DiscrepancyReason() { vd__DiscrepancyReason::soap_default(NULL); }
	virtual ~vd__DiscrepancyReason() { }
};
#endif

#ifndef SOAP_TYPE_vd__StockEntryList
#define SOAP_TYPE_vd__StockEntryList (169)
/* vd:StockEntryList */
class SOAP_CMAC vd__StockEntryList : public base__EntityList {
public:
	int __sizestockEntry;	/* sequence of elements <stockEntry> */
	vd__StockEntry **stockEntry;	/* optional element of type vd:StockEntry */
public:
	virtual int soap_type() const { return 169; } /* = unique id SOAP_TYPE_vd__StockEntryList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__StockEntryList() { vd__StockEntryList::soap_default(NULL); }
	virtual ~vd__StockEntryList() { }
};
#endif

#ifndef SOAP_TYPE_vd__Document
#define SOAP_TYPE_vd__Document (172)
/* vd:Document */
class SOAP_CMAC vd__Document : public base__GenericEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *form;	/* optional element of type base:String255 */
	char *issueSeries;	/* optional element of type base:String255 */
	char *issueNumber;	/* optional element of type base:String255 */
	char *issueDate;	/* optional element of type xsd:date */
	enum dic__DocumentType *type;	/* optional element of type dic:DocumentType */
	dic__Organization *issuer;	/* optional element of type dic:Organization */
	char *for_;	/* optional attribute */
	char **qualifier;	/* optional attribute */
public:
	virtual int soap_type() const { return 172; } /* = unique id SOAP_TYPE_vd__Document */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__Document() { vd__Document::soap_default(NULL); }
	virtual ~vd__Document() { }
};
#endif

#ifndef SOAP_TYPE__vd__union_ShipmentRoutePoint
#define SOAP_TYPE__vd__union_ShipmentRoutePoint (420)
/* xsd:choice */
union _vd__union_ShipmentRoutePoint
{
#define SOAP_UNION__vd__union_ShipmentRoutePoint_location	(1)
	dic__Location *location;
#define SOAP_UNION__vd__union_ShipmentRoutePoint_enterprise	(2)
	dic__Enterprise *enterprise;
};
#endif

#ifndef SOAP_TYPE_vd__ShipmentRoutePoint
#define SOAP_TYPE_vd__ShipmentRoutePoint (176)
/* vd:ShipmentRoutePoint */
class SOAP_CMAC vd__ShipmentRoutePoint : public base__GenericEntity {
public:
	char **sqnId;	/* optional element of type base:SequenceNumber */
	int __union_ShipmentRoutePoint;	/* union discriminant (of union defined below) */
	union _vd__union_ShipmentRoutePoint union_ShipmentRoutePoint;	/* required element of type xsd:choice */
	bool *transshipment;	/* optional element of type xsd:boolean */
	vd__TransportInfo *nextTransport;	/* optional element of type vd:TransportInfo */
public:
	virtual int soap_type() const { return 176; } /* = unique id SOAP_TYPE_vd__ShipmentRoutePoint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ShipmentRoutePoint() { vd__ShipmentRoutePoint::soap_default(NULL); }
	virtual ~vd__ShipmentRoutePoint() { }
};
#endif

#ifndef SOAP_TYPE__vd__union_LaboratoryResearchEvent_
#define SOAP_TYPE__vd__union_LaboratoryResearchEvent_ (422)
/* xsd:choice */
union _vd__union_LaboratoryResearchEvent_
{
#define SOAP_UNION__vd__union_LaboratoryResearchEvent__indicator	(1)
	class dic__Indicator *indicator;
#define SOAP_UNION__vd__union_LaboratoryResearchEvent__disease	(2)
	dic__AnimalDisease *disease;
};
#endif

#ifndef SOAP_TYPE_vd__LaboratoryResearchEvent
#define SOAP_TYPE_vd__LaboratoryResearchEvent (188)
/* vd:LaboratoryResearchEvent */
class SOAP_CMAC vd__LaboratoryResearchEvent : public vd__VeterinaryEvent {
public:
	int __sizebatchID;	/* sequence of elements <batchID> */
	char **batchID;	/* optional element of type base:Identifier */
	char *expertiseID;	/* optional element of type base:String255 */
	int __union_LaboratoryResearchEvent_;	/* union discriminant (of union defined below) */
	union _vd__union_LaboratoryResearchEvent_ union_LaboratoryResearchEvent_;	/* required element of type xsd:choice */
	dic__ResearchMethod *method;	/* optional element of type dic:ResearchMethod */
	enum dic__ResearchResult *result;	/* optional element of type dic:ResearchResult */
	char *conclusion;	/* optional element of type base:Text */
public:
	virtual int soap_type() const { return 188; } /* = unique id SOAP_TYPE_vd__LaboratoryResearchEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__LaboratoryResearchEvent() { vd__LaboratoryResearchEvent::soap_default(NULL); }
	virtual ~vd__LaboratoryResearchEvent() { }
};
#endif

#ifndef SOAP_TYPE_vd__AnimalMedicationEvent
#define SOAP_TYPE_vd__AnimalMedicationEvent (189)
/* vd:AnimalMedicationEvent */
class SOAP_CMAC vd__AnimalMedicationEvent : public vd__VeterinaryEvent {
public:
	dic__AnimalDisease *disease;	/* optional element of type dic:AnimalDisease */
	dic__MedicinalDrug *medicinalDrug;	/* optional element of type dic:MedicinalDrug */
	time_t *effectiveBeforeDate;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 189; } /* = unique id SOAP_TYPE_vd__AnimalMedicationEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__AnimalMedicationEvent() { vd__AnimalMedicationEvent::soap_default(NULL); }
	virtual ~vd__AnimalMedicationEvent() { }
};
#endif

#ifndef SOAP_TYPE_vd__QuarantineEvent
#define SOAP_TYPE_vd__QuarantineEvent (190)
/* vd:QuarantineEvent */
class SOAP_CMAC vd__QuarantineEvent : public vd__VeterinaryEvent {
public:
	char *duration;	/* optional element of type xsd:positiveInteger */
public:
	virtual int soap_type() const { return 190; } /* = unique id SOAP_TYPE_vd__QuarantineEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__QuarantineEvent() { vd__QuarantineEvent::soap_default(NULL); }
	virtual ~vd__QuarantineEvent() { }
};
#endif

#ifndef SOAP_TYPE__vd__union_User
#define SOAP_TYPE__vd__union_User (426)
/* xsd:choice */
union _vd__union_User
{
#define SOAP_UNION__vd__union_User_organization	(1)
	dic__Organization *organization;
#define SOAP_UNION__vd__union_User_businessEntity	(2)
	dic__BusinessEntity *businessEntity;
};
#endif

#ifndef SOAP_TYPE_vd__User
#define SOAP_TYPE_vd__User (198)
/* vd:User */
class SOAP_CMAC vd__User : public base__GenericEntity {
public:
	char *login;	/* optional element of type xsd:NCName */
	char *firstName;	/* optional element of type base:String255 */
	char *middleName;	/* optional element of type base:String255 */
	char *lastName;	/* optional element of type base:String255 */
	char *fio;	/* optional element of type base:String255 */
	char *birthDate;	/* optional element of type xsd:date */
	vd__Document *identity;	/* optional element of type vd:Document */
	vd__Citizenship *citizenship;	/* optional element of type vd:Citizenship */
	char **snils;	/* optional element of type vd:SNILSType */
	char *phone;	/* optional element of type base:String255 */
	char *workPhone;	/* optional element of type base:String255 */
	char *email;	/* optional element of type base:String255 */
	char *workEmail;	/* optional element of type base:String255 */
	int __union_User;	/* union discriminant (of union defined below) */
	union _vd__union_User union_User;	/* required element of type xsd:choice */
	char *post;	/* optional element of type base:String255 */
	bool *enabled;	/* optional element of type xsd:boolean */
	bool *nonExpired;	/* optional element of type xsd:boolean */
	bool *nonLocked;	/* optional element of type xsd:boolean */
	vd__AuthorityList *authorityList;	/* optional element of type vd:AuthorityList */
	class vd__WorkingAreaList *workingAreaList;	/* optional element of type vd:WorkingAreaList */
public:
	virtual int soap_type() const { return 198; } /* = unique id SOAP_TYPE_vd__User */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__User() { vd__User::soap_default(NULL); }
	virtual ~vd__User() { }
};
#endif

#ifndef SOAP_TYPE_vd__UserList
#define SOAP_TYPE_vd__UserList (199)
/* vd:UserList */
class SOAP_CMAC vd__UserList : public base__EntityList {
public:
	int __sizeuser;	/* sequence of elements <user> */
	vd__User **user;	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 199; } /* = unique id SOAP_TYPE_vd__UserList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__UserList() { vd__UserList::soap_default(NULL); }
	virtual ~vd__UserList() { }
};
#endif

#ifndef SOAP_TYPE_vd__WorkingAreaList
#define SOAP_TYPE_vd__WorkingAreaList (201)
/* vd:WorkingAreaList */
class SOAP_CMAC vd__WorkingAreaList : public base__EntityList {
public:
	int __sizeworkingArea;	/* sequence of elements <workingArea> */
	vd__WorkingArea **workingArea;	/* optional element of type vd:WorkingArea */
public:
	virtual int soap_type() const { return 201; } /* = unique id SOAP_TYPE_vd__WorkingAreaList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__WorkingAreaList() { vd__WorkingAreaList::soap_default(NULL); }
	virtual ~vd__WorkingAreaList() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ProcessIncomingConsignmentRequest
#define SOAP_TYPE_g2ba__ProcessIncomingConsignmentRequest (23)
/* g2ba:ProcessIncomingConsignmentRequest */
class SOAP_CMAC g2ba__ProcessIncomingConsignmentRequest : public g2ba__MercuryApplicationRequest {
public:
	vd__Delivery *delivery;	/* required element of type vd:Delivery */
	vd__DeliveryFactList *deliveryFacts;	/* required element of type vd:DeliveryFactList */
	int __sizediscrepancyReport;	/* sequence of elements <discrepancyReport> */
	class vd__DiscrepancyReport **discrepancyReport;	/* optional element of type vd:DiscrepancyReport */
	vd__Delivery *returnedDelivery;	/* optional element of type vd:Delivery */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_g2ba__ProcessIncomingConsignmentRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ProcessIncomingConsignmentRequest() { g2ba__ProcessIncomingConsignmentRequest::soap_default(NULL); }
	virtual ~g2ba__ProcessIncomingConsignmentRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__PrepareOutgoingConsignmentRequest
#define SOAP_TYPE_g2ba__PrepareOutgoingConsignmentRequest (25)
/* g2ba:PrepareOutgoingConsignmentRequest */
class SOAP_CMAC g2ba__PrepareOutgoingConsignmentRequest : public g2ba__MercuryApplicationRequest {
public:
	int __sizedelivery;	/* sequence of elements <delivery> */
	vd__Delivery **delivery;	/* required element of type vd:Delivery */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_g2ba__PrepareOutgoingConsignmentRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__PrepareOutgoingConsignmentRequest() { g2ba__PrepareOutgoingConsignmentRequest::soap_default(NULL); }
	virtual ~g2ba__PrepareOutgoingConsignmentRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__RegisterProductionOperationRequest
#define SOAP_TYPE_g2ba__RegisterProductionOperationRequest (27)
/* g2ba:RegisterProductionOperationRequest */
class SOAP_CMAC g2ba__RegisterProductionOperationRequest : public g2ba__MercuryApplicationRequest {
public:
	dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
	vd__ProductionOperation *productionOperation;	/* required element of type vd:ProductionOperation */
	int __sizevetDocument;	/* sequence of elements <vetDocument> */
	vd__VetDocument **vetDocument;	/* optional element of type vd:VetDocument */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_g2ba__RegisterProductionOperationRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__RegisterProductionOperationRequest() { g2ba__RegisterProductionOperationRequest::soap_default(NULL); }
	virtual ~g2ba__RegisterProductionOperationRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__MergeStockEntriesRequest
#define SOAP_TYPE_g2ba__MergeStockEntriesRequest (29)
/* g2ba:MergeStockEntriesRequest */
class SOAP_CMAC g2ba__MergeStockEntriesRequest : public g2ba__MercuryApplicationRequest {
public:
	dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
	vd__MergeStockEntriesOperation *mergeOperation;	/* required element of type vd:MergeStockEntriesOperation */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_g2ba__MergeStockEntriesRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__MergeStockEntriesRequest() { g2ba__MergeStockEntriesRequest::soap_default(NULL); }
	virtual ~g2ba__MergeStockEntriesRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__WithdrawVetDocumentRequest
#define SOAP_TYPE_g2ba__WithdrawVetDocumentRequest (31)
/* g2ba:WithdrawVetDocumentRequest */
class SOAP_CMAC g2ba__WithdrawVetDocumentRequest : public g2ba__MercuryApplicationRequest {
public:
	char *vetDocumentId;	/* required element of type base:UUID */
	char *withdrawReason;	/* required element of type vd:VetDocumentStatusChangeReason */
	time_t withdrawDate;	/* required element of type xsd:dateTime */
	vd__User *specifiedPerson;	/* optional element of type vd:User */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_g2ba__WithdrawVetDocumentRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__WithdrawVetDocumentRequest() { g2ba__WithdrawVetDocumentRequest::soap_default(NULL); }
	virtual ~g2ba__WithdrawVetDocumentRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyBusinessEntityRequest
#define SOAP_TYPE_g2ba__ModifyBusinessEntityRequest (33)
/* g2ba:ModifyBusinessEntityRequest */
class SOAP_CMAC g2ba__ModifyBusinessEntityRequest : public g2ba__MercuryApplicationRequest {
public:
	vd__BEModificationOperation *modificationOperation;	/* required element of type vd:BEModificationOperation */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_g2ba__ModifyBusinessEntityRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyBusinessEntityRequest() { g2ba__ModifyBusinessEntityRequest::soap_default(NULL); }
	virtual ~g2ba__ModifyBusinessEntityRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyEnterpriseRequest
#define SOAP_TYPE_g2ba__ModifyEnterpriseRequest (35)
/* g2ba:ModifyEnterpriseRequest */
class SOAP_CMAC g2ba__ModifyEnterpriseRequest : public g2ba__MercuryApplicationRequest {
public:
	vd__ENTModificationOperation *modificationOperation;	/* required element of type vd:ENTModificationOperation */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_g2ba__ModifyEnterpriseRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyEnterpriseRequest() { g2ba__ModifyEnterpriseRequest::soap_default(NULL); }
	virtual ~g2ba__ModifyEnterpriseRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyActivityLocationsRequest
#define SOAP_TYPE_g2ba__ModifyActivityLocationsRequest (37)
/* g2ba:ModifyActivityLocationsRequest */
class SOAP_CMAC g2ba__ModifyActivityLocationsRequest : public g2ba__MercuryApplicationRequest {
public:
	vd__BEActivityLocationsModificationOperation *modificationOperation;	/* required element of type vd:BEActivityLocationsModificationOperation */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_g2ba__ModifyActivityLocationsRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyActivityLocationsRequest() { g2ba__ModifyActivityLocationsRequest::soap_default(NULL); }
	virtual ~g2ba__ModifyActivityLocationsRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ResolveDiscrepancyRequest
#define SOAP_TYPE_g2ba__ResolveDiscrepancyRequest (39)
/* g2ba:ResolveDiscrepancyRequest */
class SOAP_CMAC g2ba__ResolveDiscrepancyRequest : public g2ba__MercuryApplicationRequest {
public:
	dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
	time_t inventoryDate;	/* required element of type xsd:dateTime */
	vd__User *responsible;	/* required element of type vd:User */
	int __sizestockDiscrepancy;	/* sequence of elements <stockDiscrepancy> */
	vd__StockDiscrepancy **stockDiscrepancy;	/* required element of type vd:StockDiscrepancy */
	int __sizediscrepancyReport;	/* sequence of elements <discrepancyReport> */
	vd__DiscrepancyReport **discrepancyReport;	/* required element of type vd:DiscrepancyReport */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_g2ba__ResolveDiscrepancyRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ResolveDiscrepancyRequest() { g2ba__ResolveDiscrepancyRequest::soap_default(NULL); }
	virtual ~g2ba__ResolveDiscrepancyRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__ModifyProducerStockListRequest
#define SOAP_TYPE_g2ba__ModifyProducerStockListRequest (41)
/* g2ba:ModifyProducerStockListRequest */
class SOAP_CMAC g2ba__ModifyProducerStockListRequest : public g2ba__MercuryApplicationRequest {
public:
	vd__PSLModificationOperation *modificationOperation;	/* required element of type vd:PSLModificationOperation */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_g2ba__ModifyProducerStockListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__ModifyProducerStockListRequest() { g2ba__ModifyProducerStockListRequest::soap_default(NULL); }
	virtual ~g2ba__ModifyProducerStockListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetVetDocumentByUuidRequest
#define SOAP_TYPE_g2ba__GetVetDocumentByUuidRequest (43)
/* g2ba:GetVetDocumentByUuidRequest */
class SOAP_CMAC g2ba__GetVetDocumentByUuidRequest : public g2ba__MercuryApplicationRequest {
public:
	char *base__uuid;	/* required element of type base:UUID */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_g2ba__GetVetDocumentByUuidRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetVetDocumentByUuidRequest() { g2ba__GetVetDocumentByUuidRequest::soap_default(NULL); }
	virtual ~g2ba__GetVetDocumentByUuidRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetVetDocumentListRequest
#define SOAP_TYPE_g2ba__GetVetDocumentListRequest (45)
/* g2ba:GetVetDocumentListRequest */
class SOAP_CMAC g2ba__GetVetDocumentListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
	enum vd__VetDocumentType *vd__vetDocumentType;	/* optional element of type vd:VetDocumentType */
	enum vd__VetDocumentStatus *vd__vetDocumentStatus;	/* optional element of type vd:VetDocumentStatus */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_g2ba__GetVetDocumentListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetVetDocumentListRequest() { g2ba__GetVetDocumentListRequest::soap_default(NULL); }
	virtual ~g2ba__GetVetDocumentListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetVetDocumentChangesListRequest
#define SOAP_TYPE_g2ba__GetVetDocumentChangesListRequest (47)
/* g2ba:GetVetDocumentChangesListRequest */
class SOAP_CMAC g2ba__GetVetDocumentChangesListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
	base__DateInterval *base__updateDateInterval;	/* required element of type base:DateInterval */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_g2ba__GetVetDocumentChangesListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetVetDocumentChangesListRequest() { g2ba__GetVetDocumentChangesListRequest::soap_default(NULL); }
	virtual ~g2ba__GetVetDocumentChangesListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryByGuidRequest
#define SOAP_TYPE_g2ba__GetStockEntryByGuidRequest (49)
/* g2ba:GetStockEntryByGuidRequest */
class SOAP_CMAC g2ba__GetStockEntryByGuidRequest : public g2ba__MercuryApplicationRequest {
public:
	char *base__guid;	/* required element of type base:UUID */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryByGuidRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryByGuidRequest() { g2ba__GetStockEntryByGuidRequest::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryByGuidRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryByUuidRequest
#define SOAP_TYPE_g2ba__GetStockEntryByUuidRequest (51)
/* g2ba:GetStockEntryByUuidRequest */
class SOAP_CMAC g2ba__GetStockEntryByUuidRequest : public g2ba__MercuryApplicationRequest {
public:
	char *base__uuid;	/* required element of type base:UUID */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryByUuidRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryByUuidRequest() { g2ba__GetStockEntryByUuidRequest::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryByUuidRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryChangesListRequest
#define SOAP_TYPE_g2ba__GetStockEntryChangesListRequest (53)
/* g2ba:GetStockEntryChangesListRequest */
class SOAP_CMAC g2ba__GetStockEntryChangesListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
	base__DateInterval *base__updateDateInterval;	/* required element of type base:DateInterval */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryChangesListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryChangesListRequest() { g2ba__GetStockEntryChangesListRequest::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryChangesListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryListRequest
#define SOAP_TYPE_g2ba__GetStockEntryListRequest (55)
/* g2ba:GetStockEntryListRequest */
class SOAP_CMAC g2ba__GetStockEntryListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
	class vd__StockEntrySearchPattern *searchPattern;	/* optional element of type vd:StockEntrySearchPattern */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryListRequest() { g2ba__GetStockEntryListRequest::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetStockEntryVersionListRequest
#define SOAP_TYPE_g2ba__GetStockEntryVersionListRequest (57)
/* g2ba:GetStockEntryVersionListRequest */
class SOAP_CMAC g2ba__GetStockEntryVersionListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
	char *base__guid;	/* required element of type base:UUID */
	char *dic__enterpriseGuid;	/* required element of type base:UUID */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_g2ba__GetStockEntryVersionListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetStockEntryVersionListRequest() { g2ba__GetStockEntryVersionListRequest::soap_default(NULL); }
	virtual ~g2ba__GetStockEntryVersionListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateTransportMovementDetailsRequest
#define SOAP_TYPE_g2ba__UpdateTransportMovementDetailsRequest (59)
/* g2ba:UpdateTransportMovementDetailsRequest */
class SOAP_CMAC g2ba__UpdateTransportMovementDetailsRequest : public g2ba__MercuryApplicationRequest {
public:
	dic__BusinessMember *vd__deliveryParticipant;	/* required element of type dic:BusinessMember */
	int __sizevetDocumentUuid;	/* sequence of elements <vd:vetDocumentUuid> */
	char **vd__vetDocumentUuid;	/* required element of type base:UUID */
	vd__ShipmentRoute *vd__shipmentRoute;	/* required element of type vd:ShipmentRoute */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_g2ba__UpdateTransportMovementDetailsRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateTransportMovementDetailsRequest() { g2ba__UpdateTransportMovementDetailsRequest::soap_default(NULL); }
	virtual ~g2ba__UpdateTransportMovementDetailsRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateVeterinaryEventsRequest
#define SOAP_TYPE_g2ba__UpdateVeterinaryEventsRequest (61)
/* g2ba:UpdateVeterinaryEventsRequest */
class SOAP_CMAC g2ba__UpdateVeterinaryEventsRequest : public g2ba__MercuryApplicationRequest {
public:
	dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
	int __sizestockEntry;	/* sequence of elements <vd:stockEntry> */
	vd__StockEntry **vd__stockEntry;	/* required element of type vd:StockEntry */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_g2ba__UpdateVeterinaryEventsRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateVeterinaryEventsRequest() { g2ba__UpdateVeterinaryEventsRequest::soap_default(NULL); }
	virtual ~g2ba__UpdateVeterinaryEventsRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__CheckShipmentRegionalizationRequest
#define SOAP_TYPE_g2ba__CheckShipmentRegionalizationRequest (63)
/* g2ba:CheckShipmentRegionalizationRequest */
class SOAP_CMAC g2ba__CheckShipmentRegionalizationRequest : public g2ba__MercuryApplicationRequest {
public:
	int __sizecargoType;	/* sequence of elements <dic:cargoType> */
	dic__SubProduct **dic__cargoType;	/* required element of type dic:SubProduct */
	vd__ShipmentRoute *vd__shipmentRoute;	/* required element of type vd:ShipmentRoute */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_g2ba__CheckShipmentRegionalizationRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__CheckShipmentRegionalizationRequest() { g2ba__CheckShipmentRegionalizationRequest::soap_default(NULL); }
	virtual ~g2ba__CheckShipmentRegionalizationRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__AddBusinessEntityUserRequest
#define SOAP_TYPE_g2ba__AddBusinessEntityUserRequest (65)
/* g2ba:AddBusinessEntityUserRequest */
class SOAP_CMAC g2ba__AddBusinessEntityUserRequest : public g2ba__MercuryApplicationRequest {
public:
	int __sizeuser;	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* required element of type vd:User */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_g2ba__AddBusinessEntityUserRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__AddBusinessEntityUserRequest() { g2ba__AddBusinessEntityUserRequest::soap_default(NULL); }
	virtual ~g2ba__AddBusinessEntityUserRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetBusinessEntityUserListRequest
#define SOAP_TYPE_g2ba__GetBusinessEntityUserListRequest (67)
/* g2ba:GetBusinessEntityUserListRequest */
class SOAP_CMAC g2ba__GetBusinessEntityUserListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE_g2ba__GetBusinessEntityUserListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetBusinessEntityUserListRequest() { g2ba__GetBusinessEntityUserListRequest::soap_default(NULL); }
	virtual ~g2ba__GetBusinessEntityUserListRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetBusinessEntityUserRequest
#define SOAP_TYPE_g2ba__GetBusinessEntityUserRequest (69)
/* g2ba:GetBusinessEntityUserRequest */
class SOAP_CMAC g2ba__GetBusinessEntityUserRequest : public g2ba__MercuryApplicationRequest {
public:
	vd__User *vd__user;	/* required element of type vd:User */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE_g2ba__GetBusinessEntityUserRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetBusinessEntityUserRequest() { g2ba__GetBusinessEntityUserRequest::soap_default(NULL); }
	virtual ~g2ba__GetBusinessEntityUserRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateUserAuthoritiesRequest
#define SOAP_TYPE_g2ba__UpdateUserAuthoritiesRequest (71)
/* g2ba:UpdateUserAuthoritiesRequest */
class SOAP_CMAC g2ba__UpdateUserAuthoritiesRequest : public g2ba__MercuryApplicationRequest {
public:
	int __sizeuser;	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* required element of type vd:User */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE_g2ba__UpdateUserAuthoritiesRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateUserAuthoritiesRequest() { g2ba__UpdateUserAuthoritiesRequest::soap_default(NULL); }
	virtual ~g2ba__UpdateUserAuthoritiesRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UpdateUserWorkingAreasRequest
#define SOAP_TYPE_g2ba__UpdateUserWorkingAreasRequest (73)
/* g2ba:UpdateUserWorkingAreasRequest */
class SOAP_CMAC g2ba__UpdateUserWorkingAreasRequest : public g2ba__MercuryApplicationRequest {
public:
	int __sizeuser;	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* required element of type vd:User */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE_g2ba__UpdateUserWorkingAreasRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UpdateUserWorkingAreasRequest() { g2ba__UpdateUserWorkingAreasRequest::soap_default(NULL); }
	virtual ~g2ba__UpdateUserWorkingAreasRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__UnbindBusinessEntityUserRequest
#define SOAP_TYPE_g2ba__UnbindBusinessEntityUserRequest (75)
/* g2ba:UnbindBusinessEntityUserRequest */
class SOAP_CMAC g2ba__UnbindBusinessEntityUserRequest : public g2ba__MercuryApplicationRequest {
public:
	int __sizeuser;	/* sequence of elements <vd:user> */
	vd__User **vd__user;	/* required element of type vd:User */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE_g2ba__UnbindBusinessEntityUserRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__UnbindBusinessEntityUserRequest() { g2ba__UnbindBusinessEntityUserRequest::soap_default(NULL); }
	virtual ~g2ba__UnbindBusinessEntityUserRequest() { }
};
#endif

#ifndef SOAP_TYPE_g2ba__GetApplicableUserAuthorityListRequest
#define SOAP_TYPE_g2ba__GetApplicableUserAuthorityListRequest (77)
/* g2ba:GetApplicableUserAuthorityListRequest */
class SOAP_CMAC g2ba__GetApplicableUserAuthorityListRequest : public g2ba__MercuryApplicationRequest {
public:
	base__ListOptions *base__listOptions;	/* optional element of type base:ListOptions */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE_g2ba__GetApplicableUserAuthorityListRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         g2ba__GetApplicableUserAuthorityListRequest() { g2ba__GetApplicableUserAuthorityListRequest::soap_default(NULL); }
	virtual ~g2ba__GetApplicableUserAuthorityListRequest() { }
};
#endif

#ifndef SOAP_TYPE_app__BusinessError
#define SOAP_TYPE_app__BusinessError (93)
/* Primitive app:BusinessError schema type: */
class SOAP_CMAC app__BusinessError : public base__Error {

public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE_app__BusinessError */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         app__BusinessError() { app__BusinessError::soap_default(NULL); }
	virtual ~app__BusinessError() { }
};
#endif

#ifndef SOAP_TYPE_dic__Purpose
#define SOAP_TYPE_dic__Purpose (94)
/* dic:Purpose */
class SOAP_CMAC dic__Purpose : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	bool *forSubstandard;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE_dic__Purpose */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Purpose() { dic__Purpose::soap_default(NULL); }
	virtual ~dic__Purpose() { }
};
#endif

#ifndef SOAP_TYPE_dic__Unit
#define SOAP_TYPE_dic__Unit (95)
/* dic:Unit */
class SOAP_CMAC dic__Unit : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *fullName;	/* optional element of type base:String255 */
	char *commonUnitGuid;	/* optional element of type base:UUID */
	char *factor;	/* optional element of type xsd:integer */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE_dic__Unit */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Unit() { dic__Unit::soap_default(NULL); }
	virtual ~dic__Unit() { }
};
#endif

#ifndef SOAP_TYPE_dic__PackingType
#define SOAP_TYPE_dic__PackingType (96)
/* dic:PackingType */
class SOAP_CMAC dic__PackingType : public base__GenericVersioningEntity {
public:
	enum dic__PackingCodeType *globalID;	/* optional element of type dic:PackingCodeType */
	char *name;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE_dic__PackingType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__PackingType() { dic__PackingType::soap_default(NULL); }
	virtual ~dic__PackingType() { }
};
#endif

#ifndef SOAP_TYPE_dic__Country
#define SOAP_TYPE_dic__Country (99)
/* dic:Country */
class SOAP_CMAC dic__Country : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *fullName;	/* optional element of type base:String255 */
	char *englishName;	/* optional element of type base:String255 */
	char *code;	/* optional element of type dic:Code */
	char *code3;	/* optional element of type dic:Code3 */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE_dic__Country */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Country() { dic__Country::soap_default(NULL); }
	virtual ~dic__Country() { }
};
#endif

#ifndef SOAP_TYPE_dic__FederalDistrict
#define SOAP_TYPE_dic__FederalDistrict (100)
/* dic:FederalDistrict */
class SOAP_CMAC dic__FederalDistrict : public base__GenericVersioningEntity {
public:
	char *fullName;	/* optional element of type base:String255 */
	char *shortName;	/* optional element of type base:String255 */
	char *abbreviation;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE_dic__FederalDistrict */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__FederalDistrict() { dic__FederalDistrict::soap_default(NULL); }
	virtual ~dic__FederalDistrict() { }
};
#endif

#ifndef SOAP_TYPE_dic__AddressObjectView
#define SOAP_TYPE_dic__AddressObjectView (101)
/* dic:AddressObjectView */
class SOAP_CMAC dic__AddressObjectView : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *englishName;	/* optional element of type base:String255 */
	char *view;	/* optional element of type base:String255 */
	char *regionCode;	/* optional element of type xsd:string */
	char *type;	/* optional element of type base:String255 */
	char *countryGuid;	/* optional element of type base:UUID */
	bool *hasStreets;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_dic__AddressObjectView */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__AddressObjectView() { dic__AddressObjectView::soap_default(NULL); }
	virtual ~dic__AddressObjectView() { }
};
#endif

#ifndef SOAP_TYPE_dic__Enterprise
#define SOAP_TYPE_dic__Enterprise (112)
/* dic:Enterprise */
class SOAP_CMAC dic__Enterprise : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *englishName;	/* optional element of type base:String255 */
	char **type;	/* optional element of type dic:EnterpriseType */
	dic__EnterpriseNumberList *numberList;	/* optional element of type dic:EnterpriseNumberList */
	dic__Address *address;	/* optional element of type dic:Address */
	dic__EnterpriseActivityList *activityList;	/* optional element of type dic:EnterpriseActivityList */
	dic__BusinessEntity *owner;	/* optional element of type dic:BusinessEntity */
	int __sizeofficialRegistration;	/* sequence of elements <officialRegistration> */
	dic__EnterpriseOfficialRegistration **officialRegistration;	/* optional element of type dic:EnterpriseOfficialRegistration */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE_dic__Enterprise */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Enterprise() { dic__Enterprise::soap_default(NULL); }
	virtual ~dic__Enterprise() { }
};
#endif

#ifndef SOAP_TYPE__dic__BusinessEntity_activityLocation
#define SOAP_TYPE__dic__BusinessEntity_activityLocation (457)
/* dic:BusinessEntity-activityLocation */
class SOAP_CMAC _dic__BusinessEntity_activityLocation {
public:
	int __sizeglobalID;	/* sequence of elements <globalID> */
	char **globalID;	/* optional element of type dic:GLNType */
	dic__Enterprise *enterprise;	/* required element of type dic:Enterprise */
public:
	virtual int soap_type() const { return 457; } /* = unique id SOAP_TYPE__dic__BusinessEntity_activityLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _dic__BusinessEntity_activityLocation() { _dic__BusinessEntity_activityLocation::soap_default(NULL); }
	virtual ~_dic__BusinessEntity_activityLocation() { }
};
#endif

#ifndef SOAP_TYPE_dic__BusinessEntity
#define SOAP_TYPE_dic__BusinessEntity (120)
/* dic:BusinessEntity */
class SOAP_CMAC dic__BusinessEntity : public base__GenericVersioningEntity {
public:
	enum dic__BusinessEntityType *type;	/* optional element of type dic:BusinessEntityType */
	char *name;	/* optional element of type base:String255 */
	dic__IncorporationForm *incorporationForm;	/* optional element of type dic:IncorporationForm */
	char *fullName;	/* optional element of type base:String255 */
	char *fio;	/* optional element of type base:String255 */
	char *passport;	/* optional element of type base:String255 */
	char *inn;	/* optional element of type base:String255 */
	char *kpp;	/* optional element of type base:String255 */
	char *ogrn;	/* optional element of type base:String255 */
	dic__Address *juridicalAddress;	/* optional element of type dic:Address */
	int __sizeactivityLocation;	/* sequence of elements <activityLocation> */
	_dic__BusinessEntity_activityLocation *activityLocation;	/* optional element of type dic:BusinessEntity-activityLocation */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE_dic__BusinessEntity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__BusinessEntity() { dic__BusinessEntity::soap_default(NULL); }
	virtual ~dic__BusinessEntity() { }
};
#endif

#ifndef SOAP_TYPE_dic__ProductItem
#define SOAP_TYPE_dic__ProductItem (123)
/* dic:ProductItem */
class SOAP_CMAC dic__ProductItem : public base__GenericVersioningEntity {
public:
	char *globalID;	/* optional element of type dic:GTINType */
	char *name;	/* optional element of type base:String255 */
	char *code;	/* optional element of type base:String255 */
	enum dic__ProductType *productType;	/* optional element of type dic:ProductType */
	dic__Product *product;	/* optional element of type dic:Product */
	dic__SubProduct *subProduct;	/* optional element of type dic:SubProduct */
	bool *correspondsToGost;	/* optional element of type xsd:boolean */
	char *gost;	/* optional element of type base:String255 */
	dic__BusinessEntity *producer;	/* optional element of type dic:BusinessEntity */
	dic__BusinessEntity *tmOwner;	/* optional element of type dic:BusinessEntity */
	int __sizeproducing;	/* sequence of elements <producing> */
	dic__ProductItemProducing **producing;	/* optional element of type dic:ProductItemProducing */
	dic__Packaging *packaging;	/* optional element of type dic:Packaging */
	bool *isPublic;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE_dic__ProductItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ProductItem() { dic__ProductItem::soap_default(NULL); }
	virtual ~dic__ProductItem() { }
};
#endif

#ifndef SOAP_TYPE_dic__Product
#define SOAP_TYPE_dic__Product (124)
/* dic:Product */
class SOAP_CMAC dic__Product : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *code;	/* optional element of type base:String255 */
	char *englishName;	/* optional element of type base:String255 */
	enum dic__ProductType *productType;	/* optional element of type dic:ProductType */
public:
	virtual int soap_type() const { return 124; } /* = unique id SOAP_TYPE_dic__Product */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Product() { dic__Product::soap_default(NULL); }
	virtual ~dic__Product() { }
};
#endif

#ifndef SOAP_TYPE_dic__SubProduct
#define SOAP_TYPE_dic__SubProduct (125)
/* dic:SubProduct */
class SOAP_CMAC dic__SubProduct : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
	char *code;	/* optional element of type base:String255 */
	char *englishName;	/* optional element of type base:String255 */
	char *productGuid;	/* optional element of type base:UUID */
public:
	virtual int soap_type() const { return 125; } /* = unique id SOAP_TYPE_dic__SubProduct */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__SubProduct() { dic__SubProduct::soap_default(NULL); }
	virtual ~dic__SubProduct() { }
};
#endif

#ifndef SOAP_TYPE_dic__ProductMarks
#define SOAP_TYPE_dic__ProductMarks (129)
/* Primitive dic:ProductMarks schema type: */
class SOAP_CMAC dic__ProductMarks {
public:
	char *__item;
	enum dic__ProductMarkingClass class_;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 129; } /* = unique id SOAP_TYPE_dic__ProductMarks */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ProductMarks() { dic__ProductMarks::soap_default(NULL); }
	virtual ~dic__ProductMarks() { }
};
#endif

#ifndef SOAP_TYPE_dic__Indicator
#define SOAP_TYPE_dic__Indicator (138)
/* dic:Indicator */
class SOAP_CMAC dic__Indicator : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE_dic__Indicator */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Indicator() { dic__Indicator::soap_default(NULL); }
	virtual ~dic__Indicator() { }
};
#endif

#ifndef SOAP_TYPE_dic__AnimalDisease
#define SOAP_TYPE_dic__AnimalDisease (139)
/* dic:AnimalDisease */
class SOAP_CMAC dic__AnimalDisease : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 139; } /* = unique id SOAP_TYPE_dic__AnimalDisease */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__AnimalDisease() { dic__AnimalDisease::soap_default(NULL); }
	virtual ~dic__AnimalDisease() { }
};
#endif

#ifndef SOAP_TYPE_dic__ResearchMethod
#define SOAP_TYPE_dic__ResearchMethod (140)
/* dic:ResearchMethod */
class SOAP_CMAC dic__ResearchMethod : public base__GenericVersioningEntity {
public:
	char *name;	/* optional element of type base:String255 */
public:
	virtual int soap_type() const { return 140; } /* = unique id SOAP_TYPE_dic__ResearchMethod */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__ResearchMethod() { dic__ResearchMethod::soap_default(NULL); }
	virtual ~dic__ResearchMethod() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationCondition
#define SOAP_TYPE_dic__RegionalizationCondition (142)
/* dic:RegionalizationCondition */
class SOAP_CMAC dic__RegionalizationCondition : public base__GenericVersioningEntity {
public:
	char **referenceNumber;	/* optional element of type base:Identifier */
	char *text;	/* optional element of type base:Text */
	bool *strict;	/* optional element of type xsd:boolean */
	int __sizerelatedDisease;	/* sequence of elements <relatedDisease> */
	dic__AnimalDisease **relatedDisease;	/* optional element of type dic:AnimalDisease */
public:
	virtual int soap_type() const { return 142; } /* = unique id SOAP_TYPE_dic__RegionalizationCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationCondition() { dic__RegionalizationCondition::soap_default(NULL); }
	virtual ~dic__RegionalizationCondition() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationShippingRule
#define SOAP_TYPE_dic__RegionalizationShippingRule (145)
/* dic:RegionalizationShippingRule */
class SOAP_CMAC dic__RegionalizationShippingRule : public base__GenericVersioningEntity {
public:
	char **referenceNumber;	/* optional element of type base:Identifier */
	dic__RegionalizationStatus *fromR13nStatus;	/* optional element of type dic:RegionalizationStatus */
	dic__RegionalizationStatus *toR13nStatus;	/* optional element of type dic:RegionalizationStatus */
	int __sizecargoType;	/* sequence of elements <cargoType> */
	dic__SubProduct **cargoType;	/* optional element of type dic:SubProduct */
	enum dic__RegionalizationDecision *decision;	/* optional element of type dic:RegionalizationDecision */
	int __sizerequirement;	/* sequence of elements <requirement> */
	dic__RegionalizationRequirement **requirement;	/* optional element of type dic:RegionalizationRequirement */
public:
	virtual int soap_type() const { return 145; } /* = unique id SOAP_TYPE_dic__RegionalizationShippingRule */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationShippingRule() { dic__RegionalizationShippingRule::soap_default(NULL); }
	virtual ~dic__RegionalizationShippingRule() { }
};
#endif

#ifndef SOAP_TYPE_dic__RegionalizationRegionStatus
#define SOAP_TYPE_dic__RegionalizationRegionStatus (147)
/* dic:RegionalizationRegionStatus */
class SOAP_CMAC dic__RegionalizationRegionStatus : public base__GenericVersioningEntity {
public:
	char **referenceNumber;	/* optional element of type base:Identifier */
	dic__Area *r13nZone;	/* optional element of type dic:Area */
	int __sizeexcludedR13nZone;	/* sequence of elements <excludedR13nZone> */
	dic__Area **excludedR13nZone;	/* optional element of type dic:Area */
	int __sizer13nStatus;	/* sequence of elements <r13nStatus> */
	dic__RegionalizationStatus **r13nStatus;	/* optional element of type dic:RegionalizationStatus */
public:
	virtual int soap_type() const { return 147; } /* = unique id SOAP_TYPE_dic__RegionalizationRegionStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__RegionalizationRegionStatus() { dic__RegionalizationRegionStatus::soap_default(NULL); }
	virtual ~dic__RegionalizationRegionStatus() { }
};
#endif

#ifndef SOAP_TYPE__vd__union_VetDocument
#define SOAP_TYPE__vd__union_VetDocument (471)
/* xsd:choice */
union _vd__union_VetDocument
{
#define SOAP_UNION__vd__union_VetDocument_certifiedBatch	(1)
	vd__CertifiedBatch *certifiedBatch;
#define SOAP_UNION__vd__union_VetDocument_certifiedConsignment	(2)
	vd__CertifiedConsignment *certifiedConsignment;
};
#endif

#ifndef SOAP_TYPE_vd__VetDocument
#define SOAP_TYPE_vd__VetDocument (155)
/* vd:VetDocument */
class SOAP_CMAC vd__VetDocument : public vd__Document {
public:
	enum vd__VetDocumentForm *vetDForm;	/* optional element of type vd:VetDocumentForm */
	enum vd__VetDocumentType *vetDType;	/* optional element of type vd:VetDocumentType */
	enum vd__VetDocumentStatus *vetDStatus;	/* optional element of type vd:VetDocumentStatus */
	bool *finalized;	/* optional element of type xsd:boolean */
	time_t *lastUpdateDate;	/* optional element of type xsd:dateTime */
	int __union_VetDocument;	/* union discriminant (of union defined below) */
	union _vd__union_VetDocument union_VetDocument;	/* required element of type xsd:choice */
	vd__VeterinaryAuthentication *authentication;	/* optional element of type vd:VeterinaryAuthentication */
	char *precedingVetDocuments;	/* optional element of type base:String255 */
	int __sizereferencedDocument;	/* sequence of elements <referencedDocument> */
	vd__ReferencedDocument **referencedDocument;	/* optional element of type vd:ReferencedDocument */
	int __sizestatusChange;	/* sequence of elements <statusChange> */
	vd__VetDocumentStatusChange **statusChange;	/* optional element of type vd:VetDocumentStatusChange */
public:
	virtual int soap_type() const { return 155; } /* = unique id SOAP_TYPE_vd__VetDocument */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__VetDocument() { vd__VetDocument::soap_default(NULL); }
	virtual ~vd__VetDocument() { }
};
#endif

#ifndef SOAP_TYPE_vd__DiscrepancyReport
#define SOAP_TYPE_vd__DiscrepancyReport (166)
/* vd:DiscrepancyReport */
class SOAP_CMAC vd__DiscrepancyReport : public vd__Document {
public:
	vd__DiscrepancyReason *reason;	/* optional element of type vd:DiscrepancyReason */
	char *description;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 166; } /* = unique id SOAP_TYPE_vd__DiscrepancyReport */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__DiscrepancyReport() { vd__DiscrepancyReport::soap_default(NULL); }
	virtual ~vd__DiscrepancyReport() { }
};
#endif

#ifndef SOAP_TYPE_vd__StockEntry
#define SOAP_TYPE_vd__StockEntry (168)
/* vd:StockEntry */
class SOAP_CMAC vd__StockEntry : public base__GenericVersioningEntity {
public:
	char *entryNumber;	/* optional element of type vd:StockEntryNumber */
	vd__Batch *batch;	/* optional element of type vd:Batch */
	int __sizevetDocument;	/* sequence of elements <vetDocument> */
	vd__VetDocument **vetDocument;	/* optional element of type vd:VetDocument */
	vd__StockEntryEventList *vetEventList;	/* optional element of type vd:StockEntryEventList */
public:
	virtual int soap_type() const { return 168; } /* = unique id SOAP_TYPE_vd__StockEntry */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__StockEntry() { vd__StockEntry::soap_default(NULL); }
	virtual ~vd__StockEntry() { }
};
#endif

#ifndef SOAP_TYPE_vd__Waybill
#define SOAP_TYPE_vd__Waybill (173)
/* vd:Waybill */
class SOAP_CMAC vd__Waybill : public vd__Document {
public:
	dic__BusinessMember *consignor;	/* optional element of type dic:BusinessMember */
	dic__BusinessMember *consignee;	/* optional element of type dic:BusinessMember */
	dic__BusinessEntity *broker;	/* optional element of type dic:BusinessEntity */
	vd__TransportInfo *transportInfo;	/* optional element of type vd:TransportInfo */
	enum dic__TransportationStorageType *transportStorageType;	/* optional element of type dic:TransportationStorageType */
	vd__ShipmentRoute *shipmentRoute;	/* optional element of type vd:ShipmentRoute */
public:
	virtual int soap_type() const { return 173; } /* = unique id SOAP_TYPE_vd__Waybill */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__Waybill() { vd__Waybill::soap_default(NULL); }
	virtual ~vd__Waybill() { }
};
#endif

#ifndef SOAP_TYPE_vd__ReferencedDocument
#define SOAP_TYPE_vd__ReferencedDocument (186)
/* vd:ReferencedDocument */
class SOAP_CMAC vd__ReferencedDocument : public vd__Document {
public:
	enum dic__ReferenceType relationshipType;	/* required element of type dic:ReferenceType */
public:
	virtual int soap_type() const { return 186; } /* = unique id SOAP_TYPE_vd__ReferencedDocument */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__ReferencedDocument() { vd__ReferencedDocument::soap_default(NULL); }
	virtual ~vd__ReferencedDocument() { }
};
#endif

#ifndef SOAP_TYPE_dic__Region
#define SOAP_TYPE_dic__Region (102)
/* dic:Region */
class SOAP_CMAC dic__Region : public dic__AddressObjectView {

public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE_dic__Region */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Region() { dic__Region::soap_default(NULL); }
	virtual ~dic__Region() { }
};
#endif

#ifndef SOAP_TYPE_dic__District
#define SOAP_TYPE_dic__District (103)
/* dic:District */
class SOAP_CMAC dic__District : public dic__AddressObjectView {
public:
	char *regionGuid;	/* optional element of type base:UUID */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE_dic__District */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__District() { dic__District::soap_default(NULL); }
	virtual ~dic__District() { }
};
#endif

#ifndef SOAP_TYPE_dic__Locality
#define SOAP_TYPE_dic__Locality (104)
/* dic:Locality */
class SOAP_CMAC dic__Locality : public dic__AddressObjectView {
public:
	char *regionGuid;	/* optional element of type base:UUID */
	char *districtGuid;	/* optional element of type base:UUID */
	char *cityGuid;	/* optional element of type base:UUID */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_dic__Locality */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Locality() { dic__Locality::soap_default(NULL); }
	virtual ~dic__Locality() { }
};
#endif

#ifndef SOAP_TYPE_dic__Street
#define SOAP_TYPE_dic__Street (105)
/* dic:Street */
class SOAP_CMAC dic__Street : public dic__AddressObjectView {
public:
	char *localityGuid;	/* optional element of type base:UUID */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE_dic__Street */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         dic__Street() { dic__Street::soap_default(NULL); }
	virtual ~dic__Street() { }
};
#endif

#ifndef SOAP_TYPE_vd__StockEntrySearchPattern
#define SOAP_TYPE_vd__StockEntrySearchPattern (171)
/* vd:StockEntrySearchPattern */
class SOAP_CMAC vd__StockEntrySearchPattern : public vd__StockEntry {
public:
	enum vd__StockEntryBlankFilter *blankFilter;	/* optional element of type vd:StockEntryBlankFilter */
public:
	virtual int soap_type() const { return 171; } /* = unique id SOAP_TYPE_vd__StockEntrySearchPattern */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         vd__StockEntrySearchPattern() { vd__StockEntrySearchPattern::soap_default(NULL); }
	virtual ~vd__StockEntrySearchPattern() { }
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (478)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail {
public:
	char *__any;
	base__FaultInfo *ns2__accessDeniedFault;	/* optional element of type base:FaultInfo */
	base__FaultInfo *ns2__entityNotFoundFault;	/* optional element of type base:FaultInfo */
	base__FaultInfo *ns2__incorrectRequestFault;	/* optional element of type base:FaultInfo */
	base__FaultInfo *ns2__internalServiceFault;	/* optional element of type base:FaultInfo */
	base__FaultInfo *ws__unknownServiceIdFault;	/* optional element of type base:FaultInfo */
	base__FaultInfo *ws__unsupportedApplicationDataTypeFault;	/* optional element of type base:FaultInfo */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef SOAP_TYPE___apps__submitApplicationRequest
#define SOAP_TYPE___apps__submitApplicationRequest (485)
/* Operation wrapper: */
struct __apps__submitApplicationRequest {
public:
	_ws__submitApplicationRequest *ws__submitApplicationRequest;	/* optional element of type ws:submitApplicationRequest */
};
#endif

#ifndef SOAP_TYPE___apps__receiveApplicationResult
#define SOAP_TYPE___apps__receiveApplicationResult (489)
/* Operation wrapper: */
struct __apps__receiveApplicationResult {
public:
	_ws__receiveApplicationResultRequest *ws__receiveApplicationResultRequest;	/* optional element of type ws:receiveApplicationResultRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__processIncomingConsignmentRequest
#define SOAP_TYPE___g2b__processIncomingConsignmentRequest (493)
/* Operation wrapper: */
struct __g2b__processIncomingConsignmentRequest {
public:
	g2ba__ProcessIncomingConsignmentRequest *g2ba__processIncomingConsignmentRequest;	/* optional element of type g2ba:ProcessIncomingConsignmentRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__prepareOutgoingConsignmentRequest
#define SOAP_TYPE___g2b__prepareOutgoingConsignmentRequest (497)
/* Operation wrapper: */
struct __g2b__prepareOutgoingConsignmentRequest {
public:
	g2ba__PrepareOutgoingConsignmentRequest *g2ba__prepareOutgoingConsignmentRequest;	/* optional element of type g2ba:PrepareOutgoingConsignmentRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__registerProductionOperationRequest
#define SOAP_TYPE___g2b__registerProductionOperationRequest (501)
/* Operation wrapper: */
struct __g2b__registerProductionOperationRequest {
public:
	g2ba__RegisterProductionOperationRequest *g2ba__registerProductionOperationRequest;	/* optional element of type g2ba:RegisterProductionOperationRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__mergeStockEntriesRequest
#define SOAP_TYPE___g2b__mergeStockEntriesRequest (505)
/* Operation wrapper: */
struct __g2b__mergeStockEntriesRequest {
public:
	g2ba__MergeStockEntriesRequest *g2ba__mergeStockEntriesRequest;	/* optional element of type g2ba:MergeStockEntriesRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__withdrawVetDocumentRequest
#define SOAP_TYPE___g2b__withdrawVetDocumentRequest (509)
/* Operation wrapper: */
struct __g2b__withdrawVetDocumentRequest {
public:
	g2ba__WithdrawVetDocumentRequest *g2ba__withdrawVetDocumentRequest;	/* optional element of type g2ba:WithdrawVetDocumentRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__modifyBusinessEntityRequest
#define SOAP_TYPE___g2b__modifyBusinessEntityRequest (513)
/* Operation wrapper: */
struct __g2b__modifyBusinessEntityRequest {
public:
	g2ba__ModifyBusinessEntityRequest *g2ba__modifyBusinessEntityRequest;	/* optional element of type g2ba:ModifyBusinessEntityRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__modifyEnterpriseRequest
#define SOAP_TYPE___g2b__modifyEnterpriseRequest (517)
/* Operation wrapper: */
struct __g2b__modifyEnterpriseRequest {
public:
	g2ba__ModifyEnterpriseRequest *g2ba__modifyEnterpriseRequest;	/* optional element of type g2ba:ModifyEnterpriseRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__modifyActivityLocationsRequest
#define SOAP_TYPE___g2b__modifyActivityLocationsRequest (521)
/* Operation wrapper: */
struct __g2b__modifyActivityLocationsRequest {
public:
	g2ba__ModifyActivityLocationsRequest *g2ba__modifyActivityLocationsRequest;	/* optional element of type g2ba:ModifyActivityLocationsRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__resolveDiscrepancyRequest
#define SOAP_TYPE___g2b__resolveDiscrepancyRequest (525)
/* Operation wrapper: */
struct __g2b__resolveDiscrepancyRequest {
public:
	g2ba__ResolveDiscrepancyRequest *g2ba__resolveDiscrepancyRequest;	/* optional element of type g2ba:ResolveDiscrepancyRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__modifyProducerStockListRequest
#define SOAP_TYPE___g2b__modifyProducerStockListRequest (529)
/* Operation wrapper: */
struct __g2b__modifyProducerStockListRequest {
public:
	g2ba__ModifyProducerStockListRequest *g2ba__modifyProducerStockListRequest;	/* optional element of type g2ba:ModifyProducerStockListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getVetDocumentByUuidRequest
#define SOAP_TYPE___g2b__getVetDocumentByUuidRequest (533)
/* Operation wrapper: */
struct __g2b__getVetDocumentByUuidRequest {
public:
	g2ba__GetVetDocumentByUuidRequest *g2ba__getVetDocumentByUuidRequest;	/* optional element of type g2ba:GetVetDocumentByUuidRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getVetDocumentListRequest
#define SOAP_TYPE___g2b__getVetDocumentListRequest (537)
/* Operation wrapper: */
struct __g2b__getVetDocumentListRequest {
public:
	g2ba__GetVetDocumentListRequest *g2ba__getVetDocumentListRequest;	/* optional element of type g2ba:GetVetDocumentListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getVetDocumentChangesListRequest
#define SOAP_TYPE___g2b__getVetDocumentChangesListRequest (541)
/* Operation wrapper: */
struct __g2b__getVetDocumentChangesListRequest {
public:
	g2ba__GetVetDocumentChangesListRequest *g2ba__getVetDocumentChangesListRequest;	/* optional element of type g2ba:GetVetDocumentChangesListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getStockEntryByGuidRequest
#define SOAP_TYPE___g2b__getStockEntryByGuidRequest (545)
/* Operation wrapper: */
struct __g2b__getStockEntryByGuidRequest {
public:
	g2ba__GetStockEntryByGuidRequest *g2ba__getStockEntryByGuidRequest;	/* optional element of type g2ba:GetStockEntryByGuidRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getStockEntryByUuidRequest
#define SOAP_TYPE___g2b__getStockEntryByUuidRequest (549)
/* Operation wrapper: */
struct __g2b__getStockEntryByUuidRequest {
public:
	g2ba__GetStockEntryByUuidRequest *g2ba__getStockEntryByUuidRequest;	/* optional element of type g2ba:GetStockEntryByUuidRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getStockEntryListRequest
#define SOAP_TYPE___g2b__getStockEntryListRequest (553)
/* Operation wrapper: */
struct __g2b__getStockEntryListRequest {
public:
	g2ba__GetStockEntryListRequest *g2ba__getStockEntryListRequest;	/* optional element of type g2ba:GetStockEntryListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getStockEntryChangesListRequest
#define SOAP_TYPE___g2b__getStockEntryChangesListRequest (557)
/* Operation wrapper: */
struct __g2b__getStockEntryChangesListRequest {
public:
	g2ba__GetStockEntryChangesListRequest *g2ba__getStockEntryChangesListRequest;	/* optional element of type g2ba:GetStockEntryChangesListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getStockEntryVersionListRequest
#define SOAP_TYPE___g2b__getStockEntryVersionListRequest (561)
/* Operation wrapper: */
struct __g2b__getStockEntryVersionListRequest {
public:
	g2ba__GetStockEntryVersionListRequest *g2ba__getStockEntryVersionListRequest;	/* optional element of type g2ba:GetStockEntryVersionListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__updateTransportMovementDetailsRequest
#define SOAP_TYPE___g2b__updateTransportMovementDetailsRequest (565)
/* Operation wrapper: */
struct __g2b__updateTransportMovementDetailsRequest {
public:
	g2ba__UpdateTransportMovementDetailsRequest *g2ba__updateTransportMovementDetailsRequest;	/* optional element of type g2ba:UpdateTransportMovementDetailsRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__updateVeterinaryEventsRequest
#define SOAP_TYPE___g2b__updateVeterinaryEventsRequest (569)
/* Operation wrapper: */
struct __g2b__updateVeterinaryEventsRequest {
public:
	g2ba__UpdateVeterinaryEventsRequest *g2ba__updateVeterinaryEventsRequest;	/* optional element of type g2ba:UpdateVeterinaryEventsRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__checkShipmentRegionalizationRequest
#define SOAP_TYPE___g2b__checkShipmentRegionalizationRequest (573)
/* Operation wrapper: */
struct __g2b__checkShipmentRegionalizationRequest {
public:
	g2ba__CheckShipmentRegionalizationRequest *g2ba__checkShipmentRegionalizationRequest;	/* optional element of type g2ba:CheckShipmentRegionalizationRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__addBusinessEntityUserRequest
#define SOAP_TYPE___g2b__addBusinessEntityUserRequest (577)
/* Operation wrapper: */
struct __g2b__addBusinessEntityUserRequest {
public:
	g2ba__AddBusinessEntityUserRequest *g2ba__addBusinessEntityUserRequest;	/* optional element of type g2ba:AddBusinessEntityUserRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getBusinessEntityUserListRequest
#define SOAP_TYPE___g2b__getBusinessEntityUserListRequest (581)
/* Operation wrapper: */
struct __g2b__getBusinessEntityUserListRequest {
public:
	g2ba__GetBusinessEntityUserListRequest *g2ba__getBusinessEntityUserListRequest;	/* optional element of type g2ba:GetBusinessEntityUserListRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getBusinessEntityUserRequest
#define SOAP_TYPE___g2b__getBusinessEntityUserRequest (585)
/* Operation wrapper: */
struct __g2b__getBusinessEntityUserRequest {
public:
	g2ba__GetBusinessEntityUserRequest *g2ba__getBusinessEntityUserRequest;	/* optional element of type g2ba:GetBusinessEntityUserRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__updateUserAuthoritiesRequest
#define SOAP_TYPE___g2b__updateUserAuthoritiesRequest (589)
/* Operation wrapper: */
struct __g2b__updateUserAuthoritiesRequest {
public:
	g2ba__UpdateUserAuthoritiesRequest *g2ba__updateUserAuthoritiesRequest;	/* optional element of type g2ba:UpdateUserAuthoritiesRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__updateUserWorkingAreasRequest
#define SOAP_TYPE___g2b__updateUserWorkingAreasRequest (593)
/* Operation wrapper: */
struct __g2b__updateUserWorkingAreasRequest {
public:
	g2ba__UpdateUserWorkingAreasRequest *g2ba__updateUserWorkingAreasRequest;	/* optional element of type g2ba:UpdateUserWorkingAreasRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__unbindBusinessEntityUserRequest
#define SOAP_TYPE___g2b__unbindBusinessEntityUserRequest (597)
/* Operation wrapper: */
struct __g2b__unbindBusinessEntityUserRequest {
public:
	g2ba__UnbindBusinessEntityUserRequest *g2ba__unbindBusinessEntityUserRequest;	/* optional element of type g2ba:UnbindBusinessEntityUserRequest */
};
#endif

#ifndef SOAP_TYPE___g2b__getApplicableUserAuthorityListRequest
#define SOAP_TYPE___g2b__getApplicableUserAuthorityListRequest (601)
/* Operation wrapper: */
struct __g2b__getApplicableUserAuthorityListRequest {
public:
	g2ba__GetApplicableUserAuthorityListRequest *g2ba__getApplicableUserAuthorityListRequest;	/* optional element of type g2ba:GetApplicableUserAuthorityListRequest */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (602)
/* SOAP Header: */
struct SOAP_ENV__Header {

#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (603)
/* SOAP Fault Code: */
struct SOAP_ENV__Code {
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (605)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason {
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (606)
/* SOAP Fault: */
struct SOAP_ENV__Fault {
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (7)
typedef char *xsd__ID;
#endif

#ifndef SOAP_TYPE_xsd__IDREF
#define SOAP_TYPE_xsd__IDREF (8)
typedef char *xsd__IDREF;
#endif

#ifndef SOAP_TYPE_xsd__NCName
#define SOAP_TYPE_xsd__NCName (9)
typedef char *xsd__NCName;
#endif

#ifndef SOAP_TYPE_xsd__Name
#define SOAP_TYPE_xsd__Name (10)
typedef char *xsd__Name;
#endif

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (16)
typedef char *xsd__date;
#endif

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (17)
typedef char *xsd__decimal;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (18)
typedef char *xsd__integer;
#endif

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (19)
typedef char *xsd__nonNegativeInteger;
#endif

#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (20)
typedef char *xsd__positiveInteger;
#endif

#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (21)
typedef char *xsd__token;
#endif

#ifndef SOAP_TYPE_base__UUID
#define SOAP_TYPE_base__UUID (209)
typedef char *base__UUID;
#endif

#ifndef SOAP_TYPE_base__Text
#define SOAP_TYPE_base__Text (210)
typedef char *base__Text;
#endif

#ifndef SOAP_TYPE_base__NText
#define SOAP_TYPE_base__NText (211)
typedef char *base__NText;
#endif

#ifndef SOAP_TYPE_base__String255
#define SOAP_TYPE_base__String255 (212)
typedef char *base__String255;
#endif

#ifndef SOAP_TYPE_base__String32
#define SOAP_TYPE_base__String32 (213)
typedef char *base__String32;
#endif

#ifndef SOAP_TYPE_base__Decimal
#define SOAP_TYPE_base__Decimal (214)
typedef char *base__Decimal;
#endif

#ifndef SOAP_TYPE_base__VersionStatus
#define SOAP_TYPE_base__VersionStatus (215)
typedef char *base__VersionStatus;
#endif

#ifndef SOAP_TYPE_base__Identifier
#define SOAP_TYPE_base__Identifier (217)
typedef char *base__Identifier;
#endif

#ifndef SOAP_TYPE_base__SequenceNumber
#define SOAP_TYPE_base__SequenceNumber (218)
typedef char *base__SequenceNumber;
#endif

#ifndef SOAP_TYPE_base__Year
#define SOAP_TYPE_base__Year (219)
typedef int base__Year;
#endif

#ifndef SOAP_TYPE_base__Month
#define SOAP_TYPE_base__Month (220)
typedef int base__Month;
#endif

#ifndef SOAP_TYPE_base__Day
#define SOAP_TYPE_base__Day (221)
typedef int base__Day;
#endif

#ifndef SOAP_TYPE_base__Hour
#define SOAP_TYPE_base__Hour (222)
typedef int base__Hour;
#endif

#ifndef SOAP_TYPE_app__APIKey
#define SOAP_TYPE_app__APIKey (224)
typedef char *app__APIKey;
#endif

#ifndef SOAP_TYPE_app__BinaryContent
#define SOAP_TYPE_app__BinaryContent (226)
typedef xsd__base64Binary app__BinaryContent;
#endif

#ifndef SOAP_TYPE_dic__Code
#define SOAP_TYPE_dic__Code (229)
typedef char *dic__Code;
#endif

#ifndef SOAP_TYPE_dic__Code3
#define SOAP_TYPE_dic__Code3 (230)
typedef char *dic__Code3;
#endif

#ifndef SOAP_TYPE_dic__EnterpriseType
#define SOAP_TYPE_dic__EnterpriseType (232)
typedef char *dic__EnterpriseType;
#endif

#ifndef SOAP_TYPE_dic__BEModificationReason
#define SOAP_TYPE_dic__BEModificationReason (234)
typedef char *dic__BEModificationReason;
#endif

#ifndef SOAP_TYPE_dic__ENTModificationReason
#define SOAP_TYPE_dic__ENTModificationReason (235)
typedef char *dic__ENTModificationReason;
#endif

#ifndef SOAP_TYPE_dic__GLNType
#define SOAP_TYPE_dic__GLNType (236)
typedef char *dic__GLNType;
#endif

#ifndef SOAP_TYPE_dic__GTINType
#define SOAP_TYPE_dic__GTINType (238)
typedef char *dic__GTINType;
#endif

#ifndef SOAP_TYPE_dic__Year
#define SOAP_TYPE_dic__Year (242)
typedef int dic__Year;
#endif

#ifndef SOAP_TYPE_dic__Month
#define SOAP_TYPE_dic__Month (243)
typedef int dic__Month;
#endif

#ifndef SOAP_TYPE_dic__Day
#define SOAP_TYPE_dic__Day (244)
typedef int dic__Day;
#endif

#ifndef SOAP_TYPE_dic__Hour
#define SOAP_TYPE_dic__Hour (245)
typedef int dic__Hour;
#endif

#ifndef SOAP_TYPE_dic__Minute
#define SOAP_TYPE_dic__Minute (246)
typedef int dic__Minute;
#endif

#ifndef SOAP_TYPE_dic__OTPToken
#define SOAP_TYPE_dic__OTPToken (248)
typedef char *dic__OTPToken;
#endif

#ifndef SOAP_TYPE_vd__StockEntryNumber
#define SOAP_TYPE_vd__StockEntryNumber (252)
typedef char *vd__StockEntryNumber;
#endif

#ifndef SOAP_TYPE_vd__SNILSType
#define SOAP_TYPE_vd__SNILSType (256)
typedef char *vd__SNILSType;
#endif

#ifndef SOAP_TYPE_dic__GRNType
#define SOAP_TYPE_dic__GRNType (261)
typedef char *dic__GRNType;
#endif

#ifndef SOAP_TYPE_vd__VetDocumentStatusChangeReason
#define SOAP_TYPE_vd__VetDocumentStatusChangeReason (268)
typedef char *vd__VetDocumentStatusChangeReason;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of vetisamsStub.h */
