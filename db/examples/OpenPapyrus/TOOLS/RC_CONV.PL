sub intersect;
sub down;

$dummy_id           = 4001;
$edit_width         =   13;
$combo_height       =  160;
$cluster_item_width =   10;

#$dumb_coeff   = 1;
$smart_coeff_x = 1.3;
$smart_coeff_y = 1.3;

print "/*\n";
print "This file converted from ppdlg.rc by RC_CONV.PL\n";
print "*/\n\n";
print "#include <windows.h>\n\n";

# open out files
open(PPHELPRC, "> ..\\Rsrc\\Rc\\pphelp.rc");
open(PPHELPH, "> ..\\Include\\pphelp.h");

# getting current time
my $now = localtime time;

# *** pphelp.rc  ***
print PPHELPRC "//\n// Generated by RC_CONV.PL, $now\n//\n\n";
print PPHELPRC "TAB_HELP PP_RCDATA {";

# *** pphelp.h ***
print PPHELPH "//\n// Generated by RC_CONV.PL, $now\n//\n";

$_count = 10000;

while (<>) {
	chop $_;
	(print $_,"\n") && next if (/^#/);
	next if (/^\/\//);
	if(/(.*)\/\*(.*)/) {
		$beforecomment=$1;
		while (<>) {
			if(/(.*)\*\/(.*)/) {
				$_=$beforecomment . $2;
				last;
			}
		}
	}
	next if /^$/;
	/(\w*)\s*(\w*)/; 
	$dialog_name=$1;

	$_count++;
	print PPHELPRC "\n\t$dialog_name,\t$_count";
	print PPHELPH "#define HELP_$dialog_name\t$_count\n";

	if($2 eq 'TV_STATUS' || $2 eq 'TV_BROWSER' || $2 eq 'TV_REPORT' || $2 eq 'PP_RCDATA') {
		while(<>) {
			last if (/(.*)\}(.*)/);
		}
		next;
	}
	$_=<>; #BEGIN statement
	$dialog_header=<>; #header statement  
	$did=$dummy_id;

	@print_lines=();
item:  while (<>) {
		/^\s*(\w+)\s(.*)/;
		$cntl=$1;$par=$2;
		$_=$1;
		SWITCH: {
			(push @print_lines,['END']) && last item if /^END/;
			/^TV_INPUTLINE/ && do {
				$cluster_length=0;
				($ax,$ay,$bx,$by,$id)=split /,\s*/,$par;
				$ax*=4;$bx*=4;$ay*=8;$by*=8;
				$_=$par;
				/(.*)VB_(.*)/;
				($vbid,$vb_ctlNo)=split /,\s*/,$2;
				if($vb_ctlNo == 0) {
					push @print_lines, ['EDITTEXT ',$ax,$ay,$bx-$ax,$edit_width,$id," ES_AUTOHSCROLL"];
				}
				else {
					push @print_lines, ['EDITTEXT ',$ax,$ay,$bx-$ax-$edit_width,$edit_width,$id," ES_AUTOHSCROLL"];
					push @print_lines, ['VIRTBUTTON ',$bx-$edit_width,$ay,$edit_width,$edit_width,$vb_ctlNo," BS_BITMAP"];
				}
				last SWITCH;
			};
			/^TV_BUTTON/ && do {
				$cluster_length=0;
				($ax,$ay,$bx,$by,$id,$symb,$text,$cmd,$cmd_txt,$options,$hlpctx,$columns)=split /,\s+/,$par;
				$ax*=4;$bx=$bx*4-2;$ay*=8;$by=$by*8-3;
				if ($text =~/(.*)~(.+)~(.*)/) {
					$text=$1.'&'.$2.$3;
				}
				if ($id>=$dummy_id) {
					$id=$did++;
				}
				$prf= $options==1? 'DEFPUSHBUTTON ':'PUSHBUTTON ';
				push @print_lines, [$prf,$ax,$ay,$bx-$ax,$by-$ay,$id,$text,$columns];
				last SWITCH;
			};
			/^TV_COMBO/ && do {
				$cluster_length = 0;
				$inputline = pop @print_lines;
				push @print_lines, ['EDITCOMBO ', $inputline->[1], $inputline->[2],
					$inputline->[3], $inputline->[4], $inputline->[5], " ES_AUTOHSCROLL | ES_READONLY"];
				($ax, $ay, $bx, $by, $id, $symb, $options) = split /, /,$par;
				$ax *= 4;
				$bx *= 4;
				$ay *= 8;
				$by *= 8;
				push @print_lines, ['COMBOBOX ',$ax,$ay,$bx-$ax,$edit_width,$id," BS_BITMAP"];
				last SWITCH;
			};
			/^TV_LISTBOX/ && do {
				$cluster_length = 0;
				($ax,$ay,$bx,$by,$id,$symb,$a,$b,$c,$d,$e,$f,$g,$h,$columns) = split /, /,$par;
				$ax *= 4;
				$bx *= 4;
				$ay *= 8;
				$by *= 8;
				push @print_lines, ['LISTBOX ', $ax, $ay, $bx-$ax, $by-$ay, $id, " LBS_NOINTEGRALHEIGHT | LBS_WANTKEYBOARDINPUT | WS_TABSTOP", $columns];
				$group_ay = $ay;
				last SWITCH;
			 };
			/^TV_RADIOBUTTONS/ && do {
				@buttons=();
				($ax,$ay,$bx,$by,$id)=split /, /,$par;
				$ax*=4;$bx*=4;$ay*=8;$by*=8;
				@group= ($id,$ax,$ay,$bx,$by);
				$ax+=3;
				$btn_id=1;
				while(<>) {
					last if /TV_END/;
					if(/(.*)~(.+)~(.*)/) {
						$_=$1.'&'.$2.$3;
					}
					/\s*(.+)/;
					$ay+=$cluster_item_width;
					$len=$bx-$ax-6;
					push @buttons,['CONTROL ',$ax,$ay,$len, $cluster_item_width,"$id + ".($btn_id<<12),$1,
						" \"Button\", BS_AUTORADIOBUTTON | BS_NOTIFY | WS_TABSTOP"];
					$btn_id++;
				}
				$group_by=$ay+13;
				$ax-=3;
				($id,$ax,$ay,$bx,$by)=@group;
				push @print_lines, ['GROUPBOX ',$ax,$ay,$bx-$ax,$group_by-$ay,$id," WS_GROUP"];
				push @print_lines,[@buttons];
				@buttons=();
				last SWITCH;
			};
			/^TV_CHECKBOXES/ && do {
				@buttons=();
				($ax,$ay,$bx,$by,$id)=split /, /,$par;
				$ax*=4;$bx*=4;$ay*=8;$by*=8;
				@group= ($id,$ax,$ay,$bx,$by);
				$ax+=3;
				$btn_id=1;
				while(<>) {
					last if /TV_END/;
					if (/(.*)~(.+)~(.*)/) {
						$_=$1.'&'.$2.$3;
					}
					/\s*(.+)/;
					$name=$1;
					$ay+=10;
					$len=$bx-$ax-6;
					push @buttons,['CONTROL ',$ax,$ay,$len, $cluster_item_width,"$id + ".($btn_id<<12),$name,
						" \"Button\", BS_AUTOCHECKBOX | BS_NOTIFY | WS_TABSTOP"];
					$btn_id++;
				}
				if($btn_id==2) {
					$btn_id--;
					($id,$ax,$ay,$bx,$by)=@group;
					push @print_lines, ['CONTROL ',$ax,$ay,$bx-$ax, $edit_width,"$id + ".($btn_id<<12),$name,
						" \"Button\", BS_AUTOCHECKBOX | BS_NOTIFY | WS_TABSTOP"];
				} else {
					$group_by=$ay+13;
					$ax-=3;
					($id,$ax,$ay,$bx,$by)=@group;
					push @print_lines, ["GROUPBOX \"\"",$ax,$ay,$bx-$ax,$group_by-$ay,$id," WS_GROUP"];
					push @print_lines,[@buttons];
				}
				@buttons=();
				last SWITCH;
			};
			/^TV_LABEL/ && do { 
				$par=~/\s*(\d*),\s*(\d*),\s*(\d*),\s*(\d*),\s*(.*),\s*(\".*\"),\s*(\".*\")/;
				$ax=$1;$ay=$2;$bx=$3;$by=$4;$id=$5;$text=$7;
				$ax*=4;$bx*=4;$ay*=8;$by*=8;
				if($text =~/(.*)~(.+)~(.*)/) {
					$text=$1.'&'.$2.$3;
				}
				if($id>=$dummy_id) {
					$id=$did++;
				}
				$btn=0;
				$labeled_ctl=pop @print_lines;
				$prevctl=pop @print_lines;
				if($prevctl->[0] =~/^GROUPBOX/) {
					$btn=$labeled_ctl;
					$labeled_ctl=$prevctl;
					$labeled_ctl->[0]='GROUPBOX '.$text;
					push @print_lines,$labeled_ctl;
					if($btn!=0) {
						push @print_lines,$btn;
					}
				} else {
					if($prevctl->[0] ne '') {
						push @print_lines,$prevctl;
					}
					push @print_lines,['LTEXT  ',$ax,$ay,$bx-$ax,$by-$ay,$id,$text];
					push @print_lines,$labeled_ctl;          
					if($btn!=0) {
						push @print_lines,$btn;
					}
				}
				last SWITCH;
			};
			/^TV_STATIC/ && do {
				$par=~/\s*(\d*),\s*(\d*),\s*(\d*),\s*(\d*),\s*(.*),\s*(\".*\"),\s*(\".*\"),\s*(\".*\"),\s*(\".*\")/;
				$ax=$1;
				$ay=$2;
				$bx=$3;
				$by=$4;
				$id=$5;
				$text=$7;
				$subtype=$8;
				$resource=$9;
				$ax*=4;
				$bx*=4;
				$ay*=8;
				$by*=8;
				if($id>=$dummy_id) {
					$id=$did++;
				}
				if($text=~/^\"\x3([\x20-\xff]*)[\x3\"].*/) {
					$text='"'.$1.'"';
				}
				if($text=~/^\"\x3([\x20-\xff]*).*/) {
					$text='"'.$1.'"';
				}				
				push @print_lines,['LTEXT ',$ax,$ay,$bx-$ax,$by-$ay,$id,$text];
				last SWITCH;
			};
		}
	}
#--------------------------------------------------------------------
#goto without_brain;
	$max_y=0;
enumerated: for ($i=0;;$i++)  {
		$e=@print_lines[$i];     
		last enumerated if $e->[0] =~/^END/;
compared:	for ($j=0;;$j++)  {
			$c=@print_lines[$j];
			last compared if $c->[0] =~/^END/;
			if ($c->[0] =~/^GROUPBOX/ && $i==$j) {
				$j++;
				next compared;
			}
			$cw=$c->[0] =~/^COMBOBOX/?$edit_width:$c->[4];
			if(($c->[2]+$cw)>$max_y) {
				$max_y=$c->[2]+$cw;
			};
			next compared if $i==$j;
			if (intersect($e,$c)>0) {
				$top=$i<$j?$e:$c;
				$bottom=$i>$j?$e:$c;
				$dw=$top->[0] =~/^COMBOBOX/?$edit_width:$top->[4];
				$old_bottom_y=$bottom->[2];
				down($bottom,$top->[2]+$dw+2);
				$prev_ctl=$i>$j?$i-1:$j-1;
				$prc=@print_lines[$prev_ctl];
				$next_ctl=$i>$j?$i+1:$j+1;
				$nxtc=@print_lines[$next_ctl];
				if ($bottom->[0] eq 'LTEXT  ')  {
					$may_be_labeled=@print_lines[$i>$j?$i+1:$j+1];
					if ($may_be_labeled != $top)  {
						down($may_be_labeled,$may_be_labeled->[2]+
							($bottom->[2]-$old_bottom_y)
						);
					}
				}
				if ($prev_ctl>=0 ) {
					$may_be_label=@print_lines[$prev_ctl];
					if ($may_be_label != $top && $may_be_label->[0] eq 'LTEXT  ')  {
						down($may_be_label,$may_be_label->[2]+
							($bottom->[2]-$old_bottom_y)
						);
					}
				}
				if($prc!=$top && $prc!=bottom && $prc->[2]==$old_bottom_y
					&&$prc->[0]=~/BUTTON/ && $bottom->[0]=~/BUTTON/) {
					down($prc,$bottom->[2]);
				}
				if($nxtc!=$top && $nxtc!=bottom && $nxtc->[2]==$old_bottom_y
					&&$nxtc->[0]=~/BUTTON/ && $bottom->[0]=~/BUTTON/) {
					down($nxtc,$bottom->[2]);
				}
				if ($bottom->[0] =~/^GROUPBOX/) {
					$tmp=@print_lines[$i>$j?$i+1:$j+1];
					$btn_step=10;
					foreach $b (@$tmp) {
						down($b,$top->[2]+$dw+$btn_step);
						$btn_step+=10;
					};
				}
				redo enumerated;
			}
			if ($c->[0] =~/^GROUPBOX/) { 
				$j++;
			}
		}
		if ($e->[0] =~/^GROUPBOX/) { 
			$i++;
		}
	}
#--------------------------------------------------------------------
without_brain:;
	($ax, $ay, $bx, $by, $title) = split /,/,$dialog_header;
	$ax *= 4;
	$bx *= 4;
	$ay *= 8;
	$by *= 8;
	if($max_y == 0) {
		$max_y = $by;
	};
	$max_y *= $smart_coeff_y;
	$ax *= $smart_coeff_x;
	$bx *= $smart_coeff_x;
	print $dialog_name, ' DIALOG DISCARDABLE ',  $ax, ', ',$ay, ', ',$bx-$ax, ', ',$max_y+10,"\n";
	print "STYLE DS_MODALFRAME | WS_POPUP | WS_CAPTION | WS_SYSMENU\n";
	print "CAPTION",$title;
	print "FONT 8, \"MS Sans Serif\"\n";
	print "BEGIN\n";
line:
	for($i = 0; ; $i++)  {
		$l = @print_lines[$i];
		# @v5.2.3 ", $columns"
		($_, $ax, $ay, $bx, $by, $id, $text, $columns) = @$l;
		$ax = int($ax*$smart_coeff_x);
		$ay = int($ay*$smart_coeff_y);
		/^EDITTEXT/ && do {
			print $_.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by.", ES_AUTOHSCROLL\n";
			next line;
		};
		/^EDITCOMBO/ && do {
			print 'EDITTEXT '.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by.", ES_AUTOHSCROLL | ES_READONLY\n";
			next line;
		};
		/^CONTROL/ && do {
			($_, $ax, $ay, $bx, $by, $id, $name, $text) = @$l;
			$ax = int($ax*$smart_coeff_x);
			$ay = int($ay*$smart_coeff_y);
			print 'CONTROL ',$name,', ',$id,', ',$text,', ',
				$ax,', ',$ay,', ',$bx,', ',$by,"\n";
			next line;
		};
		(/^PUSHBUTTON/ || /^DEFPUSHBUTTON/) && do {
			if(length($columns) > 1) {
				print $_.$text.', '.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by.",BS_BITMAP\n";
			}
			else {
				print $_.$text.', '.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by."\n";
			}
			next line;
		};
		(/^COMBOBOX/ || /^VIRTBUTTON/) && do {
			print 'PUSHBUTTON "", '.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by.", BS_BITMAP\n";
			next line;
		};
		/^LISTBOX/ && do {
			if(length($columns) > 4) {
				if($columns =~ /TREELISTVIEW/) {
					print 'CONTROL "", '.$id.', "SysTreeView32", TVS_HASBUTTONS | TVS_HASLINES | TVS_LINESATROOT | TVS_DISABLEDRAGDROP | TVS_SHOWSELALWAYS | WS_BORDER | WS_TABSTOP, '.$ax.', '.$ay.', '.$bx.', '.$by.", WS_EX_CLIENTEDGE\n";
				}
				else {
					print 'CONTROL "", '.$id.', "SysListView32", LVS_REPORT | LVS_SINGLESEL | LVS_SHOWSELALWAYS | LVS_NOSORTHEADER | WS_BORDER | WS_TABSTOP, '.$ax.', '.$ay.', '.$bx.', '.$by."\n";
				}
			} 
			else {
				print $_.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by.", LBS_NOINTEGRALHEIGHT |  LBS_WANTKEYBOARDINPUT | WS_TABSTOP\n";
			}
			next line;
		};
		/^GROUPBOX/ && do {
			$n = $_ eq 'GROUPBOX '?'""':'';
			print $_,$n,', '.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by.", WS_GROUP\n";
			$tmp=@print_lines[++$i];
			$group_ay=$ay+$cluster_item_width;
			$group_ax=$ax+3;
			foreach $b (@$tmp) {
				($_,$ax,$ay,$bx,$by,$id,$name,$text)=@$b;              
				print 'CONTROL ',$name,', ',$id,', ',$text,', ',
					$group_ax,', ',$group_ay,', ',$bx,', ',$by,"\n";
				$group_ay+=$cluster_item_width;
			};
			next line;
		};
		/^LTEXT/ && do {
			print $_.$text.', '.$id.', '.$ax.', '.$ay.', '.$bx.', '.$by."\n";
			next line;
		};
		/^END/ && do {
			print $_,"\n\n";
			last line;
		}
	}
}

sub min
{
	return @_[0] > @_[1] ? @_[1] : @_[0];
}

sub max
{
	return @_[0] <= @_[1] ? @_[1] : @_[0];
}

sub intersect
{
	my ($e, $c, $ax, $ay, $bx, $by, $cw, $ew); $e = @_[0]; $c = @_[1];
	if($e->[0] =~/^COMBOBOX/) {
		$ew=$edit_width;
	} 
	else {
		$ew=$e->[4];
	};
	if($c->[0] =~/^COMBOBOX/) {
		$cw=$edit_width;
	} 
	else {
		$cw=$c->[4];
	};
	$ax = max ($e->[1],$c->[1]);
	$ay = max ($e->[2],$c->[2]);
	$bx = min ($e->[1]+$e->[3],$c->[1]+$c->[3]);
	$by = min ($e->[2]+$ew,$c->[2]+$cw);
	return ($bx-$ax) > 0 && ($by-$ay) > 0;
}

sub down
{
	my ($l,$d);
	$l = @_[0];
	$d = @_[1];
	$l->[2] = $d;
}

print PPHELPRC "\n};";