// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* d:\Papyrus\Src\Tools\Uhttsoap\universe_htt.h
   Generated by wsdl2h 2.8.4 from d:\Papyrus\Src\Tools\Uhttsoap\universe_htt.wsdl and ..\..\tools\gsoap\ws\typemap.dat
   2012-04-15 15:59:48 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on d:\Papyrus\Src\Tools\Uhttsoap\universe_htt.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://localhost/Universe-HTT/soap/                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://localhost/Universe-HTT/soap/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://localhost/Universe-HTT/soap/"
//gsoap ns1   schema namespace:	http://localhost/Universe-HTT/soap/
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:date"
typedef char* xsd__date;

/// Primitive built-in type "xs:time"
typedef char* xsd__time;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__UhttObjSelectCriteria.
class ns1__UhttObjSelectCriteria;

//  Forward declaration of class ns1__ArrayOfUhttCommObjItem.
class ns1__ArrayOfUhttCommObjItem;

//  Forward declaration of class ns1__UhttCommObjItem.
class ns1__UhttCommObjItem;

//  Forward declaration of class ns1__UhttWorld.
class ns1__UhttWorld;

//  Forward declaration of class ns1__UhttCurrency.
class ns1__UhttCurrency;

//  Forward declaration of class ns1__UhttPersonKind.
class ns1__UhttPersonKind;

//  Forward declaration of class ns1__UhttPersonCategory.
class ns1__UhttPersonCategory;

//  Forward declaration of class ns1__UhttLocation.
class ns1__UhttLocation;

//  Forward declaration of class ns1__UhttPersonRegisterType.
class ns1__UhttPersonRegisterType;

//  Forward declaration of class ns1__UhttPersonRegister.
class ns1__UhttPersonRegister;

//  Forward declaration of class ns1__UhttPerson.
class ns1__UhttPerson;

//  Forward declaration of class ns1__UhttPersonLocation.
class ns1__UhttPersonLocation;

//  Forward declaration of class ns1__UhttGoodsGroup.
class ns1__UhttGoodsGroup;

//  Forward declaration of class ns1__UhttBrand.
class ns1__UhttBrand;

//  Forward declaration of class ns1__UhttBarcode.
class ns1__UhttBarcode;

//  Forward declaration of class ns1__UhttArCode.
class ns1__UhttArCode;

//  Forward declaration of class ns1__UhttGoodsTaxGroup.
class ns1__UhttGoodsTaxGroup;

//  Forward declaration of class ns1__UhttGoods.
class ns1__UhttGoods;

//  Forward declaration of class ns1__UhttCalendar.
class ns1__UhttCalendar;

//  Forward declaration of class ns1__UhttCalendarEntry.
class ns1__UhttCalendarEntry;

//  Forward declaration of class ns1__ArrayOfUhttSpoiledSerial.
class ns1__ArrayOfUhttSpoiledSerial;

//  Forward declaration of class ns1__UhttSpoiledSerial.
class ns1__UhttSpoiledSerial;

//  Forward declaration of class ns1__UhttQuot.
class ns1__UhttQuot;

//  Forward declaration of class ns1__UhttOutStatus.
class ns1__UhttOutStatus;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://localhost/Universe-HTT/soap/                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://localhost/Universe-HTT/soap/                                      *
 *                                                                            *
\******************************************************************************/


/// "http://localhost/Universe-HTT/soap/":UhttObjSelectCriteria is a complexType.
class ns1__UhttObjSelectCriteria
{ public:
/// Element ObjName of type xs:string.
    char*                                ObjName                        1;	///< Required element.
/// Element ByCriteria of type xs:string.
    char*                                ByCriteria                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":ArrayOfUhttCommObjItem is a complexType.
class ns1__ArrayOfUhttCommObjItem
{ public:
/// Size of array of ns1__UhttCommObjItem* is 0..unbounded
   $int                                  __sizeCommObjItem              0;
/// Pointer to array ns1__UhttCommObjItem* of length 0..unbounded
    ns1__UhttCommObjItem*               *CommObjItem                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttCommObjItem is a complexType.
class ns1__UhttCommObjItem
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element ParentID of type xs:int.
    int                                  ParentID                       1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttWorld is a complexType.
class ns1__UhttWorld
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element ParentID of type xs:int.
    int                                  ParentID                       1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Kind of type xs:int.
    int                                  Kind                           1;	///< Required element.
/// Element ParentName of type xs:string.
    char*                                ParentName                     1;	///< Required element.
/// Element CountryID of type xs:int.
    int                                  CountryID                      1;	///< Required element.
/// Element Latitude of type xs:double.
    double                               Latitude                       1;	///< Required element.
/// Element Longitude of type xs:double.
    double                               Longitude                      1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element CountryIsoAlpha2 of type xs:string.
    char*                                CountryIsoAlpha2               1;	///< Required element.
/// Element CountryIsoDigit of type xs:int.
    int                                  CountryIsoDigit                1;	///< Required element.
/// Element CurrencyID of type xs:int.
    int                                  CurrencyID                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttCurrency is a complexType.
class ns1__UhttCurrency
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element DigitCode of type xs:int.
    int                                  DigitCode                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttPersonKind is a complexType.
class ns1__UhttPersonKind
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttPersonCategory is a complexType.
class ns1__UhttPersonCategory
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttLocation is a complexType.
class ns1__UhttLocation
{ public:
/// Element LocID of type xs:int.
    int                                  LocID                          1;	///< Required element.
/// Element LocKind of type xs:int.
    int                                  LocKind                        1;	///< Required element.
/// Element LocCode of type xs:string.
    char*                                LocCode                        1;	///< Required element.
/// Element LocName of type xs:string.
    char*                                LocName                        1;	///< Required element.
/// Element CountryID of type xs:int.
    int                                  CountryID                      1;	///< Required element.
/// Element Country of type xs:string.
    char*                                Country                        1;	///< Required element.
/// Element CityID of type xs:int.
    int                                  CityID                         1;	///< Required element.
/// Element City of type xs:string.
    char*                                City                           1;	///< Required element.
/// Element ZIP of type xs:string.
    char*                                ZIP                            1;	///< Required element.
/// Element Address of type xs:string.
    char*                                Address                        1;	///< Required element.
/// Element Latitude of type xs:double.
    double                               Latitude                       1;	///< Required element.
/// Element Longitude of type xs:double.
    double                               Longitude                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttPersonRegisterType is a complexType.
class ns1__UhttPersonRegisterType
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttPersonRegister is a complexType.
class ns1__UhttPersonRegister
{ public:
/// Element RegID of type xs:int.
    int                                  RegID                          1;	///< Required element.
/// Element RegTypeID of type xs:int.
    int                                  RegTypeID                      1;	///< Required element.
/// Element RegPersonID of type xs:int.
    int                                  RegPersonID                    1;	///< Required element.
/// Element RegOrgID of type xs:int.
    int                                  RegOrgID                       1;	///< Required element.
/// Element RegDt of type xs:date.
    xsd__date                            RegDt                          1;	///< Required element.
/// Element RegExpiry of type xs:date.
    xsd__date                            RegExpiry                      1;	///< Required element.
/// Element RegSerial of type xs:string.
    char*                                RegSerial                      1;	///< Required element.
/// Element RegNumber of type xs:string.
    char*                                RegNumber                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttPerson is a complexType.
class ns1__UhttPerson
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeKindNameList             0;
/// Pointer to array char* of length 0..unbounded
    char*                               *KindNameList                   0;
/// Element CategoryName of type xs:string.
    char*                                CategoryName                   1;	///< Required element.
/// Element StatusName of type xs:string.
    char*                                StatusName                     1;	///< Required element.
/// Element Addr of type "http://localhost/Universe-HTT/soap/":UhttLocation.
    ns1__UhttLocation*                   Addr                           1;	///< Required element.
/// Element RAddr of type "http://localhost/Universe-HTT/soap/":UhttLocation.
    ns1__UhttLocation*                   RAddr                          1;	///< Required element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizePhoneList                0;
/// Pointer to array char* of length 0..unbounded
    char*                               *PhoneList                      0;
/// Size of array of char* is 0..unbounded
   $int                                  __sizeEMailList                0;
/// Pointer to array char* of length 0..unbounded
    char*                               *EMailList                      0;
/// Element URL of type xs:string.
    char*                                URL                            1;	///< Required element.
/// Size of array of ns1__UhttPersonRegister* is 0..unbounded
   $int                                  __sizeRegisterList             0;
/// Pointer to array ns1__UhttPersonRegister* of length 0..unbounded
    ns1__UhttPersonRegister*            *RegisterList                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttPersonLocation is a complexType.
class ns1__UhttPersonLocation
{ public:
/// Element PersonID of type xs:int.
    int                                  PersonID                       1;	///< Required element.
/// Element Location of type "http://localhost/Universe-HTT/soap/":UhttLocation.
    ns1__UhttLocation*                   Location                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttGoodsGroup is a complexType.
class ns1__UhttGoodsGroup
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element ParentID of type xs:int.
    int                                  ParentID                       1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttBrand is a complexType.
class ns1__UhttBrand
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element OwnerID of type xs:int.
    int                                  OwnerID                        1;	///< Required element.
/// Element GoodsGroupID of type xs:int.
    int                                  GoodsGroupID                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttBarcode is a complexType.
class ns1__UhttBarcode
{ public:
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element Package of type xs:double.
    double                               Package                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttArCode is a complexType.
class ns1__UhttArCode
{ public:
/// Element OwnerID of type xs:int.
    int                                  OwnerID                        1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element Package of type xs:double.
    double                               Package                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttGoodsTaxGroup is a complexType.
class ns1__UhttGoodsTaxGroup
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element VatRate of type xs:double.
    double                               VatRate                        1;	///< Required element.
/// Element ExciseRate of type xs:double.
    double                               ExciseRate                     1;	///< Required element.
/// Element SalesTaxRate of type xs:double.
    double                               SalesTaxRate                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttGoods is a complexType.
class ns1__UhttGoods
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element ParentID of type xs:int.
    int                                  ParentID                       1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element UnitID of type xs:int.
    int                                  UnitID                         1;	///< Required element.
/// Element PhUnitID of type xs:int.
    int                                  PhUnitID                       1;	///< Required element.
/// Element PhUPerU of type xs:double.
    double                               PhUPerU                        1;	///< Required element.
/// Element BrandID of type xs:int.
    int                                  BrandID                        1;	///< Required element.
/// Element ManufID of type xs:int.
    int                                  ManufID                        1;	///< Required element.
/// Element TaxGrpID of type xs:int.
    int                                  TaxGrpID                       1;	///< Required element.
/// Element Package of type xs:double.
    double                               Package                        1;	///< Required element.
/// Size of array of ns1__UhttBarcode* is 0..unbounded
   $int                                  __sizeBarcodeList              0;
/// Pointer to array ns1__UhttBarcode* of length 0..unbounded
    ns1__UhttBarcode*                   *BarcodeList                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttCalendar is a complexType.
class ns1__UhttCalendar
{ public:
/// Element ID of type xs:int.
    int                                  ID                             1;	///< Required element.
/// Element ParentID of type xs:int.
    int                                  ParentID                       1;	///< Required element.
/// Element Name of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element Code of type xs:string.
    char*                                Code                           1;	///< Required element.
/// Element PersonID of type xs:int.
    int                                  PersonID                       1;	///< Required element.
/// Element CountryID of type xs:int.
    int                                  CountryID                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttCalendarEntry is a complexType.
class ns1__UhttCalendarEntry
{ public:
/// Element CalID of type xs:int.
    int                                  CalID                          1;	///< Required element.
/// Element fSkip of type xs:boolean.
    bool                                 fSkip                          1;	///< Required element.
/// Element Dt of type xs:date.
    xsd__date                            Dt                             1;	///< Required element.
/// Element TmStart of type xs:time.
    xsd__time                            TmStart                        1;	///< Required element.
/// Element TmEnd of type xs:time.
    xsd__time                            TmEnd                          1;	///< Required element.
/// Element Memo of type xs:string.
    char*                                Memo                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":ArrayOfUhttSpoiledSerial is a complexType.
class ns1__ArrayOfUhttSpoiledSerial
{ public:
/// Size of array of ns1__UhttSpoiledSerial* is 0..unbounded
   $int                                  __sizeSpoiledSerial            0;
/// Pointer to array ns1__UhttSpoiledSerial* of length 0..unbounded
    ns1__UhttSpoiledSerial*             *SpoiledSerial                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttSpoiledSerial is a complexType.
class ns1__UhttSpoiledSerial
{ public:
/// Element Serial of type xs:string.
    char*                                Serial                         1;	///< Required element.
/// Element BarCode of type xs:string.
    char*                                BarCode                        1;	///< Required element.
/// Element GoodsID of type xs:int.
    int                                  GoodsID                        1;	///< Required element.
/// Element GoodsName of type xs:string.
    char*                                GoodsName                      1;	///< Required element.
/// Element ManufID of type xs:int.
    int                                  ManufID                        1;	///< Required element.
/// Element ManufName of type xs:string.
    char*                                ManufName                      1;	///< Required element.
/// Element ManufCountryID of type xs:int.
    int                                  ManufCountryID                 1;	///< Required element.
/// Element ManufCountryName of type xs:string.
    char*                                ManufCountryName               1;	///< Required element.
/// Element LabID of type xs:int.
    int                                  LabID                          1;	///< Required element.
/// Element LabName of type xs:string.
    char*                                LabName                        1;	///< Required element.
/// Element InfoDate of type xs:date.
    xsd__date                            InfoDate                       1;	///< Required element.
/// Element InfoIdent of type xs:string.
    char*                                InfoIdent                      1;	///< Required element.
/// Element AllowDate of type xs:date.
    xsd__date                            AllowDate                      1;	///< Required element.
/// Element AllowNumber of type xs:string.
    char*                                AllowNumber                    1;	///< Required element.
/// Element SpecName of type xs:string.
    char*                                SpecName                       1;	///< Required element.
/// Element LetterType of type xs:string.
    char*                                LetterType                     1;	///< Required element.
/// Element Flags of type xs:int.
    int                                  Flags                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttQuot is a complexType.
class ns1__UhttQuot
{ public:
/// Element GoodsID of type xs:int.
    int                                  GoodsID                        1;	///< Required element.
/// Element SellerID of type xs:int.
    int                                  SellerID                       1;	///< Required element.
/// Element BuyerID of type xs:int.
    int                                  BuyerID                        1;	///< Required element.
/// Element CurID of type xs:int.
    int                                  CurID                          1;	///< Required element.
/// Element Dt of type xs:date.
    xsd__date                            Dt                             1;	///< Required element.
/// Element Tm of type xs:time.
    xsd__time                            Tm                             1;	///< Required element.
/// Element Val of type xs:double.
    double                               Val                            1;	///< Required element.
/// Element Memo of type xs:string.
    char*                                Memo                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://localhost/Universe-HTT/soap/":UhttOutStatus is a complexType.
class ns1__UhttOutStatus
{ public:
/// Element Status of type xs:string.
    char*                                Status                         1;	///< Required element.
/// Element Memo of type xs:string.
    char*                                Memo                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://localhost/Universe-HTT/soap/                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://localhost/Universe-HTT/soap/                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	UhttMainBinding 
//gsoap ns1  service type:	UhttMainPortType 
//gsoap ns1  service port:	http://localhost/Universe-HTT/soap/universe_htt.php 
//gsoap ns1  service namespace:	http://localhost/Universe-HTT/soap/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref UhttMainBinding

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page UhttMainBinding Binding "UhttMainBinding"

@section UhttMainBinding_operations Operations of Binding  "UhttMainBinding"

  - @ref ns1__SelectObject

  - @ref ns1__Get_USCOREWorld

  - @ref ns1__Get_USCORECurrency

  - @ref ns1__Get_USCOREPersonKind

  - @ref ns1__Get_USCOREPersonCategory

  - @ref ns1__Get_USCORERegisterType

  - @ref ns1__Get_USCOREPerson

  - @ref ns1__Get_USCOREGoodsGroup

  - @ref ns1__Get_USCOREBrand

  - @ref ns1__Get_USCOREGoods

  - @ref ns1__Get_USCORECalendar

  - @ref ns1__SetGoodsCode

  - @ref ns1__GetGoodsCode

  - @ref ns1__SetGoodsPrice

  - @ref ns1__GetGoodsPrice

  - @ref ns1__GetSpoiledSeries

  - @ref ns1__Login

  - @ref ns1__Logout

@section UhttMainBinding_ports Endpoints of Binding  "UhttMainBinding"

  - http://localhost/Universe-HTT/soap/universe_htt.php

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   UhttMainBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__SelectObject                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__SelectObjectResponse" of service binding "UhttMainBinding" operation "ns1__SelectObject"
struct ns1__SelectObjectResponse
{
    ns1__ArrayOfUhttCommObjItem*        CommObjItem;
};

/// Operation "ns1__SelectObject" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/SelectObject"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/SelectObjectResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__SelectObject(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__UhttObjSelectCriteria*         ObjSelectCriteria,
    // response parameters:
    struct ns1__SelectObjectResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__SelectObject(
    struct soap *soap,
    // request parameters:
    ns1__UhttObjSelectCriteria*         ObjSelectCriteria,
    // response parameters:
    struct ns1__SelectObjectResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	SelectObject rpc
//gsoap ns1  service method-encoding:	SelectObject http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	SelectObject ""
//gsoap ns1  service method-output-action:	SelectObject http://localhost/Universe-HTT/soap//UhttMainPortType/SelectObjectResponse
int ns1__SelectObject(
    ns1__UhttObjSelectCriteria*         ObjSelectCriteria,	///< Request parameter
    struct ns1__SelectObjectResponse   &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREWorld                                                     *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREWorldResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREWorld"
struct ns1__Get_USCOREWorldResponse
{
    ns1__UhttWorld*                     World;
};

/// Operation "ns1__Get_USCOREWorld" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREWorld"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREWorldResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREWorld(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREWorldResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREWorld(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREWorldResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREWorld rpc
//gsoap ns1  service method-encoding:	Get_USCOREWorld http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREWorld ""
//gsoap ns1  service method-output-action:	Get_USCOREWorld http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREWorldResponse
int ns1__Get_USCOREWorld(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREWorldResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCORECurrency                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCORECurrencyResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCORECurrency"
struct ns1__Get_USCORECurrencyResponse
{
    ns1__UhttCurrency*                  Currency;
};

/// Operation "ns1__Get_USCORECurrency" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORECurrency"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORECurrencyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCORECurrency(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCORECurrencyResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCORECurrency(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCORECurrencyResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCORECurrency rpc
//gsoap ns1  service method-encoding:	Get_USCORECurrency http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCORECurrency ""
//gsoap ns1  service method-output-action:	Get_USCORECurrency http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORECurrencyResponse
int ns1__Get_USCORECurrency(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCORECurrencyResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREPersonKind                                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREPersonKindResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREPersonKind"
struct ns1__Get_USCOREPersonKindResponse
{
    ns1__UhttPersonKind*                PersonKind;
};

/// Operation "ns1__Get_USCOREPersonKind" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonKind"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonKindResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREPersonKind(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREPersonKindResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREPersonKind(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREPersonKindResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREPersonKind rpc
//gsoap ns1  service method-encoding:	Get_USCOREPersonKind http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREPersonKind ""
//gsoap ns1  service method-output-action:	Get_USCOREPersonKind http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonKindResponse
int ns1__Get_USCOREPersonKind(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREPersonKindResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREPersonCategory                                            *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREPersonCategoryResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREPersonCategory"
struct ns1__Get_USCOREPersonCategoryResponse
{
    ns1__UhttPersonCategory*            PersonCategory;
};

/// Operation "ns1__Get_USCOREPersonCategory" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonCategory"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonCategoryResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREPersonCategory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREPersonCategoryResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREPersonCategory(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREPersonCategoryResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREPersonCategory rpc
//gsoap ns1  service method-encoding:	Get_USCOREPersonCategory http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREPersonCategory ""
//gsoap ns1  service method-output-action:	Get_USCOREPersonCategory http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonCategoryResponse
int ns1__Get_USCOREPersonCategory(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREPersonCategoryResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCORERegisterType                                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCORERegisterTypeResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCORERegisterType"
struct ns1__Get_USCORERegisterTypeResponse
{
    ns1__UhttPersonRegisterType*        PersonRegisterType;
};

/// Operation "ns1__Get_USCORERegisterType" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORERegisterType"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORERegisterTypeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCORERegisterType(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCORERegisterTypeResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCORERegisterType(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCORERegisterTypeResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCORERegisterType rpc
//gsoap ns1  service method-encoding:	Get_USCORERegisterType http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCORERegisterType ""
//gsoap ns1  service method-output-action:	Get_USCORERegisterType http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORERegisterTypeResponse
int ns1__Get_USCORERegisterType(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCORERegisterTypeResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREPerson                                                    *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREPersonResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREPerson"
struct ns1__Get_USCOREPersonResponse
{
    ns1__UhttPerson*                    Person;
};

/// Operation "ns1__Get_USCOREPerson" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPerson"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREPerson(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREPersonResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREPerson(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREPersonResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREPerson rpc
//gsoap ns1  service method-encoding:	Get_USCOREPerson http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREPerson ""
//gsoap ns1  service method-output-action:	Get_USCOREPerson http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREPersonResponse
int ns1__Get_USCOREPerson(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREPersonResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREGoodsGroup                                                *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREGoodsGroupResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREGoodsGroup"
struct ns1__Get_USCOREGoodsGroupResponse
{
    ns1__UhttGoodsGroup*                GoodsGroup;
};

/// Operation "ns1__Get_USCOREGoodsGroup" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREGoodsGroup"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREGoodsGroupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREGoodsGroup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREGoodsGroupResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREGoodsGroup(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREGoodsGroupResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREGoodsGroup rpc
//gsoap ns1  service method-encoding:	Get_USCOREGoodsGroup http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREGoodsGroup ""
//gsoap ns1  service method-output-action:	Get_USCOREGoodsGroup http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREGoodsGroupResponse
int ns1__Get_USCOREGoodsGroup(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREGoodsGroupResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREBrand                                                     *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREBrandResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREBrand"
struct ns1__Get_USCOREBrandResponse
{
    ns1__UhttBrand*                     Brand;
};

/// Operation "ns1__Get_USCOREBrand" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREBrand"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREBrandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREBrand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREBrandResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREBrand(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREBrandResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREBrand rpc
//gsoap ns1  service method-encoding:	Get_USCOREBrand http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREBrand ""
//gsoap ns1  service method-output-action:	Get_USCOREBrand http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREBrandResponse
int ns1__Get_USCOREBrand(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREBrandResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCOREGoods                                                     *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCOREGoodsResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCOREGoods"
struct ns1__Get_USCOREGoodsResponse
{
    ns1__UhttGoods*                     Goods;
};

/// Operation "ns1__Get_USCOREGoods" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREGoods"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREGoodsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCOREGoods(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREGoodsResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCOREGoods(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCOREGoodsResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCOREGoods rpc
//gsoap ns1  service method-encoding:	Get_USCOREGoods http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCOREGoods ""
//gsoap ns1  service method-output-action:	Get_USCOREGoods http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCOREGoodsResponse
int ns1__Get_USCOREGoods(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCOREGoodsResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Get_USCORECalendar                                                  *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__Get_USCORECalendarResponse" of service binding "UhttMainBinding" operation "ns1__Get_USCORECalendar"
struct ns1__Get_USCORECalendarResponse
{
    ns1__UhttCalendar*                  Calendar;
};

/// Operation "ns1__Get_USCORECalendar" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORECalendar"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORECalendarResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Get_USCORECalendar(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCORECalendarResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Get_USCORECalendar(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__Get_USCORECalendarResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Get_USCORECalendar rpc
//gsoap ns1  service method-encoding:	Get_USCORECalendar http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Get_USCORECalendar ""
//gsoap ns1  service method-output-action:	Get_USCORECalendar http://localhost/Universe-HTT/soap//UhttMainPortType/Get_USCORECalendarResponse
int ns1__Get_USCORECalendar(
    int                                 ID,	///< Request parameter
    struct ns1__Get_USCORECalendarResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__SetGoodsCode                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__SetGoodsCodeResponse" of service binding "UhttMainBinding" operation "ns1__SetGoodsCode"
struct ns1__SetGoodsCodeResponse
{
    ns1__UhttOutStatus*                 Status;
};

/// Operation "ns1__SetGoodsCode" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/SetGoodsCode"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/SetGoodsCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__SetGoodsCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__UhttArCode*                    ArCode,
    // response parameters:
    struct ns1__SetGoodsCodeResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__SetGoodsCode(
    struct soap *soap,
    // request parameters:
    ns1__UhttArCode*                    ArCode,
    // response parameters:
    struct ns1__SetGoodsCodeResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	SetGoodsCode rpc
//gsoap ns1  service method-encoding:	SetGoodsCode http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	SetGoodsCode ""
//gsoap ns1  service method-output-action:	SetGoodsCode http://localhost/Universe-HTT/soap//UhttMainPortType/SetGoodsCodeResponse
int ns1__SetGoodsCode(
    ns1__UhttArCode*                    ArCode,	///< Request parameter
    struct ns1__SetGoodsCodeResponse   &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__GetGoodsCode                                                        *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__GetGoodsCodeResponse" of service binding "UhttMainBinding" operation "ns1__GetGoodsCode"
struct ns1__GetGoodsCodeResponse
{
    ns1__UhttArCode*                    ArCode;
};

/// Operation "ns1__GetGoodsCode" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/GetGoodsCode"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/GetGoodsCodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__GetGoodsCode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__UhttArCode*                    ArCode,
    // response parameters:
    struct ns1__GetGoodsCodeResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__GetGoodsCode(
    struct soap *soap,
    // request parameters:
    ns1__UhttArCode*                    ArCode,
    // response parameters:
    struct ns1__GetGoodsCodeResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetGoodsCode rpc
//gsoap ns1  service method-encoding:	GetGoodsCode http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	GetGoodsCode ""
//gsoap ns1  service method-output-action:	GetGoodsCode http://localhost/Universe-HTT/soap//UhttMainPortType/GetGoodsCodeResponse
int ns1__GetGoodsCode(
    ns1__UhttArCode*                    ArCode,	///< Request parameter
    struct ns1__GetGoodsCodeResponse   &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__SetGoodsPrice                                                       *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__SetGoodsPriceResponse" of service binding "UhttMainBinding" operation "ns1__SetGoodsPrice"
struct ns1__SetGoodsPriceResponse
{
    ns1__UhttOutStatus*                 Status;
};

/// Operation "ns1__SetGoodsPrice" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/SetGoodsPrice"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/SetGoodsPriceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__SetGoodsPrice(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__UhttQuot*                      Quot,
    // response parameters:
    struct ns1__SetGoodsPriceResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__SetGoodsPrice(
    struct soap *soap,
    // request parameters:
    ns1__UhttQuot*                      Quot,
    // response parameters:
    struct ns1__SetGoodsPriceResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	SetGoodsPrice rpc
//gsoap ns1  service method-encoding:	SetGoodsPrice http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	SetGoodsPrice ""
//gsoap ns1  service method-output-action:	SetGoodsPrice http://localhost/Universe-HTT/soap//UhttMainPortType/SetGoodsPriceResponse
int ns1__SetGoodsPrice(
    ns1__UhttQuot*                      Quot,	///< Request parameter
    struct ns1__SetGoodsPriceResponse  &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__GetGoodsPrice                                                       *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__GetGoodsPriceResponse" of service binding "UhttMainBinding" operation "ns1__GetGoodsPrice"
struct ns1__GetGoodsPriceResponse
{
    ns1__UhttQuot*                      Quot;
};

/// Operation "ns1__GetGoodsPrice" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/GetGoodsPrice"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/GetGoodsPriceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__GetGoodsPrice(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    ns1__UhttQuot*                      Quot,
    // response parameters:
    struct ns1__GetGoodsPriceResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__GetGoodsPrice(
    struct soap *soap,
    // request parameters:
    ns1__UhttQuot*                      Quot,
    // response parameters:
    struct ns1__GetGoodsPriceResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetGoodsPrice rpc
//gsoap ns1  service method-encoding:	GetGoodsPrice http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	GetGoodsPrice ""
//gsoap ns1  service method-output-action:	GetGoodsPrice http://localhost/Universe-HTT/soap//UhttMainPortType/GetGoodsPriceResponse
int ns1__GetGoodsPrice(
    ns1__UhttQuot*                      Quot,	///< Request parameter
    struct ns1__GetGoodsPriceResponse  &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__GetSpoiledSeries                                                    *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__GetSpoiledSeriesResponse" of service binding "UhttMainBinding" operation "ns1__GetSpoiledSeries"
struct ns1__GetSpoiledSeriesResponse
{
    ns1__ArrayOfUhttSpoiledSerial*      SpoiledSeries;
};

/// Operation "ns1__GetSpoiledSeries" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/GetSpoiledSeries"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/GetSpoiledSeriesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__GetSpoiledSeries(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__GetSpoiledSeriesResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__GetSpoiledSeries(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__GetSpoiledSeriesResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	GetSpoiledSeries rpc
//gsoap ns1  service method-encoding:	GetSpoiledSeries http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	GetSpoiledSeries ""
//gsoap ns1  service method-output-action:	GetSpoiledSeries http://localhost/Universe-HTT/soap//UhttMainPortType/GetSpoiledSeriesResponse
int ns1__GetSpoiledSeries(
    int                                 ID,	///< Request parameter
    struct ns1__GetSpoiledSeriesResponse&	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Login                                                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__LoginResponse" of service binding "UhttMainBinding" operation "ns1__Login"
struct ns1__LoginResponse
{
    ns1__UhttOutStatus*                 Status;
};

/// Operation "ns1__Login" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Login"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/LoginResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Login(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    char*                               Login,
    char*                               Password,
    // response parameters:
    struct ns1__LoginResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Login(
    struct soap *soap,
    // request parameters:
    char*                               Login,
    char*                               Password,
    // response parameters:
    struct ns1__LoginResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Login rpc
//gsoap ns1  service method-encoding:	Login http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Login ""
//gsoap ns1  service method-output-action:	Login http://localhost/Universe-HTT/soap//UhttMainPortType/LoginResponse
int ns1__Login(
    char*                               Login,	///< Request parameter
    char*                               Password,	///< Request parameter
    struct ns1__LoginResponse          &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   ns1__Logout                                                              *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "ns1__LogoutResponse" of service binding "UhttMainBinding" operation "ns1__Logout"
struct ns1__LogoutResponse
{
    ns1__UhttOutStatus*                 Status;
};

/// Operation "ns1__Logout" of service binding "UhttMainBinding"

/**

Operation details:


  - SOAP RPC encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"

  - Addressing action: "http://localhost/Universe-HTT/soap//UhttMainPortType/Logout"

  - Addressing response action: "http://localhost/Universe-HTT/soap//UhttMainPortType/LogoutResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call_ns1__Logout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__LogoutResponse&
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int ns1__Logout(
    struct soap *soap,
    // request parameters:
    int                                 ID,
    // response parameters:
    struct ns1__LogoutResponse&
  );
@endcode

C++ proxy class (defined in soapUhttMainBindingProxy.h):
@code
  class UhttMainBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUhttMainBindingService.h):
@code
  class UhttMainBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-style:	Logout rpc
//gsoap ns1  service method-encoding:	Logout http://schemas.xmlsoap.org/soap/encoding/
//gsoap ns1  service method-action:	Logout ""
//gsoap ns1  service method-output-action:	Logout http://localhost/Universe-HTT/soap//UhttMainPortType/LogoutResponse
int ns1__Logout(
    int                                 ID,	///< Request parameter
    struct ns1__LogoutResponse         &	///< Response struct parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://localhost/Universe-HTT/soap/"

*/

/* End of d:\Papyrus\Src\Tools\Uhttsoap\universe_htt.h */
