/* soapStub.h
   Generated by gSOAP 2.8.4 from d:\Papyrus\Src\Tools\Uhttsoap\universe_htt.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://localhost/Universe-HTT/soap/"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__UhttObjSelectCriteria
#define SOAP_TYPE_ns1__UhttObjSelectCriteria (9)
/* ns1:UhttObjSelectCriteria */
class SOAP_CMAC ns1__UhttObjSelectCriteria
{
public:
	char *ObjName;	/* required element of type xsd:string */
	char *ByCriteria;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns1__UhttObjSelectCriteria */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttObjSelectCriteria() { ns1__UhttObjSelectCriteria::soap_default(NULL); }
	virtual ~ns1__UhttObjSelectCriteria() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUhttCommObjItem
#define SOAP_TYPE_ns1__ArrayOfUhttCommObjItem (10)
/* ns1:ArrayOfUhttCommObjItem */
class SOAP_CMAC ns1__ArrayOfUhttCommObjItem
{
public:
	int __sizeCommObjItem;	/* sequence of elements <CommObjItem> */
	class ns1__UhttCommObjItem **CommObjItem;	/* optional element of type ns1:UhttCommObjItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns1__ArrayOfUhttCommObjItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUhttCommObjItem() { ns1__ArrayOfUhttCommObjItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfUhttCommObjItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttCommObjItem
#define SOAP_TYPE_ns1__UhttCommObjItem (11)
/* ns1:UhttCommObjItem */
class SOAP_CMAC ns1__UhttCommObjItem
{
public:
	int ID;	/* required element of type xsd:int */
	int ParentID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns1__UhttCommObjItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttCommObjItem() { ns1__UhttCommObjItem::soap_default(NULL); }
	virtual ~ns1__UhttCommObjItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttWorld
#define SOAP_TYPE_ns1__UhttWorld (12)
/* ns1:UhttWorld */
class SOAP_CMAC ns1__UhttWorld
{
public:
	int ID;	/* required element of type xsd:int */
	int ParentID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	int Kind;	/* required element of type xsd:int */
	char *ParentName;	/* required element of type xsd:string */
	int CountryID;	/* required element of type xsd:int */
	double Latitude;	/* required element of type xsd:double */
	double Longitude;	/* required element of type xsd:double */
	char *Code;	/* required element of type xsd:string */
	char *CountryIsoAlpha2;	/* required element of type xsd:string */
	int CountryIsoDigit;	/* required element of type xsd:int */
	int CurrencyID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__UhttWorld */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttWorld() { ns1__UhttWorld::soap_default(NULL); }
	virtual ~ns1__UhttWorld() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttCurrency
#define SOAP_TYPE_ns1__UhttCurrency (13)
/* ns1:UhttCurrency */
class SOAP_CMAC ns1__UhttCurrency
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	int DigitCode;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns1__UhttCurrency */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttCurrency() { ns1__UhttCurrency::soap_default(NULL); }
	virtual ~ns1__UhttCurrency() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttPersonKind
#define SOAP_TYPE_ns1__UhttPersonKind (14)
/* ns1:UhttPersonKind */
class SOAP_CMAC ns1__UhttPersonKind
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__UhttPersonKind */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttPersonKind() { ns1__UhttPersonKind::soap_default(NULL); }
	virtual ~ns1__UhttPersonKind() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttPersonCategory
#define SOAP_TYPE_ns1__UhttPersonCategory (15)
/* ns1:UhttPersonCategory */
class SOAP_CMAC ns1__UhttPersonCategory
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__UhttPersonCategory */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttPersonCategory() { ns1__UhttPersonCategory::soap_default(NULL); }
	virtual ~ns1__UhttPersonCategory() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttLocation
#define SOAP_TYPE_ns1__UhttLocation (16)
/* ns1:UhttLocation */
class SOAP_CMAC ns1__UhttLocation
{
public:
	int LocID;	/* required element of type xsd:int */
	int LocKind;	/* required element of type xsd:int */
	char *LocCode;	/* required element of type xsd:string */
	char *LocName;	/* required element of type xsd:string */
	int CountryID;	/* required element of type xsd:int */
	char *Country;	/* required element of type xsd:string */
	int CityID;	/* required element of type xsd:int */
	char *City;	/* required element of type xsd:string */
	char *ZIP;	/* required element of type xsd:string */
	char *Address;	/* required element of type xsd:string */
	double Latitude;	/* required element of type xsd:double */
	double Longitude;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns1__UhttLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttLocation() { ns1__UhttLocation::soap_default(NULL); }
	virtual ~ns1__UhttLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttPersonRegisterType
#define SOAP_TYPE_ns1__UhttPersonRegisterType (17)
/* ns1:UhttPersonRegisterType */
class SOAP_CMAC ns1__UhttPersonRegisterType
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns1__UhttPersonRegisterType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttPersonRegisterType() { ns1__UhttPersonRegisterType::soap_default(NULL); }
	virtual ~ns1__UhttPersonRegisterType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttPersonRegister
#define SOAP_TYPE_ns1__UhttPersonRegister (18)
/* ns1:UhttPersonRegister */
class SOAP_CMAC ns1__UhttPersonRegister
{
public:
	int RegID;	/* required element of type xsd:int */
	int RegTypeID;	/* required element of type xsd:int */
	int RegPersonID;	/* required element of type xsd:int */
	int RegOrgID;	/* required element of type xsd:int */
	char *RegDt;	/* required element of type xsd:date */
	char *RegExpiry;	/* required element of type xsd:date */
	char *RegSerial;	/* required element of type xsd:string */
	char *RegNumber;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__UhttPersonRegister */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttPersonRegister() { ns1__UhttPersonRegister::soap_default(NULL); }
	virtual ~ns1__UhttPersonRegister() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttPerson
#define SOAP_TYPE_ns1__UhttPerson (19)
/* ns1:UhttPerson */
class SOAP_CMAC ns1__UhttPerson
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	int __sizeKindNameList;	/* sequence of elements <KindNameList> */
	char **KindNameList;	/* optional element of type xsd:string */
	char *CategoryName;	/* required element of type xsd:string */
	char *StatusName;	/* required element of type xsd:string */
	ns1__UhttLocation *Addr;	/* required element of type ns1:UhttLocation */
	ns1__UhttLocation *RAddr;	/* required element of type ns1:UhttLocation */
	int __sizePhoneList;	/* sequence of elements <PhoneList> */
	char **PhoneList;	/* optional element of type xsd:string */
	int __sizeEMailList;	/* sequence of elements <EMailList> */
	char **EMailList;	/* optional element of type xsd:string */
	char *URL;	/* required element of type xsd:string */
	int __sizeRegisterList;	/* sequence of elements <RegisterList> */
	ns1__UhttPersonRegister **RegisterList;	/* optional element of type ns1:UhttPersonRegister */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns1__UhttPerson */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttPerson() { ns1__UhttPerson::soap_default(NULL); }
	virtual ~ns1__UhttPerson() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttPersonLocation
#define SOAP_TYPE_ns1__UhttPersonLocation (20)
/* ns1:UhttPersonLocation */
class SOAP_CMAC ns1__UhttPersonLocation
{
public:
	int PersonID;	/* required element of type xsd:int */
	ns1__UhttLocation *Location;	/* required element of type ns1:UhttLocation */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns1__UhttPersonLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttPersonLocation() { ns1__UhttPersonLocation::soap_default(NULL); }
	virtual ~ns1__UhttPersonLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttGoodsGroup
#define SOAP_TYPE_ns1__UhttGoodsGroup (21)
/* ns1:UhttGoodsGroup */
class SOAP_CMAC ns1__UhttGoodsGroup
{
public:
	int ID;	/* required element of type xsd:int */
	int ParentID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ns1__UhttGoodsGroup */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttGoodsGroup() { ns1__UhttGoodsGroup::soap_default(NULL); }
	virtual ~ns1__UhttGoodsGroup() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttBrand
#define SOAP_TYPE_ns1__UhttBrand (22)
/* ns1:UhttBrand */
class SOAP_CMAC ns1__UhttBrand
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	int OwnerID;	/* required element of type xsd:int */
	int GoodsGroupID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns1__UhttBrand */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttBrand() { ns1__UhttBrand::soap_default(NULL); }
	virtual ~ns1__UhttBrand() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttBarcode
#define SOAP_TYPE_ns1__UhttBarcode (23)
/* ns1:UhttBarcode */
class SOAP_CMAC ns1__UhttBarcode
{
public:
	char *Code;	/* required element of type xsd:string */
	double Package;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_ns1__UhttBarcode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttBarcode() { ns1__UhttBarcode::soap_default(NULL); }
	virtual ~ns1__UhttBarcode() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttArCode
#define SOAP_TYPE_ns1__UhttArCode (24)
/* ns1:UhttArCode */
class SOAP_CMAC ns1__UhttArCode
{
public:
	int OwnerID;	/* required element of type xsd:int */
	char *Code;	/* required element of type xsd:string */
	double Package;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_ns1__UhttArCode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttArCode() { ns1__UhttArCode::soap_default(NULL); }
	virtual ~ns1__UhttArCode() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttGoodsTaxGroup
#define SOAP_TYPE_ns1__UhttGoodsTaxGroup (25)
/* ns1:UhttGoodsTaxGroup */
class SOAP_CMAC ns1__UhttGoodsTaxGroup
{
public:
	int ID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	double VatRate;	/* required element of type xsd:double */
	double ExciseRate;	/* required element of type xsd:double */
	double SalesTaxRate;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_ns1__UhttGoodsTaxGroup */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttGoodsTaxGroup() { ns1__UhttGoodsTaxGroup::soap_default(NULL); }
	virtual ~ns1__UhttGoodsTaxGroup() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttGoods
#define SOAP_TYPE_ns1__UhttGoods (26)
/* ns1:UhttGoods */
class SOAP_CMAC ns1__UhttGoods
{
public:
	int ID;	/* required element of type xsd:int */
	int ParentID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	int UnitID;	/* required element of type xsd:int */
	int PhUnitID;	/* required element of type xsd:int */
	double PhUPerU;	/* required element of type xsd:double */
	int BrandID;	/* required element of type xsd:int */
	int ManufID;	/* required element of type xsd:int */
	int TaxGrpID;	/* required element of type xsd:int */
	double Package;	/* required element of type xsd:double */
	int __sizeBarcodeList;	/* sequence of elements <BarcodeList> */
	ns1__UhttBarcode **BarcodeList;	/* optional element of type ns1:UhttBarcode */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_ns1__UhttGoods */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttGoods() { ns1__UhttGoods::soap_default(NULL); }
	virtual ~ns1__UhttGoods() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttCalendar
#define SOAP_TYPE_ns1__UhttCalendar (27)
/* ns1:UhttCalendar */
class SOAP_CMAC ns1__UhttCalendar
{
public:
	int ID;	/* required element of type xsd:int */
	int ParentID;	/* required element of type xsd:int */
	char *Name;	/* required element of type xsd:string */
	char *Code;	/* required element of type xsd:string */
	int PersonID;	/* required element of type xsd:int */
	int CountryID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_ns1__UhttCalendar */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttCalendar() { ns1__UhttCalendar::soap_default(NULL); }
	virtual ~ns1__UhttCalendar() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttCalendarEntry
#define SOAP_TYPE_ns1__UhttCalendarEntry (28)
/* ns1:UhttCalendarEntry */
class SOAP_CMAC ns1__UhttCalendarEntry
{
public:
	int CalID;	/* required element of type xsd:int */
	bool fSkip;	/* required element of type xsd:boolean */
	char *Dt;	/* required element of type xsd:date */
	char *TmStart;	/* required element of type xsd:time */
	char *TmEnd;	/* required element of type xsd:time */
	char *Memo;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_ns1__UhttCalendarEntry */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttCalendarEntry() { ns1__UhttCalendarEntry::soap_default(NULL); }
	virtual ~ns1__UhttCalendarEntry() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUhttSpoiledSerial
#define SOAP_TYPE_ns1__ArrayOfUhttSpoiledSerial (29)
/* ns1:ArrayOfUhttSpoiledSerial */
class SOAP_CMAC ns1__ArrayOfUhttSpoiledSerial
{
public:
	int __sizeSpoiledSerial;	/* sequence of elements <SpoiledSerial> */
	class ns1__UhttSpoiledSerial **SpoiledSerial;	/* optional element of type ns1:UhttSpoiledSerial */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_ns1__ArrayOfUhttSpoiledSerial */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUhttSpoiledSerial() { ns1__ArrayOfUhttSpoiledSerial::soap_default(NULL); }
	virtual ~ns1__ArrayOfUhttSpoiledSerial() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttSpoiledSerial
#define SOAP_TYPE_ns1__UhttSpoiledSerial (30)
/* ns1:UhttSpoiledSerial */
class SOAP_CMAC ns1__UhttSpoiledSerial
{
public:
	char *Serial;	/* required element of type xsd:string */
	char *BarCode;	/* required element of type xsd:string */
	int GoodsID;	/* required element of type xsd:int */
	char *GoodsName;	/* required element of type xsd:string */
	int ManufID;	/* required element of type xsd:int */
	char *ManufName;	/* required element of type xsd:string */
	int ManufCountryID;	/* required element of type xsd:int */
	char *ManufCountryName;	/* required element of type xsd:string */
	int LabID;	/* required element of type xsd:int */
	char *LabName;	/* required element of type xsd:string */
	char *InfoDate;	/* required element of type xsd:date */
	char *InfoIdent;	/* required element of type xsd:string */
	char *AllowDate;	/* required element of type xsd:date */
	char *AllowNumber;	/* required element of type xsd:string */
	char *SpecName;	/* required element of type xsd:string */
	char *LetterType;	/* required element of type xsd:string */
	int Flags;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_ns1__UhttSpoiledSerial */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttSpoiledSerial() { ns1__UhttSpoiledSerial::soap_default(NULL); }
	virtual ~ns1__UhttSpoiledSerial() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttQuot
#define SOAP_TYPE_ns1__UhttQuot (31)
/* ns1:UhttQuot */
class SOAP_CMAC ns1__UhttQuot
{
public:
	int GoodsID;	/* required element of type xsd:int */
	int SellerID;	/* required element of type xsd:int */
	int BuyerID;	/* required element of type xsd:int */
	int CurID;	/* required element of type xsd:int */
	char *Dt;	/* required element of type xsd:date */
	char *Tm;	/* required element of type xsd:time */
	double Val;	/* required element of type xsd:double */
	char *Memo;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_ns1__UhttQuot */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttQuot() { ns1__UhttQuot::soap_default(NULL); }
	virtual ~ns1__UhttQuot() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UhttOutStatus
#define SOAP_TYPE_ns1__UhttOutStatus (32)
/* ns1:UhttOutStatus */
class SOAP_CMAC ns1__UhttOutStatus
{
public:
	char *Status;	/* required element of type xsd:string */
	char *Memo;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_ns1__UhttOutStatus */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UhttOutStatus() { ns1__UhttOutStatus::soap_default(NULL); }
	virtual ~ns1__UhttOutStatus() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SelectObjectResponse
#define SOAP_TYPE_ns1__SelectObjectResponse (46)
/* ns1:SelectObjectResponse */
struct ns1__SelectObjectResponse
{
public:
	ns1__ArrayOfUhttCommObjItem *CommObjItem;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfUhttCommObjItem */
};
#endif

#ifndef SOAP_TYPE_ns1__SelectObject
#define SOAP_TYPE_ns1__SelectObject (51)
/* ns1:SelectObject */
struct ns1__SelectObject
{
public:
	ns1__UhttObjSelectCriteria *ObjSelectCriteria;	/* optional element of type ns1:UhttObjSelectCriteria */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREWorldResponse
#define SOAP_TYPE_ns1__Get_USCOREWorldResponse (52)
/* ns1:Get_WorldResponse */
struct ns1__Get_USCOREWorldResponse
{
public:
	ns1__UhttWorld *World;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttWorld */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREWorld
#define SOAP_TYPE_ns1__Get_USCOREWorld (56)
/* ns1:Get_World */
struct ns1__Get_USCOREWorld
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCORECurrencyResponse
#define SOAP_TYPE_ns1__Get_USCORECurrencyResponse (57)
/* ns1:Get_CurrencyResponse */
struct ns1__Get_USCORECurrencyResponse
{
public:
	ns1__UhttCurrency *Currency;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttCurrency */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCORECurrency
#define SOAP_TYPE_ns1__Get_USCORECurrency (61)
/* ns1:Get_Currency */
struct ns1__Get_USCORECurrency
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREPersonKindResponse
#define SOAP_TYPE_ns1__Get_USCOREPersonKindResponse (62)
/* ns1:Get_PersonKindResponse */
struct ns1__Get_USCOREPersonKindResponse
{
public:
	ns1__UhttPersonKind *PersonKind;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttPersonKind */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREPersonKind
#define SOAP_TYPE_ns1__Get_USCOREPersonKind (66)
/* ns1:Get_PersonKind */
struct ns1__Get_USCOREPersonKind
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREPersonCategoryResponse
#define SOAP_TYPE_ns1__Get_USCOREPersonCategoryResponse (67)
/* ns1:Get_PersonCategoryResponse */
struct ns1__Get_USCOREPersonCategoryResponse
{
public:
	ns1__UhttPersonCategory *PersonCategory;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttPersonCategory */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREPersonCategory
#define SOAP_TYPE_ns1__Get_USCOREPersonCategory (71)
/* ns1:Get_PersonCategory */
struct ns1__Get_USCOREPersonCategory
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCORERegisterTypeResponse
#define SOAP_TYPE_ns1__Get_USCORERegisterTypeResponse (72)
/* ns1:Get_RegisterTypeResponse */
struct ns1__Get_USCORERegisterTypeResponse
{
public:
	ns1__UhttPersonRegisterType *PersonRegisterType;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttPersonRegisterType */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCORERegisterType
#define SOAP_TYPE_ns1__Get_USCORERegisterType (76)
/* ns1:Get_RegisterType */
struct ns1__Get_USCORERegisterType
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREPersonResponse
#define SOAP_TYPE_ns1__Get_USCOREPersonResponse (77)
/* ns1:Get_PersonResponse */
struct ns1__Get_USCOREPersonResponse
{
public:
	ns1__UhttPerson *Person;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttPerson */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREPerson
#define SOAP_TYPE_ns1__Get_USCOREPerson (81)
/* ns1:Get_Person */
struct ns1__Get_USCOREPerson
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREGoodsGroupResponse
#define SOAP_TYPE_ns1__Get_USCOREGoodsGroupResponse (82)
/* ns1:Get_GoodsGroupResponse */
struct ns1__Get_USCOREGoodsGroupResponse
{
public:
	ns1__UhttGoodsGroup *GoodsGroup;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttGoodsGroup */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREGoodsGroup
#define SOAP_TYPE_ns1__Get_USCOREGoodsGroup (86)
/* ns1:Get_GoodsGroup */
struct ns1__Get_USCOREGoodsGroup
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREBrandResponse
#define SOAP_TYPE_ns1__Get_USCOREBrandResponse (87)
/* ns1:Get_BrandResponse */
struct ns1__Get_USCOREBrandResponse
{
public:
	ns1__UhttBrand *Brand;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttBrand */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREBrand
#define SOAP_TYPE_ns1__Get_USCOREBrand (91)
/* ns1:Get_Brand */
struct ns1__Get_USCOREBrand
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREGoodsResponse
#define SOAP_TYPE_ns1__Get_USCOREGoodsResponse (92)
/* ns1:Get_GoodsResponse */
struct ns1__Get_USCOREGoodsResponse
{
public:
	ns1__UhttGoods *Goods;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttGoods */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCOREGoods
#define SOAP_TYPE_ns1__Get_USCOREGoods (96)
/* ns1:Get_Goods */
struct ns1__Get_USCOREGoods
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCORECalendarResponse
#define SOAP_TYPE_ns1__Get_USCORECalendarResponse (97)
/* ns1:Get_CalendarResponse */
struct ns1__Get_USCORECalendarResponse
{
public:
	ns1__UhttCalendar *Calendar;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttCalendar */
};
#endif

#ifndef SOAP_TYPE_ns1__Get_USCORECalendar
#define SOAP_TYPE_ns1__Get_USCORECalendar (101)
/* ns1:Get_Calendar */
struct ns1__Get_USCORECalendar
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__SetGoodsCodeResponse
#define SOAP_TYPE_ns1__SetGoodsCodeResponse (102)
/* ns1:SetGoodsCodeResponse */
struct ns1__SetGoodsCodeResponse
{
public:
	ns1__UhttOutStatus *Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttOutStatus */
};
#endif

#ifndef SOAP_TYPE_ns1__SetGoodsCode
#define SOAP_TYPE_ns1__SetGoodsCode (107)
/* ns1:SetGoodsCode */
struct ns1__SetGoodsCode
{
public:
	ns1__UhttArCode *ArCode;	/* optional element of type ns1:UhttArCode */
};
#endif

#ifndef SOAP_TYPE_ns1__GetGoodsCodeResponse
#define SOAP_TYPE_ns1__GetGoodsCodeResponse (108)
/* ns1:GetGoodsCodeResponse */
struct ns1__GetGoodsCodeResponse
{
public:
	ns1__UhttArCode *ArCode;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttArCode */
};
#endif

#ifndef SOAP_TYPE_ns1__GetGoodsCode
#define SOAP_TYPE_ns1__GetGoodsCode (111)
/* ns1:GetGoodsCode */
struct ns1__GetGoodsCode
{
public:
	ns1__UhttArCode *ArCode;	/* optional element of type ns1:UhttArCode */
};
#endif

#ifndef SOAP_TYPE_ns1__SetGoodsPriceResponse
#define SOAP_TYPE_ns1__SetGoodsPriceResponse (112)
/* ns1:SetGoodsPriceResponse */
struct ns1__SetGoodsPriceResponse
{
public:
	ns1__UhttOutStatus *Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttOutStatus */
};
#endif

#ifndef SOAP_TYPE_ns1__SetGoodsPrice
#define SOAP_TYPE_ns1__SetGoodsPrice (116)
/* ns1:SetGoodsPrice */
struct ns1__SetGoodsPrice
{
public:
	ns1__UhttQuot *Quot;	/* optional element of type ns1:UhttQuot */
};
#endif

#ifndef SOAP_TYPE_ns1__GetGoodsPriceResponse
#define SOAP_TYPE_ns1__GetGoodsPriceResponse (117)
/* ns1:GetGoodsPriceResponse */
struct ns1__GetGoodsPriceResponse
{
public:
	ns1__UhttQuot *Quot;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttQuot */
};
#endif

#ifndef SOAP_TYPE_ns1__GetGoodsPrice
#define SOAP_TYPE_ns1__GetGoodsPrice (120)
/* ns1:GetGoodsPrice */
struct ns1__GetGoodsPrice
{
public:
	ns1__UhttQuot *Quot;	/* optional element of type ns1:UhttQuot */
};
#endif

#ifndef SOAP_TYPE_ns1__GetSpoiledSeriesResponse
#define SOAP_TYPE_ns1__GetSpoiledSeriesResponse (121)
/* ns1:GetSpoiledSeriesResponse */
struct ns1__GetSpoiledSeriesResponse
{
public:
	ns1__ArrayOfUhttSpoiledSerial *SpoiledSeries;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfUhttSpoiledSerial */
};
#endif

#ifndef SOAP_TYPE_ns1__GetSpoiledSeries
#define SOAP_TYPE_ns1__GetSpoiledSeries (125)
/* ns1:GetSpoiledSeries */
struct ns1__GetSpoiledSeries
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns1__LoginResponse
#define SOAP_TYPE_ns1__LoginResponse (126)
/* ns1:LoginResponse */
struct ns1__LoginResponse
{
public:
	ns1__UhttOutStatus *Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttOutStatus */
};
#endif

#ifndef SOAP_TYPE_ns1__Login
#define SOAP_TYPE_ns1__Login (129)
/* ns1:Login */
struct ns1__Login
{
public:
	char *Login;	/* optional element of type xsd:string */
	char *Password;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__LogoutResponse
#define SOAP_TYPE_ns1__LogoutResponse (130)
/* ns1:LogoutResponse */
struct ns1__LogoutResponse
{
public:
	ns1__UhttOutStatus *Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:UhttOutStatus */
};
#endif

#ifndef SOAP_TYPE_ns1__Logout
#define SOAP_TYPE_ns1__Logout (133)
/* ns1:Logout */
struct ns1__Logout
{
public:
	int ID;	/* required element of type xsd:int */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (134)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (135)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (137)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (140)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (141)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (7)
typedef char *xsd__date;
#endif

#ifndef SOAP_TYPE_xsd__time
#define SOAP_TYPE_xsd__time (8)
typedef char *xsd__time;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__SelectObject(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UhttObjSelectCriteria *ObjSelectCriteria, struct ns1__SelectObjectResponse &_param_1);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREWorld(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREWorldResponse &_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCORECurrency(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCORECurrencyResponse &_param_3);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREPersonKind(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREPersonKindResponse &_param_4);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREPersonCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREPersonCategoryResponse &_param_5);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCORERegisterType(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCORERegisterTypeResponse &_param_6);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREPerson(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREPersonResponse &_param_7);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREGoodsGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREGoodsGroupResponse &_param_8);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREBrand(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREBrandResponse &_param_9);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCOREGoods(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCOREGoodsResponse &_param_10);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Get_USCORECalendar(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__Get_USCORECalendarResponse &_param_11);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__SetGoodsCode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UhttArCode *ArCode, struct ns1__SetGoodsCodeResponse &_param_12);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__GetGoodsCode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UhttArCode *ArCode, struct ns1__GetGoodsCodeResponse &_param_13);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__SetGoodsPrice(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UhttQuot *Quot, struct ns1__SetGoodsPriceResponse &_param_14);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__GetGoodsPrice(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__UhttQuot *Quot, struct ns1__GetGoodsPriceResponse &_param_15);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__GetSpoiledSeries(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__GetSpoiledSeriesResponse &_param_16);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Login(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *Login, char *Password, struct ns1__LoginResponse &_param_17);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__Logout(struct soap *soap, const char *soap_endpoint, const char *soap_action, int ID, struct ns1__LogoutResponse &_param_18);

#endif

/* End of soapStub.h */
