-------------------------------------------------------------
ИМПОРТ ДАННЫХ В PAPYRUS ИЗ DBF-ФОРМАТА
-------------------------------------------------------------

LastModif=29/05/2005
LastModif=21/09/2005
	[scard] turnover
LastModif=07/05/2006
	[goods]
LastModif=30/10/2006
	[goods] warehouse=, matrix=
LastModif=20/12/2008
	[goods] article

На текущий момент Papyrus поддерживает импорт следующих
объектов (в квадратных скобках указаны мнемонические обозначения зон 
описания этих объектов):
- Государства [COUNTRY]
- Персоналии [PERSON]
- Группы товаров [GOODSGROUP]
- Товары (возможно, с остатками) [GOODS]
- Котировки [QUOT]
- Дисконтные карты [SCARD]

Для того, чтобы импортировать данные, представленные в DBF-формате 
необходимо описать поля файлов, сопоставив им зарезервированные
значения полей Papyrus.
Описание должно находится в файле import.ini, который располагается //
в том же каталоге, что и исполняемый файл Papyrus ppw.exe.

-------------------------------------------------------------
ГОСУДАРСТВА
Команда импорта: "Справочники/Админ/Импорт/Импорт государств"
-------------------------------------------------------------

[country]
; Имя файла, из которого будут импортированы даные
file=filename

; Если значение !0, то при нахождении государства по имени и при
; пустом поле Abbr это поле заполняется значением code.
setcode={1|0}  

; Поле, содержащее наименование государства. Это поле обязательное.
; Если это поле не определено или определено не правильно, то
; программа сообщит об ошибке. 
; Программа не создает новую запись государства, если запись с 
; заданным именем уже существует.
name=fld_name

; Поле, содержащее аббревиатуру государства. Это поле не обязательное.
; Может быть использовано для связи между импортируемыми товарами или 
; персоналиями с соответствующим государством.
; Если параметр setcode не нулевой, и запись с именем государсва name
; уже существует, но поле аббревиатуры у него пустое, то система
; заполнит это поле значением code из соответствующей записи.
code=fld_name

-------------------------------------------------------------
ПЕРСОНАЛИИ
Команда импорта: "Справочники/Админ/Импорт/Импорт персоналий"
-------------------------------------------------------------

[person]
; Имя файла, из которого будут импортированы даные
file=filename       

; Символ (не наименование) вида регистрационного документа, 
; испольуземого в качестве кода персоналии. Этот вид регистра
; может быть использован для связи персоналий с другими объектами
; (товарами, дисконтными картами и т.д.)
personcodereg=reg_symb 

; unique code, identified person in enterprise domain
; Уникальный внутри импортируемого файла код персоналии.
; В базу данных Papyrus этот код заносится как регистр 
; типа personcodereg. Если personcodereg не определен,
; то код персоналии не присваивается.
code=fld_name

; bias added to key to avoid person id duplicating
idbias=bias         

; Список наименований видов персоналий, которым должны принадлежать 
; импортируемые персоналии. Если таких видо несколько, то их 
; наименования должны следовать друг за другом с разделителем ','
; (запятая). Если этот параметр отстутствует или не содержит ни одного
; допустимого значения, то создаваемые персоналии получают принадлежность
; зарезервированному виду UNKNOWN (Неизвестные)
kind=person_kind_list

; * person name (imported into PersonTbl::Rec.Name)
; Обязательное поле.
; Поле наименования персоналии. Система не принимает персоналию,
; если в базе данных уже имеется персоналия с таким именем.
name=fld_name

; Наименование города. Этот город заносится в юридический адрес
; персоналии. Если в базе данных нет города с таким наименованием, 
; то система создает запись для этого города с принадлежностью
; родному государству.
city=fld_name

; Почтовый индекс адреса
zip=fld_name

; Поле адреса персоналии. Этот адрес заносится как юридический адрес
; персоналии.
addr=fld_name

; Поле телефона. Указанная в этом поле строка заносится в список
; электронных адресов персоанлии с зарезервированным видом 
; "Рабочий телефон"
phone=fld_name

; ИНН персоналии. Система пытается идентифицировать перосналию 
; по ИНН наряду с именем. Так, если в базе данных уже существует 
; перосналия с ИНН, содержащимся в записи, то такая перосналия //
; не импортируется.
inn=fld_name

; ОКПО
okpo=fld_name

; ОКОНх
okonh=fld_name

; Номер банковского счета
bankacc=fld_name

; Наименование банка
; Если банка с заданным в записи наименованием не существует,
; то система создает новую запись для такого банка.
bankname=fld_name

; БИК банка
; Система пытается идентифицировать банк по этому коду.
; Если в базе данных есть банк с таким кодом, то считается, что
; банк идентифицирован.
bic=fld_name

; Корр счет банка. Перед импортом рекомендуется присвоить
; признак "Дублируемый номер" типу регистрационного документа
; "Корр счет банка", в который собственно и импортируется //
; значение из этого поля.
corracc=fld_name

; Примечание персоналии
memo=fld_name

-----------------------------------------------------------------
ГРУППЫ ТОВАРОВ
Команда импорта: "Справочники/Админ/Импорт/Импорт товарных групп"
-----------------------------------------------------------------

[goodsgroup]
; Имя файла, из которого будут импортированы данные
file=filename

; * group code (imported into Code (not ID))
; Обязательное поле.
; Код группы, который заносится в одноименное поле записи
; товарной группы. Если система обнаруживает в базе данных группу с 
; указанным кодом, то не импортирует новую запись.
; Код группы как правило, используется для установления связи между
; импортируемым товаром и группой, которой он принадлежит.
code=fld_name

; * group name (imported into Name)
; Обязательное поле.
; Наименование товарной группы. Если в базе данных существует
; группа с именем, эквивалентным импортируемому имени, то
; новая грвппа с таким именем не создается.
name=fld_name

----------------------------------------------------------
ТОВАРЫ
Команда импорта: "Справочники/Админ/Импорт/Импорт товаров"
----------------------------------------------------------

[goods]
;
; * Имя файла, из которого будут импортированы даные
;
file=filename
;
; Иерархический справочник: 
; obj_code - код объекта, 
; parent_code - код родительского объекта
;
hierarchy=obj_code,parent_code 
;
; goods code (imported into Code (not ID))
;
code=fld_name
;
; Дополнительный код товара. Если существует запись с кодом (code), который
; уже есть в справочнике, но addedcode при этом уникальный, то в товар с 
; кодом code добавляется дополнительный код addedcode
;
addedcode=fld_name
;
; Количество товара, ассоциированное с addedcode (по умолчанию - 1)
;
addedcodeqtty=fld_name
;
; @v6.0.12
; Артикул товара.
; Если по определениям supplid, personcode, supplfixid, supplfixcode
; удалось идентифицировать поставщика, то артикул товару 
; присваивается в связке с этим поставщиком, в противном случае 
; это будет собственный артикул (с нулевым идентификатором статьи).
;
article=fld_name
;
; Подстрока значения поля code, по которой следует проводить дополнительную
; попытку идентификации товара по штрихкоду
; Используется в случае, если длина импортируемых кодов почему-либо выросла
; но при этом необходимо избежать дублирования с товарами, которые уже есть 
; в справочнике.
; Если такой код найден, то он заменяется на более длинный из импортируемого 
; справочника.
; offs=0.., len=1..
;
subcode=offs,len
;
; supplier id (used for linking to suppliers)
;
supplid=fld_name
;
; Код персонального регистра для идентификации 
; поставщика по коду (personcodereg, supplfixcode).
; Если не определен, то используется поисковый регистр
; в таблице аналитических статей поставщиков.
;
personcodereg=string
;
; Номер регистра поставщика
; Это поле используется если supplid не определен либо
; имеет значение, по которому поставщик не может быть идентифицирован 
;
personcode=fld_name
;
; Номер приходного документа, который следует использовать
; при приходовании товара
;
billcode=fld_name
;
; Дата приходного документа, которую следует использовать
; при приходовании товара
;
billdate=fld_name
;
; parent group code
;
groupcode=fld_name
;
; parent group name (used only if grpcode undefined)
;
groupname=fld_name
;
; Наименование группы-папки, которой принадлежит группа groupname
;
group2name=fld_name
;
; * goods name
;
name=fld_name
;
; unit name
;
unitname=fld_name
;
; physical units per unit
;
phperu=fld_name
;
; quantity of trade units in one package
;
packqtty=fld_name
;
; cost of one trade unit
;
cost=fld_name
;
; price of one trade unit
;
price=fld_name
;
; rest (trade units)
; Остаток товара
;
rest=fld_name
;
; quality cert name
;
qcnmb=fld_name
;
; quality cert blank code
;
qcblank=fld_name
;
; quality cert issue date
;
qcdate=fld_name
;
; quality cert expiry date
;
qcexpiry=fld_name
;
; goods manufacturer name (as marked in quality cert)
;
qcmanufname=fld_name
;
; quality cert issue organization name
;
qcorgname=fld_name
;
; goods produce date string (as marked in quality cert)
;
qcmanufdate=fld_name

; quality cert extra string (imported into QalityCert.Etc
qcetc=fld_name

; rate of sales tax
salestaxrate=fld_name

; rate of vat
vatrate=fld_name

; goods manufacturer country name
manufcountryname=fld_name

; goods manufacturer country code
; Если задан manufcountrycode, и поле manufcountry пустое, то
; система ищет государство (не персоналию-государство, а именно государство) 
; с аббревиатурой manufcountrycode. Если такое государство существует, 
; то создается персоналия-государство, соответствующая найденному государству 
; и ее идентификатор принимается в качестве производителя товара
manufcountrycode=fld_name

; ГТД лота
clb=fld_name

; @v5.6.14 Серийный номер лота
serial=fld_name

; @v5.6.14 Срок годности лота
expiry=fld_name

; Производитель
manufname=fld_name        

; Торговая марка
brand=fld_name

; Дополнительное поле A            
ext_a=fld_name

; Дополнительное поле B
ext_b=fld_name

; Дополнительное поле C
ext_c=fld_name

; Дополнительное поле D
ext_d=fld_name

; Дополнительное поле E
ext_e=fld_name
;
; Символ склада для которого приходовать остаток или
; задавать товарную матрицу
;
warehouse=warehouse_code
;
; Признак необходимости добавлять товар в матрицу.
; Если указан параметр warehouse, то матрица устанавливается //
; для выбранного этим параметром склада, в противном случае - для //
; всех складов
;
; Значения:
;   -1 - игнорировать матрицу (эквивалентно отсутствию параметра)
;    0 - устанавливать для матрицы значение 0
;    1 - устанавливать для матрицы значение 1
; 1000 - устанавливать для матрицы значение 0 только если в базе
;        данных уже есть такой товар. В противном случае товар не 
;        добавлять и не приходовать
; 1001 - устанавливать для матрицы значение 1 только если в базе
;        данных уже есть такой товар. В противном случае товар не 
;        добавлять и не приходовать
;
matrix=-1,0,1 (bias *1000)

-----------------------------------------------------------------
ДИСКОНТНЫЕ КАРТЫ
Команда импорта: "Справочники/Админ/Импорт/Импорт дисконтых карт"
-----------------------------------------------------------------

[scard]
; Имя файла, из которого будут импортированы даные
file=filename
; Символ вида регистрационного документа, испольуземого в качестве 
; кода владельца карты
personcodereg=reg_symb
; Идентификатор серии, к которой должны относится импортируемые карты.
; Если серия не определена, то система использует серию с именем DEFAULT. 
; Если такая серия не существует, то создает новую серию с этим именем
seriesid=scser_id
; Текстовый код карты
code=fld_name
; Числовой код карты
; поле codenum имеет приоритет перед code. То есть, если значения есть и в 
; поле codenum и в поле code, то система использует поле codenum и преобразует 
; его в текст.
codenum=fld_name
; Код владельца карты. Привязка перосналии-владельца карты осуществляется //
; по этому коду, содержащемуся в регистре персоналии с типом personcodereg.
personcode=fld_name
; Процент скидки по карте
pctdis=fld_name
; Начальный оборот по карте. Заносится кассовым чеком, привязанным к этой 
; карте по нулевому кассовому узлу за 01/01/2001.
turnover=fld_name

------------------------------------------------------------
КОТИРОВКИ
Команда импорта: "Справочники/Админ/Импорт/Импорт котировок"
------------------------------------------------------------

[quot]
; * Имя файла, из которого будут импортированы даные
file=filename
;
; * QuotKind Name for importing.
; Сначала программа ищет котировку по символу quotname, а потом, 
; если символ не найден, по наименованию
quotname=string
;
; goods id
goodsid=fld_name
;
; goods code
; *(goodsid | goodscode)
goodscode=fld_name
;
; * goods name
goodsname=fld_name
;
; * price
price=fld_name
;
; Символ склада для которого устанавливать котировку
warehouse=warehouse_code
;
; currency symbol
cursymb=fld_name
