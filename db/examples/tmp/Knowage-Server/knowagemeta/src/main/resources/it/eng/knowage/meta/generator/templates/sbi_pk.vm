#if ($jpaTable.package != "")
package ${jpaTable.package};
#end

import java.io.Serializable;
import javax.persistence.*;
import org.hibernate.annotations.Type;

${jpaTable.importStatements}
/**
 * This is the primary key class for the ${jpaTable.sqlName} table.
 * 
 */
@Embeddable
public class ${jpaTable.compositeKeyClassName} implements Serializable {

	private static final long serialVersionUID = 1L;
#####
##### fields
#####
#foreach ($jpaColumn in $jpaTable.primaryKeyColumns)
		#parse("sbi_column.vm")
		private ${jpaColumn.propertyType} ${jpaColumn.propertyName};
#end

    public ${jpaTable.compositeKeyClassName}() {
    }
#####
##### simple properties getters and setters
#####
#foreach ($jpaColumn in $jpaTable.primaryKeyColumns)

public $jpaColumn.simplePropertyType $jpaColumn.propertyNameGetter () {
	return this.${jpaColumn.propertyName};
}
public void $jpaColumn.propertyNameSetter ($jpaColumn.simplePropertyType $jpaColumn.propertyName) {
	this.${jpaColumn.propertyName} = ${jpaColumn.propertyName};
}

#end

	public boolean equals(Object other) {
		if (this == other) {
			return true;
		}
		if (!(other instanceof ${jpaTable.compositeKeyClassName})) {
			return false;
		}
		${jpaTable.compositeKeyClassName} castOther = (${jpaTable.compositeKeyClassName})other;
		return 
			${jpaTable.primaryKeyEqualsClause}

    }
    
	public int hashCode() {
		final int prime = 31;
		int hash = 17;
		${jpaTable.primaryKeyHashCodeClause}
		return hash;
    }
}